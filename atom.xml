<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[My Octopress Blog]]></title>
  <link href="http://cielavenir.github.io/atom.xml" rel="self"/>
  <link href="http://cielavenir.github.io/"/>
  <updated>2017-01-22T23:17:32+09:00</updated>
  <id>http://cielavenir.github.io/</id>
  <author>
    <name><![CDATA[Ciel Avenir]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Personal Stuff]]></title>
    <link href="http://cielavenir.github.io/blog/2038/01/01/personal-stuff/"/>
    <updated>2038-01-01T00:00:00+09:00</updated>
    <id>http://cielavenir.github.io/blog/2038/01/01/personal-stuff</id>
    <content type="html"><![CDATA[<h3>Twitter</h3>

<ul>
<li><a href="https://twitter.com/cielavenir">https://twitter.com/cielavenir</a></li>
<li><a href="http://twilog.org/cielavenir">http://twilog.org/cielavenir</a></li>
<li><a href="http://twisave.com/cielavenir">http://twisave.com/cielavenir</a></li>
<li><a href="http://tweez.net/cielavenir">http://tweez.net/cielavenir</a></li>
</ul>


<h3>Accounts</h3>

<ul>
<li><a href="https://github.com/cielavenir">https://github.com/cielavenir</a></li>
<li><a href="https://rubygems.org/profiles/cielavenir">https://rubygems.org/profiles/cielavenir</a></li>
<li><a href="http://qiita.com/cielavenir">http://qiita.com/cielavenir</a></li>
<li><a href="https://forkwell.com/u/cielavenir/">https://forkwell.com/u/cielavenir/</a></li>
<li><a href="http://www.programmerprofile.net/user/cielavenir/">http://www.programmerprofile.net/user/cielavenir/</a></li>
<li><a href="https://stargzr.net/users/cielavenir">https://stargzr.net/users/cielavenir</a></li>
<li><a href="http://togetter.com/id/cielavenir">http://togetter.com/id/cielavenir</a></li>
<li><a href="https://www.instagram.com/cielartisan/">https://www.instagram.com/cielartisan/</a></li>
</ul>


<h3>巡拝</h3>

<ul>
<li>2015/01 関東三十六不動尊結願</li>
<li>2015/04 江戸三十三観音満願</li>
</ul>


<h3>資格等</h3>

<ul>
<li>英検2級</li>
<li>漢検2級</li>
<li>文検4級</li>
<li>普通自動車AT</li>
<li>Master of Integrated Biosciences</li>
<li><p>日本バイオインフォマティクス学会認定バイオインフォマティクス技術者</p></li>
<li><p>以下は受験料が無料だった時に適当に取ったので誇ることもない。</p>

<ul>
<li>Yahooデジカメエキスパート1級</li>
<li>Yahooタイピングエキスパート6級</li>
<li>(日本将棋連盟)将棋1級</li>
</ul>
</li>
</ul>


<h3>CodeIQ出題</h3>

<ul>
<li><a href="https://github.com/cielavenir/codeiq_problems">https://github.com/cielavenir/codeiq_problems</a>

<ul>
<li>Restricted Words (Hello World)は挑戦者数542人を記録。</li>
<li>Restricted Base32は少し残念。。</li>
</ul>
</li>
</ul>


<h3>CheckiO</h3>

<ul>
<li>(コーディング道場) The Same Gmail

<ul>
<li>Gmailの性質理解してますかって問題。悪問だったので他所では没になりました。</li>
</ul>
</li>
<li><a href="http://www.checkio.org/mission/painting-wall/share/8a0e0061de3ff95664776d904d309e57/">http://www.checkio.org/mission/painting-wall/share/8a0e0061de3ff95664776d904d309e57/</a>

<ul>
<li>当時は純粋なアルゴリズム問題は出したくないということでこっちに出した経緯。

<ul>
<li>ちなみに、今もモーニングクエスト枠(とRestricted)以外ではアルゴリズム問題は出していないです。</li>
</ul>
</li>
</ul>
</li>
<li><a href="http://www.checkio.org/mission/rotate-hole/share/ad54904cae112ddc65fa37533c5b0c1e/">http://www.checkio.org/mission/rotate-hole/share/ad54904cae112ddc65fa37533c5b0c1e/</a>

<ul>
<li>あれの設定を簡単にしてアルゴリズム部分だけを取り出した問題。</li>
</ul>
</li>
<li><a href="http://www.checkio.org/mission/exec-quine/share/2f386036b01111d06befa6820f2c2c5e/">http://www.checkio.org/mission/exec-quine/share/2f386036b01111d06befa6820f2c2c5e/</a>

<ul>
<li>Quineを書かせる問題はたくさんあるけど、CheckiOのシステム用にアレンジしてみたら面白そうな感じになった。</li>
</ul>
</li>
<li><a href="http://www.checkio.org/mission/fibonacci-golf/share/8e02b24099a9e339b86e73e4f4360524/">http://www.checkio.org/mission/fibonacci-golf/share/8e02b24099a9e339b86e73e4f4360524/</a>

<ul>
<li><a href="https://github.com/cielavenir/checkio-task-fibonacci-golf/blob/master/local_checker.py">https://github.com/cielavenir/checkio-task-fibonacci-golf/blob/master/local_checker.py</a></li>
<li><a href="https://github.com/cielavenir/checkio-task-fibonacci-golf/blob/master/local_checker.rb">https://github.com/cielavenir/checkio-task-fibonacci-golf/blob/master/local_checker.rb</a></li>
<li>(つまり、コンパイル後のサイズ)を使った問題をCodeIQで出したら面白いだろうなと思ったのだけど、一部から非難轟々になる恐れがあったのでやめた問題。</li>
</ul>
</li>
<li><a href="http://www.checkio.org/mission/adfgvx-cipher/share/558141829caa7987d18d95cd9f68ba9b/">http://www.checkio.org/mission/adfgvx-cipher/share/558141829caa7987d18d95cd9f68ba9b/</a>

<ul>
<li>暗号祭りに合わせて作った問題。ちなみに某所の暗号解読問題をアレンジして作ったので原案は私ではない。</li>
</ul>
</li>
</ul>


<h3>競技プログラミング等</h3>

<table>
<thead>
<tr>
<th style="text-align:left;">Judge</th>
<th style="text-align:left;">Rate</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left;">TopCoder</td>
<td style="text-align:left;">1016 (緑のまま引退の危機)</td>
</tr>
<tr>
<td style="text-align:left;">Codeforces</td>
<td style="text-align:left;">1666 (青が1600-1899になったので引退しました)</td>
</tr>
<tr>
<td style="text-align:left;">HackerRank</td>
<td style="text-align:left;">2303</td>
</tr>
<tr>
<td style="text-align:left;">AtCoder</td>
<td style="text-align:left;">1700程度</td>
</tr>
<tr>
<td style="text-align:left;">yukicoder</td>
<td style="text-align:left;">Lv 75</td>
</tr>
<tr>
<td style="text-align:left;">AOJ</td>
<td style="text-align:left;">658問</td>
</tr>
<tr>
<td style="text-align:left;">POJ</td>
<td style="text-align:left;">275問</td>
</tr>
<tr>
<td style="text-align:left;">CodeIQ</td>
<td style="text-align:left;">バッジ数・スキルピース数トップ</td>
</tr>
<tr>
<td style="text-align:left;">paiza</td>
<td style="text-align:left;">paizaマスター、言語マスター</td>
</tr>
<tr>
<td style="text-align:left;">CheckiO</td>
<td style="text-align:left;">全問解答</td>
</tr>
<tr>
<td style="text-align:left;">8946</td>
<td style="text-align:left;">残3問</td>
</tr>
</tbody>
</table>


<table>
<thead>
<tr>
<th style="text-align:left;">(少なくとも表彰式が)オンサイトの大会</th>
<th style="text-align:left;">(成績)</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left;">RProcon 2013</td>
<td></td>
</tr>
<tr>
<td style="text-align:left;">CodeSCORE 2014</td>
<td style="text-align:left;">本選単独満点・優勝/50</td>
</tr>
<tr>
<td style="text-align:left;">Code Formula 2014</td>
<td style="text-align:left;">本選36位(銀賞)/100</td>
</tr>
<tr>
<td style="text-align:left;">CODE FESTIVAL 2014</td>
<td style="text-align:left;">112位/200、あさプロ Middle23位(銀賞)/100</td>
</tr>
<tr>
<td style="text-align:left;">Data League 2014</td>
<td style="text-align:left;">本選17位/18</td>
</tr>
<tr>
<td style="text-align:left;">Code Runner 2014</td>
<td style="text-align:left;">本選19位/100</td>
</tr>
<tr>
<td style="text-align:left;">CODE FESTIVAL 2015</td>
<td style="text-align:left;">116位/200、あさプロ Easy7位(入賞)/100 Middle77位/70+α</td>
</tr>
<tr>
<td style="text-align:left;">Data League 2015</td>
<td style="text-align:left;">12位/46</td>
</tr>
<tr>
<td style="text-align:left;">Code Runner 2015</td>
<td style="text-align:left;">本選33位/100</td>
</tr>
<tr>
<td style="text-align:left;">CODE FESTIVAL 2016</td>
<td style="text-align:left;">84位/220、Elimination Tournament Round3進出</td>
</tr>
</tbody>
</table>


<h3>音楽ゲーム</h3>

<table>
<thead>
<tr>
<th style="text-align:left;">ゲーム</th>
<th style="text-align:left;">ID</th>
<th style="text-align:left;">成績</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left;">[TAITO]</td>
<td style="text-align:left;"></td>
<td></td>
</tr>
<tr>
<td style="text-align:left;">グルーヴコースター</td>
<td style="text-align:left;">AC：asn66m4n</td>
<td style="text-align:left;">CS(Android)：約2000位。(機種変更回数の上限を知り絶望)ほぼ引退。<br><a href="https://docs.google.com/spreadsheets/d/1mNx4Ea36CaSmYRqGyX0oRftIBVuUlOVQbtaacQbpYHc/edit?usp=sharing">AC：500位台。Perfect6、S++51</a> <a href="http://gc.kt-flcl.com/spread/">※</a></td>
</tr>
<tr>
<td style="text-align:left;">[SEGA]</td>
<td style="text-align:left;"></td>
<td></td>
</tr>
<tr>
<td style="text-align:left;">maimai</td>
<td style="text-align:left;"></td>
<td style="text-align:left;"><a href="http://maimai-log.net/view/cielavenir"><strong>9.74</strong></a></td>
</tr>
<tr>
<td style="text-align:left;">chunithm</td>
<td style="text-align:left;">2037702683463</td>
<td style="text-align:left;"><a href="http://chuniviewer.net/rate?user=ciel"><strong>12.58</strong></a></td>
</tr>
<tr>
<td style="text-align:left;">DIVA</td>
<td style="text-align:left;">CWAAQK79AD</td>
<td></td>
</tr>
<tr>
<td style="text-align:left;">[BNEI]</td>
<td style="text-align:left;"></td>
<td></td>
</tr>
<tr>
<td style="text-align:left;">太鼓の達人</td>
<td style="text-align:left;"><a href="http://donderhiroba.jp/user_profile.php?taiko_no=532629126552">532629126552</a></td>
<td style="text-align:left;">モモイロ初級(苦笑)</td>
</tr>
<tr>
<td style="text-align:left;">シンクロニカ</td>
<td style="text-align:left;"><a href="https://lounge.synchronica.jp/Friend/info/46fade365cce05f806f0445be25bfd761acb2400">46fade365cce05f806f0445be25bfd761acb2400</a> <a href="http://cielavenir.github.io/blog/2015/07/19/synchronica-id/">※</a></td>
<td></td>
</tr>
<tr>
<td style="text-align:left;">[CAPCOM]</td>
<td style="text-align:left;"></td>
<td></td>
</tr>
<tr>
<td style="text-align:left;">crossbeats</td>
<td style="text-align:left;">51486150</td>
<td style="text-align:left;"><a href="http://cxbrank.maplia.jp/view/00652">2016/10 RP1600達成</a></td>
</tr>
<tr>
<td style="text-align:left;">crossbeats REV.</td>
<td style="text-align:left;"><a href="https://rev-srw.ac.capcom.jp/profile/76435928">76435928</a></td>
<td style="text-align:left;"><a href="https://revrank.maplia.jp/sunrise/view/00057">Class III RP1345.87</a></td>
</tr>
<tr>
<td style="text-align:left;">(Cytus)</td>
<td style="text-align:left;"></td>
<td></td>
</tr>
<tr>
<td style="text-align:left;">[KONAMI]</td>
<td style="text-align:left;"></td>
<td></td>
</tr>
<tr>
<td style="text-align:left;">jubeat saucer</td>
<td style="text-align:left;">57710108066051</td>
<td style="text-align:left;">3.50</td>
</tr>
<tr>
<td style="text-align:left;">jubeat prop</td>
<td style="text-align:left;">60930017972907</td>
<td style="text-align:left;"><a href="http://cycr.net/jubeat/prop/data.php?id=60930017972907&amp;sort=jubility">Step 15</a></td>
</tr>
<tr>
<td style="text-align:left;">jubeat qubell</td>
<td style="text-align:left;">60930007106643</td>
<td style="text-align:left;"><a href="http://cycr.net/jubeat/qubell/data.php?id=60930007106643&amp;sort=jubility&amp;jblt=1">Stage 5クリア</a></td>
</tr>
<tr>
<td style="text-align:left;">Reflec Beat VOLZZA</td>
<td style="text-align:left;">RB-6564-2108</td>
<td style="text-align:left;">CLASS 8</td>
</tr>
<tr>
<td style="text-align:left;">DDR</td>
<td style="text-align:left;">41242214</td>
<td style="text-align:left;">Enjoy LV 18</td>
</tr>
<tr>
<td style="text-align:left;">弐寺</td>
<td style="text-align:left;">3492-2945</td>
<td style="text-align:left;">(pendual) SP7級、step up ED1</td>
</tr>
<tr>
<td style="text-align:left;">pop'n</td>
<td style="text-align:left;">4392-2014-5346</td>
<td></td>
</tr>
<tr>
<td style="text-align:left;">BeatStream</td>
<td style="text-align:left;"></td>
<td style="text-align:left;">Beast <strong>Rank9</strong></td>
</tr>
<tr>
<td style="text-align:left;">SDVX</td>
<td style="text-align:left;">SV-2080-7171</td>
<td></td>
</tr>
<tr>
<td style="text-align:left;">museca</td>
<td style="text-align:left;"></td>
<td style="text-align:left;">Curator Rank12</td>
</tr>
<tr>
<td style="text-align:left;">GD</td>
<td style="text-align:left;">0009ee6234</td>
<td style="text-align:left;">iOSは1600取って放置、ACは引き継ぎだけした(スキルポイント引き継がれないの…？)</td>
</tr>
<tr>
<td style="text-align:left;">[他]</td>
<td style="text-align:left;"></td>
<td></td>
</tr>
<tr>
<td style="text-align:left;">ちくたくコンチェルト</td>
<td style="text-align:left;">0364886461</td>
<td style="text-align:left;">exc54</td>
</tr>
<tr>
<td style="text-align:left;">はちはち</td>
<td style="text-align:left;"></td>
<td style="text-align:left;">(削除済)</td>
</tr>
</tbody>
</table>


<h3>作ったもの</h3>

<table>
<thead>
<tr>
<th style="text-align:left;"></th>
<th style="text-align:left;">URL</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left;">cTouch</td>
<td style="text-align:left;"><a href="https://github.com/cielavenir/ctouch/">https://github.com/cielavenir/ctouch/</a><br><a href="https://sourceforge.net/projects/ctouch/">https://sourceforge.net/projects/ctouch/</a></td>
</tr>
<tr>
<td style="text-align:left;">picrawler</td>
<td style="text-align:left;"><a href="https://github.com/cielavenir/picrawler/">https://github.com/cielavenir/picrawler/</a></td>
</tr>
<tr>
<td style="text-align:left;">R on iOS</td>
<td style="text-align:left;">(記入時点でrwikiが落ちている…何たること…)<br><a href="http://rwiki.sciviews.org/doku.php?id=getting-started:installation:iphone">http://rwiki.sciviews.org/doku.php?id=getting-started:installation:iphone</a></td>
</tr>
<tr>
<td style="text-align:left;">R on Android</td>
<td style="text-align:left;"><a href="http://rwiki.sciviews.org/doku.php?id=getting-started:installation:android">http://rwiki.sciviews.org/doku.php?id=getting-started:installation:android</a></td>
</tr>
<tr>
<td style="text-align:left;">Google TwoFactor Authenticator on PSP</td>
<td style="text-align:left;"><a href="http://qiita.com/cielavenir/items/a13215069306eeaa24bf">http://qiita.com/cielavenir/items/a13215069306eeaa24bf</a></td>
</tr>
<tr>
<td style="text-align:left;">qinstall</td>
<td style="text-align:left;"><a href="https://github.com/cielavenir/qinstall">https://github.com/cielavenir/qinstall</a></td>
</tr>
<tr>
<td style="text-align:left;">Ruby multisax</td>
<td style="text-align:left;"><a href="https://github.com/cielavenir/ruby-chan">https://github.com/cielavenir/ruby-chan</a><br><a href="https://github.com/cielavenir/mruby-chan">https://github.com/cielavenir/mruby-chan</a></td>
</tr>
<tr>
<td style="text-align:left;">Ruby chan (bidirectional iterator)</td>
<td style="text-align:left;"><a href="https://github.com/cielavenir/multisax">https://github.com/cielavenir/multisax</a></td>
</tr>
<tr>
<td style="text-align:left;">gyao_url_another.rb</td>
<td style="text-align:left;"><a href="https://gist.github.com/cielavenir/a858255c4009ecbb9b67">https://gist.github.com/cielavenir/a858255c4009ecbb9b67</a></td>
</tr>
<tr>
<td style="text-align:left;">install_npapi.sh/install_ppapi.sh (OSX Flash)</td>
<td style="text-align:left;"><a href="https://github.com/cielavenir/flashupdate">https://github.com/cielavenir/flashupdate</a></td>
</tr>
</tbody>
</table>


<h3>発見したバグ</h3>

<ul>
<li>mdbtools

<ul>
<li>ODBCドライバにおいて、(MicrosoftAccessと違い)DBQ引数が取れない</li>
<li>ODBCドライバでマルチバイト文字列が扱えない</li>
</ul>
</li>
<li>ExGame (モバゲーのFlashランタイム)

<ul>
<li>Android Chrome/iOS6で文字が表示できない</li>
</ul>
</li>
<li>RVM

<ul>
<li>古いMac(本来i386だがboot.efiハックでx86_64化が可能なモデル)をMountain Lionにアップデートした時に、カーネルがx86_64に切り替わるが、libyaml.dylibがi386のまま正しく読み込まれず、x86_64用にリビルドもされない</li>
</ul>
</li>
<li>Google Chrome

<ul>
<li>filesystem APIのクオータ要求時に警告バーが出るが、この要求を機能拡張のポップアップ画面内で行うと警告バーが出る代わりに(親ごと)クラッシュする</li>
</ul>
</li>
<li>嫁コレ

<ul>
<li>APIトークンにIMEIをハッシュではなく暗号化したものを用いているため、嫁コレサーバー側で生IMEIを取り出すことができる。一部通信はHTTPで行われているため盗聴も可能である</li>
<li>3.4.xで修正された</li>
</ul>
</li>
<li>東京100ガイド

<ul>
<li>WiMAX環境で使用できない</li>
<li>修正済み</li>
</ul>
</li>
</ul>


<h3>イラスト</h3>

<ul>
<li>deviantART (私のtwitterアイコン原画等。限定公開)</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[atcoder] Tournament]]></title>
    <link href="http://cielavenir.github.io/blog/2017/01/22/tournament/"/>
    <updated>2017-01-22T23:10:00+09:00</updated>
    <id>http://cielavenir.github.io/blog/2017/01/22/tournament</id>
    <content type="html"><![CDATA[<p><a href="https://agc009.contest.atcoder.jp/tasks/agc009_b">https://agc009.contest.atcoder.jp/tasks/agc009_b</a></p>

<h2>概要</h2>

<ul>
<li>トーナメント戦を行ったところ、1番の選手が優勝した。</li>
<li>他の選手について、誰に負けたのかが与えられるので、条件をみたすようなトーナメント表の深さの最低値を求めよ。</li>
</ul>


<h2>考察</h2>

<ul>
<li>ある選手がどの選手を倒したかのグラフを作成し、1番の選手から再帰。</li>
<li>倒した選手(N人)のそれぞれについてトーナメント表の深さを求めようとする(倒した選手がいなければ0)。</li>
<li>深さを降順にソートし、これらに1からNまでの数値を割り当てて、足す。</li>
<li>足した後の配列の最大値が答えである。</li>
</ul>


<h2>再帰の深さ</h2>

<ul>
<li>単純に実装すると、最悪10万回の再帰が必要になり、スタックオーバーフローになるおそれがある。</li>
<li>今回、C++は <strong>偶然</strong> 大丈夫であったが、RubyやPythonだと不可であった。

<ul>
<li>スタック拡張テクを使っても依然として通らない。</li>
</ul>
</li>
<li>今回は場当たり的(テストケース依存)な対応になるが、N/2番の選手から一旦再帰しておくことで再帰の深さをある程度減らすことができる。

<ul>
<li>この状態でもスタック拡張テクは依然として必要である。</li>
</ul>
</li>
</ul>


<h2>解答例</h2>

<ul>
<li>C++11

<ul>
<li><a href="http://agc009.contest.atcoder.jp/submissions/1076375">http://agc009.contest.atcoder.jp/submissions/1076375</a></li>
</ul>
</li>
<li>Ruby

<ul>
<li><a href="http://agc009.contest.atcoder.jp/submissions/1076373">http://agc009.contest.atcoder.jp/submissions/1076373</a></li>
</ul>
</li>
<li>Python

<ul>
<li><a href="http://agc009.contest.atcoder.jp/submissions/1076368">http://agc009.contest.atcoder.jp/submissions/1076368</a></li>
<li>なお、なぜかPyPyでは通らない。</li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[単位取得退学します]]></title>
    <link href="http://cielavenir.github.io/blog/2016/12/10/retrieve/"/>
    <updated>2016-12-10T00:00:00+09:00</updated>
    <id>http://cielavenir.github.io/blog/2016/12/10/retrieve</id>
    <content type="html"><![CDATA[<p>【<a href="http://www.adventar.org/calendars/1388">http://www.adventar.org/calendars/1388</a> の12/10分です】</p>

<h2>高校</h2>

<p>東大はBランクだったが、記念受験とした結果実力を出し切れたらしい。(現役)</p>

<h2>学部</h2>

<p>今の研究室には学部時代の体験ゼミでお世話になった。生物とコンピュータを両方取り扱う分野ということで興味を持った。
学部の研究室は、今の研究室の教授から紹介してもらった。割と良い論文が書けた。</p>

<h2>修士</h2>

<p>割と良い論文が書けた、とあるが、これは学士の水準である。これを修士の基準に持っていくのは不可能であった。
1個目のテーマは論文を書いたが、学士よりも酷い内容だったので捨てた。
最終的なテーマを決めるのには結局2年半かかった(※1留)ということになり、半年で修士論文を書いた。こちらはまあまあの出来だった。</p>

<h2>博士</h2>

<p>博士号取得要件は、論文を査読付き雑誌に掲載することである。
修士論文のテーマでは不可能だった。
結局まともな研究を始めたのは2年秋だった。
博士3年の初めにfastqの話で論文を書いたが、内容に不備があり、修正叶わず投稿には至っていない。
予備審査は通して頂けたが、本当にやる気のある学生なら1ヶ月で仕上げられられる内容の研究しかしていない。
データの不足を痛感しつつも、親の希望により職に就くこととなった。</p>

<hr />

<p>というわけで2017/3を以って単位取得退学となる。まずは3月までに雑誌に投稿できるかが勝負である。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[yukicoder] (^^*)]]></title>
    <link href="http://cielavenir.github.io/blog/2016/12/09/smile/"/>
    <updated>2016-12-09T00:00:00+09:00</updated>
    <id>http://cielavenir.github.io/blog/2016/12/09/smile</id>
    <content type="html"><![CDATA[<p><a href="http://yukicoder.me/problems/no/457">http://yukicoder.me/problems/no/457</a></p>

<h2>概要</h2>

<ul>
<li>間に部分列<code>^^*</code>を含むような(と)の組み合わせの個数を求めよ。

<ul>
<li><code>reverse.tr('()',')(')</code>なる処理を加えれば右向きを別に考えなくて良くなる。</li>
</ul>
</li>
</ul>


<h2>考察</h2>

<h3>O(S<sup>2</sup> logS)</h3>

<ul>
<li>(と)の組み合わせをすべて求めて、それぞれに対し、<code>^^*</code>が含まれることを判定します。</li>
<li>まず<code>^^</code>が含まれる一番左の座標を求めます。

<ul>
<li>その座標までに含まれる<code>^</code>の個数を累積和として持ち、(の座標における累積和+2を2分探索します。</li>
</ul>
</li>
<li>次に、その座標から)の座標までについて、<code>*</code>が含まれるかどうかを2分探索します。</li>
<li>以上により<code>O(S^2 logS)</code>となり、C++では通すことができます。

<ul>
<li>本家解説によると愚直解はTLEらしいですが、2分探索に落とし込んだことが功を奏したのでしょうか。</li>
</ul>
</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="cp">#include &lt;vector&gt;</span>
</span><span class='line'><span class="cp">#include &lt;algorithm&gt;</span>
</span><span class='line'><span class="cp">#include &lt;cstdio&gt;</span>
</span><span class='line'><span class="cp">#include &lt;cstring&gt;</span>
</span><span class='line'><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">solve</span><span class="p">(</span><span class="kt">char</span> <span class="o">*</span><span class="n">s</span><span class="p">,</span><span class="kt">int</span> <span class="n">len</span><span class="p">){</span>
</span><span class='line'>  <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span><span class="n">al</span><span class="p">;</span>
</span><span class='line'>  <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span><span class="n">ar</span><span class="p">;</span>
</span><span class='line'>  <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span><span class="n">ah</span><span class="p">(</span><span class="n">len</span><span class="p">);</span>
</span><span class='line'>  <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span><span class="n">ast</span><span class="p">;</span>
</span><span class='line'>  <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">len</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">){</span>
</span><span class='line'>      <span class="k">if</span><span class="p">(</span><span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">==</span><span class="sc">&#39;(&#39;</span><span class="p">){</span>
</span><span class='line'>          <span class="n">al</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">i</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">==</span><span class="sc">&#39;)&#39;</span><span class="p">){</span>
</span><span class='line'>          <span class="n">ar</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">i</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">==</span><span class="sc">&#39;^&#39;</span><span class="p">){</span>
</span><span class='line'>          <span class="n">ah</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">++</span><span class="p">;</span>
</span><span class='line'>      <span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">==</span><span class="sc">&#39;*&#39;</span><span class="p">){</span>
</span><span class='line'>          <span class="n">ast</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">i</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">len</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">)</span><span class="n">ah</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">+=</span><span class="n">ah</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">];</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">ret</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
</span><span class='line'>  <span class="k">for</span><span class="p">(</span><span class="k">auto</span> <span class="o">&amp;</span><span class="nl">l</span><span class="p">:</span><span class="n">al</span><span class="p">){</span>
</span><span class='line'>      <span class="k">for</span><span class="p">(</span><span class="k">auto</span> <span class="o">&amp;</span><span class="nl">r</span><span class="p">:</span><span class="n">ar</span><span class="p">){</span>
</span><span class='line'>          <span class="k">if</span><span class="p">(</span><span class="n">l</span><span class="o">&gt;=</span><span class="n">r</span><span class="p">)</span><span class="k">continue</span><span class="p">;</span>
</span><span class='line'>          <span class="kt">int</span> <span class="n">hidx</span><span class="o">=</span><span class="n">distance</span><span class="p">(</span><span class="n">ah</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span><span class="n">lower_bound</span><span class="p">(</span><span class="n">ah</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span><span class="n">ah</span><span class="p">.</span><span class="n">end</span><span class="p">(),</span><span class="n">ah</span><span class="p">[</span><span class="n">l</span><span class="p">]</span><span class="o">+</span><span class="mi">2</span><span class="p">));</span>
</span><span class='line'>          <span class="k">if</span><span class="p">(</span><span class="n">hidx</span><span class="o">&gt;=</span><span class="n">r</span><span class="p">)</span><span class="k">continue</span><span class="p">;</span>
</span><span class='line'>          <span class="k">auto</span> <span class="n">st</span><span class="o">=</span><span class="n">lower_bound</span><span class="p">(</span><span class="n">ast</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span><span class="n">ast</span><span class="p">.</span><span class="n">end</span><span class="p">(),</span><span class="n">hidx</span><span class="p">);</span>
</span><span class='line'>          <span class="k">if</span><span class="p">(</span><span class="n">st</span><span class="o">!=</span><span class="n">ast</span><span class="p">.</span><span class="n">end</span><span class="p">()</span><span class="o">&amp;&amp;*</span><span class="n">st</span><span class="o">&lt;</span><span class="n">r</span><span class="p">){</span>
</span><span class='line'>              <span class="n">ret</span><span class="o">++</span><span class="p">;</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">ret</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="kt">char</span> <span class="n">s</span><span class="p">[</span><span class="mi">10001</span><span class="p">];</span>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(){</span>
</span><span class='line'>  <span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%s&quot;</span><span class="p">,</span><span class="n">s</span><span class="p">);</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">len</span><span class="o">=</span><span class="n">strlen</span><span class="p">(</span><span class="n">s</span><span class="p">);</span>
</span><span class='line'>  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%d &quot;</span><span class="p">,</span><span class="n">solve</span><span class="p">(</span><span class="n">s</span><span class="p">,</span><span class="n">len</span><span class="p">));</span>
</span><span class='line'>  <span class="n">reverse</span><span class="p">(</span><span class="n">s</span><span class="p">,</span><span class="n">s</span><span class="o">+</span><span class="n">len</span><span class="p">);</span>
</span><span class='line'>  <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">len</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">){</span>
</span><span class='line'>      <span class="k">if</span><span class="p">(</span><span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">==</span><span class="sc">&#39;(&#39;</span><span class="p">)</span><span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">=</span><span class="sc">&#39;)&#39;</span><span class="p">;</span>
</span><span class='line'>      <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">==</span><span class="sc">&#39;)&#39;</span><span class="p">)</span><span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">=</span><span class="sc">&#39;(&#39;</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">solve</span><span class="p">(</span><span class="n">s</span><span class="p">,</span><span class="n">len</span><span class="p">));</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>O(SlogS)</h3>

<ul>
<li>以下、最も重いループの計算量を減らすことを考えます。</li>
<li>まず、rは単調増加であるため、<code>st!=ast.end()&amp;&amp;*st&lt;r</code>が一度真になれば、そのループの中では常に真になります。よってキャッシュすることができます。</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="k">for</span><span class="p">(</span><span class="k">auto</span> <span class="o">&amp;</span><span class="nl">l</span><span class="p">:</span><span class="n">al</span><span class="p">){</span>
</span><span class='line'>  <span class="kt">bool</span> <span class="n">f</span><span class="o">=</span><span class="nb">false</span><span class="p">;</span>
</span><span class='line'>  <span class="k">for</span><span class="p">(</span><span class="k">auto</span> <span class="o">&amp;</span><span class="nl">r</span><span class="p">:</span><span class="n">ar</span><span class="p">){</span>
</span><span class='line'>      <span class="k">if</span><span class="p">(</span><span class="n">l</span><span class="o">&gt;=</span><span class="n">r</span><span class="p">)</span><span class="k">continue</span><span class="p">;</span>
</span><span class='line'>      <span class="k">if</span><span class="p">(</span><span class="n">f</span><span class="p">){</span><span class="n">ret</span><span class="o">++</span><span class="p">;</span><span class="k">continue</span><span class="p">;}</span>
</span><span class='line'>      <span class="kt">int</span> <span class="n">hidx</span><span class="o">=</span><span class="n">distance</span><span class="p">(</span><span class="n">ah</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span><span class="n">lower_bound</span><span class="p">(</span><span class="n">ah</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span><span class="n">ah</span><span class="p">.</span><span class="n">end</span><span class="p">(),</span><span class="n">ah</span><span class="p">[</span><span class="n">l</span><span class="p">]</span><span class="o">+</span><span class="mi">2</span><span class="p">));</span>
</span><span class='line'>      <span class="k">if</span><span class="p">(</span><span class="n">hidx</span><span class="o">&gt;=</span><span class="n">r</span><span class="p">)</span><span class="k">continue</span><span class="p">;</span>
</span><span class='line'>      <span class="k">auto</span> <span class="n">st</span><span class="o">=</span><span class="n">lower_bound</span><span class="p">(</span><span class="n">ast</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span><span class="n">ast</span><span class="p">.</span><span class="n">end</span><span class="p">(),</span><span class="n">hidx</span><span class="p">);</span>
</span><span class='line'>      <span class="k">if</span><span class="p">(</span><span class="n">st</span><span class="o">!=</span><span class="n">ast</span><span class="p">.</span><span class="n">end</span><span class="p">()</span><span class="o">&amp;&amp;*</span><span class="n">st</span><span class="o">&lt;</span><span class="n">r</span><span class="p">){</span>
</span><span class='line'>          <span class="n">ret</span><span class="o">++</span><span class="p">;</span>
</span><span class='line'>          <span class="n">f</span><span class="o">=</span><span class="nb">true</span><span class="p">;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>さらに、hidxおよびstはrに依存しないため、ループrの外で計算しておいて問題ないことがわかります。</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="k">for</span><span class="p">(</span><span class="k">auto</span> <span class="o">&amp;</span><span class="nl">l</span><span class="p">:</span><span class="n">al</span><span class="p">){</span>
</span><span class='line'>  <span class="c1">// if hidx&gt;=r, l&gt;=r is assured because hidx&gt;l.</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">hidx</span><span class="o">=</span><span class="n">distance</span><span class="p">(</span><span class="n">ah</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span><span class="n">lower_bound</span><span class="p">(</span><span class="n">ah</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span><span class="n">ah</span><span class="p">.</span><span class="n">end</span><span class="p">(),</span><span class="n">ah</span><span class="p">[</span><span class="n">l</span><span class="p">]</span><span class="o">+</span><span class="mi">2</span><span class="p">));</span>
</span><span class='line'>  <span class="c1">// if hidx==ah.size(), st==ast.end() is assured because hidx==len.</span>
</span><span class='line'>  <span class="k">auto</span> <span class="n">st</span><span class="o">=</span><span class="n">lower_bound</span><span class="p">(</span><span class="n">ast</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span><span class="n">ast</span><span class="p">.</span><span class="n">end</span><span class="p">(),</span><span class="n">hidx</span><span class="p">);</span>
</span><span class='line'>  <span class="kt">bool</span> <span class="n">f</span><span class="o">=</span><span class="nb">false</span><span class="p">;</span>
</span><span class='line'>  <span class="k">for</span><span class="p">(</span><span class="k">auto</span> <span class="o">&amp;</span><span class="nl">r</span><span class="p">:</span><span class="n">ar</span><span class="p">){</span>
</span><span class='line'>      <span class="k">if</span><span class="p">(</span><span class="n">f</span><span class="p">){</span><span class="n">ret</span><span class="o">++</span><span class="p">;</span><span class="k">continue</span><span class="p">;}</span>
</span><span class='line'>      <span class="k">if</span><span class="p">(</span><span class="n">st</span><span class="o">!=</span><span class="n">ast</span><span class="p">.</span><span class="n">end</span><span class="p">()</span><span class="o">&amp;&amp;*</span><span class="n">st</span><span class="o">&lt;</span><span class="n">r</span><span class="p">){</span>
</span><span class='line'>          <span class="n">ret</span><span class="o">++</span><span class="p">;</span>
</span><span class='line'>          <span class="n">f</span><span class="o">=</span><span class="nb">true</span><span class="p">;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>arのループは<code>FF...FFTT...TT</code>のようになるので、このTになる場所を2分探索できます。</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="k">for</span><span class="p">(</span><span class="k">auto</span> <span class="o">&amp;</span><span class="nl">l</span><span class="p">:</span><span class="n">al</span><span class="p">){</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">hidx</span><span class="o">=</span><span class="n">lower_bound</span><span class="p">(</span><span class="n">ah</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span><span class="n">ah</span><span class="p">.</span><span class="n">end</span><span class="p">(),</span><span class="n">ah</span><span class="p">[</span><span class="n">l</span><span class="p">]</span><span class="o">+</span><span class="mi">2</span><span class="p">)</span><span class="o">-</span><span class="n">ah</span><span class="p">.</span><span class="n">begin</span><span class="p">();</span>
</span><span class='line'>  <span class="k">auto</span> <span class="n">st</span><span class="o">=</span><span class="n">lower_bound</span><span class="p">(</span><span class="n">ast</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span><span class="n">ast</span><span class="p">.</span><span class="n">end</span><span class="p">(),</span><span class="n">hidx</span><span class="p">);</span>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="n">st</span><span class="o">==</span><span class="n">ast</span><span class="p">.</span><span class="n">end</span><span class="p">())</span><span class="k">break</span><span class="p">;</span>
</span><span class='line'>  <span class="n">ret</span><span class="o">+=</span><span class="n">ar</span><span class="p">.</span><span class="n">end</span><span class="p">()</span><span class="o">-</span><span class="n">lower_bound</span><span class="p">(</span><span class="n">ar</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span><span class="n">ar</span><span class="p">.</span><span class="n">end</span><span class="p">(),</span><span class="o">*</span><span class="n">st</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>最後に、範囲を狭めるためのtweakを入れます(必要ではありませんが…)。</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="k">auto</span> <span class="n">ist</span><span class="o">=</span><span class="n">ast</span><span class="p">.</span><span class="n">begin</span><span class="p">();</span>
</span><span class='line'><span class="k">auto</span> <span class="n">ir</span><span class="o">=</span><span class="n">ar</span><span class="p">.</span><span class="n">begin</span><span class="p">();</span>
</span><span class='line'><span class="k">for</span><span class="p">(</span><span class="k">auto</span> <span class="o">&amp;</span><span class="nl">l</span><span class="p">:</span><span class="n">al</span><span class="p">){</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">hidx</span><span class="o">=</span><span class="n">lower_bound</span><span class="p">(</span><span class="n">ah</span><span class="p">.</span><span class="n">begin</span><span class="p">()</span><span class="o">+</span><span class="n">l</span><span class="p">,</span><span class="n">ah</span><span class="p">.</span><span class="n">end</span><span class="p">(),</span><span class="n">ah</span><span class="p">[</span><span class="n">l</span><span class="p">]</span><span class="o">+</span><span class="mi">2</span><span class="p">)</span><span class="o">-</span><span class="n">ah</span><span class="p">.</span><span class="n">begin</span><span class="p">();</span>
</span><span class='line'>  <span class="n">ist</span><span class="o">=</span><span class="n">lower_bound</span><span class="p">(</span><span class="n">ist</span><span class="p">,</span><span class="n">ast</span><span class="p">.</span><span class="n">end</span><span class="p">(),</span><span class="n">hidx</span><span class="p">);</span>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="n">ist</span><span class="o">==</span><span class="n">ast</span><span class="p">.</span><span class="n">end</span><span class="p">())</span><span class="k">break</span><span class="p">;</span>
</span><span class='line'>  <span class="n">ret</span><span class="o">+=</span><span class="n">ar</span><span class="p">.</span><span class="n">end</span><span class="p">()</span><span class="o">-</span><span class="p">(</span><span class="n">ir</span><span class="o">=</span><span class="n">lower_bound</span><span class="p">(</span><span class="n">ir</span><span class="p">,</span><span class="n">ar</span><span class="p">.</span><span class="n">end</span><span class="p">(),</span><span class="o">*</span><span class="n">ist</span><span class="p">));</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>以上で<code>O(SlogS)</code>となり、Rubyでも通すことができます。

<ul>
<li>C++ <a href="http://yukicoder.me/submissions/136737">http://yukicoder.me/submissions/136737</a></li>
<li>Ruby <a href="http://yukicoder.me/submissions/136749">http://yukicoder.me/submissions/136749</a></li>
</ul>
</li>
</ul>


<h3>O(S)</h3>

<ul>
<li>動的計画法により<code>O(S)</code>に落とせるようです。コードがより短い実装はそうなっているものが多いようです。</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[atcoder] 木の問題]]></title>
    <link href="http://cielavenir.github.io/blog/2016/11/30/problem-on-tree/"/>
    <updated>2016-11-30T15:07:16+09:00</updated>
    <id>http://cielavenir.github.io/blog/2016/11/30/problem-on-tree</id>
    <content type="html"><![CDATA[<p><a href="https://cf16-relay-open.contest.atcoder.jp/tasks/relay_k">https://cf16-relay-open.contest.atcoder.jp/tasks/relay_k</a></p>

<h2>概要</h2>

<ul>
<li>問題文がそれなりに読みにくい。</li>
<li>いわんとしていることは、選んだ頂点については2回通ってはならないということである。この状況で選ぶ頂点の数を最大化すれば良い。</li>
<li>答えは木の直径以上になることは容易に想像がつく。</li>
</ul>


<h2>考察</h2>

<ul>
<li>枝分かれする(辺が3本以上ある)頂点については、つながっている辺の先にある葉(辺が1本ある頂点)を選んだほうが良いのは明らかである。</li>
<li>問題は辺がちょうど2本ある頂点であるが、木の直径上にある頂点を選ぶ方法でサンプルは通る。</li>
<li>しかし、たとえばこういう入力の場合、sub-optimalになってしまう。</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>o-o-o-o-o
</span><span class='line'>    |
</span><span class='line'>  o-o-o
</span><span class='line'>    |
</span><span class='line'>  o-o-o
</span><span class='line'>    |
</span><span class='line'>  o-o-o
</span><span class='line'>    |
</span><span class='line'>    o</span></code></pre></td></tr></table></div></figure>


<ul>
<li>対処するには、木の直径を求めるコードを変形し、頂点の重みを、辺が2本ある場合のみ1に、それ以外は0とすれば良い。</li>
</ul>


<h2>解答例</h2>

<ul>
<li>C++14

<ul>
<li>Based on <a href="http://www.prefield.com/algorithm/graph/tree_diameter.html">Spaghetti Source</a></li>
<li><a href="https://cf16-relay-open.contest.atcoder.jp/submissions/1003862">https://cf16-relay-open.contest.atcoder.jp/submissions/1003862</a></li>
</ul>
</li>
<li>Ruby

<ul>
<li><a href="https://cf16-relay-open.contest.atcoder.jp/submissions/1003865">https://cf16-relay-open.contest.atcoder.jp/submissions/1003865</a></li>
</ul>
</li>
</ul>


<h2>感想</h2>

<ul>
<li>これを時間内に思いつくのはやはりすごいと思いました…</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Code Festival 2016 参加記]]></title>
    <link href="http://cielavenir.github.io/blog/2016/11/28/code-festival-2016/"/>
    <updated>2016-11-28T22:06:30+09:00</updated>
    <id>http://cielavenir.github.io/blog/2016/11/28/code-festival-2016</id>
    <content type="html"><![CDATA[<p>参加記です。</p>

<h2>予選</h2>

<ul>
<li>A: C早解きでぎりぎり通過。ただし、剰余のあたりバグらせてしまい若干危うかった。</li>
<li>B: 本番の時間では参加しませんでしたが、自力で解けたのはBまででした。</li>
<li>C: (同上)、自力で解けたのはAだけという悲惨さ。</li>
<li>予選Aで通って本当に良かった…。</li>
</ul>


<h2>11/8</h2>

<ul>
<li>博士予備審査を通す。まあ、<a href="http://cielavenir.github.io/blog/2016/12/10/retrieve/">退学</a>は予定していましたが、予備審査は通したかったので。</li>
<li>ちなみに通っていなければ <strong>本選辞退案件</strong> でした…</li>
</ul>


<h2>水曜日〜金曜日</h2>

<ul>
<li>この時期にバス旅行とか色々とあれ。</li>
<li>本選ページを見て、パーカーボーダーに愕然とする。ABCD+E部分点が必要。</li>
<li>実は一回スーツケース(含PC)をホテルに忘れかけそうになった(これも <strong>本選辞退案件</strong> )</li>
</ul>


<h2>1日目</h2>

<h3>朝</h3>

<ul>
<li>9:50起床、 <strong>Code Festivalの伝統的正装とされるパーカー</strong> を来て出発。汐留のサブウェイで食べようと思ったけど中止。結局昼食は歌舞伎揚げで済ませた。</li>
<li>スタンプラリー、今年はないみたい。スケジュールを巻かなくてよいので楽。</li>
<li>席、学年順なんですか？老人を固めるのはやめてくだされ。</li>
</ul>


<h3>本選</h3>

<table>
<thead>
<tr>
<th style="text-align:left;">時間</th>
<th style="text-align:left;">言語</th>
<th style="text-align:left;">問題(A-J)</th>
<th style="text-align:left;">コメント</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left;">0:02</td>
<td style="text-align:left;">Ruby</td>
<td style="text-align:left;">A</td>
<td style="text-align:left;">WA</td>
</tr>
<tr>
<td style="text-align:left;">0:07</td>
<td style="text-align:left;">Ruby</td>
<td style="text-align:left;">B</td>
<td style="text-align:left;">順番に足していって後で1問だけ消せばいいでしょ <strong>AC</strong></td>
</tr>
<tr>
<td style="text-align:left;">0:12</td>
<td style="text-align:left;">Ruby</td>
<td style="text-align:left;">A</td>
<td style="text-align:left;">H,Wを逆に取るくそミスに気付く。 <strong>AC</strong></td>
</tr>
<tr>
<td style="text-align:left;">0:15</td>
<td style="text-align:left;"></td>
<td style="text-align:left;">D</td>
<td style="text-align:left;"><a href="https://github.com/cielavenir/procon/blob/f17167643ecb6360c986a9ffed37b1524b6683b8/atcoder/tyama_atcodercodefestival2016finalD_TLE.cpp">最大マッチング</a>だと思ったけど、制約がでかすぎるなぁ。</td>
</tr>
<tr>
<td style="text-align:left;">0:30</td>
<td style="text-align:left;">C++</td>
<td style="text-align:left;">C</td>
<td style="text-align:left;">言語についてUnion-Findして根の数が1ならいいよね <strong>AC</strong></td>
</tr>
<tr>
<td style="text-align:left;">0:45</td>
<td style="text-align:left;">C++</td>
<td style="text-align:left;">E</td>
<td style="text-align:left;">個数と速度について幅優先探索。TLE</td>
</tr>
<tr>
<td style="text-align:left;">0:58</td>
<td style="text-align:left;">C++</td>
<td style="text-align:left;">E</td>
<td style="text-align:left;">色々手を尽くすも依然TLE</td>
</tr>
<tr>
<td style="text-align:left;">1:02</td>
<td style="text-align:left;">C++</td>
<td style="text-align:left;">E</td>
<td style="text-align:left;">枝刈りの仕方を改善。<strong>RE</strong> (部分点制約に合わないなら切腹する意味なのでREでOK)</td>
</tr>
<tr>
<td style="text-align:left;">1:30</td>
<td style="text-align:left;">Ruby</td>
<td style="text-align:left;">D</td>
<td style="text-align:left;">全部のチーを取ってから残りのカードでできるだけポンする。多分嘘解法。<strong>AC</strong> <strong>パーカー確定</strong> 。軽食を取る。</td>
</tr>
<tr>
<td style="text-align:left;">2:45</td>
<td style="text-align:left;">C++</td>
<td style="text-align:left;">E</td>
<td style="text-align:left;">unordered_mapいらなかったんや…少しつらい^^;;</td>
</tr>
<tr>
<td style="text-align:left;">3:00</td>
<td style="text-align:left;"></td>
<td style="text-align:left;"></td>
<td style="text-align:left;">あとは座るだけ。84位。お疲れ様でした。なおパーカーボーダーは124位。少し減りましたねぇ</td>
</tr>
</tbody>
</table>


<ul>
<li>D問題、嘘解法だと思っていたのが想定解法だったらしく、びっくり。今年も運が良かった。

<ul>
<li>UTPCの<a href="http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=2102">ラミー</a>の<a href="http://judge.u-aizu.ac.jp/onlinejudge/review.jsp?rid=497566">経験</a>が役に立った？</li>
</ul>
</li>
<li><font color="orange">帰宅してから思ったけどDは一般マッチングであって二部グラフじゃないですよね…</font></li>
</ul>


<h3>夕方</h3>

<ul>
<li>tourist氏トークライブ。

<ul>
<li>everything <strong>except gifted brain</strong></li>
<li><a href="http://www.farmanager.com/">FAR Manager</a> (そこか)</li>
</ul>
</li>
<li>体力測定。11ptだった。だめすぎ。</li>
<li>ペアプロライブ。二人ゲームは難しいです…。でもコードは短いという…

<ul>
<li><font color="orange"><a href="http://cf16-pair.contest.atcoder.jp/">http://cf16-pair.contest.atcoder.jp/</a> 、公開になりませんか?</font></li>
</ul>
</li>
<li>エキシビション、さらに難易度上がってませんか。

<ul>
<li>sevenkplus氏が、tourist氏のPCのFAR Managerの使い方がわからず苦戦していた模様(そこか)</li>
</ul>
</li>
<li>リレー顔合わせ。自己紹介(英語)がぐだってしまった。

<ul>
<li><font color="orange">ショートコードランキングについて。丸写しはまれですが、 <strong>写経はそれなりにしてます。すみません。</strong></font></li>
</ul>
</li>
</ul>


<h3>夜</h3>

<ul>
<li>起床フェーズがやばいことは明白なのに今年は宿泊なしですよ？酷いよ？</li>
<li>特に理由もなくセガ神楽坂に寄ってから帰宅した。</li>
</ul>


<h2>2日目</h2>

<h3>朝</h3>

<ul>
<li>7:50起床。 <strong>コンテストはACだけど開会式はTLE</strong> 。</li>
</ul>


<h3>Elimination Tournament</h3>

<h4>Round1 (group19)</h4>

<table>
<thead>
<tr>
<th style="text-align:left;">時間</th>
<th style="text-align:left;">言語</th>
<th style="text-align:left;">問題</th>
<th style="text-align:left;">コメント</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left;">0:11</td>
<td style="text-align:left;">Ruby</td>
<td style="text-align:left;">B</td>
<td style="text-align:left;">メモ化再帰。WA</td>
</tr>
<tr>
<td style="text-align:left;">0:26</td>
<td style="text-align:left;">C++</td>
<td style="text-align:left;">A</td>
<td style="text-align:left;">2頂点からPrim法。WA</td>
</tr>
<tr>
<td style="text-align:left;">0:28</td>
<td style="text-align:left;">Ruby</td>
<td style="text-align:left;">B</td>
<td style="text-align:left;">off-by-oneエラーだった。 <strong>400点</strong> 1位通過、Round2進出</td>
</tr>
</tbody>
</table>


<ul>
<li><font color="orange">A問題、後で確認したら、long long案件だった。これは酷い。</font></li>
</ul>


<h4>Round2 (group10)</h4>

<table>
<thead>
<tr>
<th style="text-align:left;">時間</th>
<th style="text-align:left;">言語</th>
<th style="text-align:left;">問題</th>
<th style="text-align:left;">コメント</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left;">0:01</td>
<td style="text-align:left;">Ruby</td>
<td style="text-align:left;">A</td>
<td style="text-align:left;">自明解。 <strong>200点</strong></td>
</tr>
<tr>
<td style="text-align:left;">0:09</td>
<td style="text-align:left;">Ruby</td>
<td style="text-align:left;">B</td>
<td style="text-align:left;">愚直解。 <strong>200点</strong></td>
</tr>
<tr>
<td style="text-align:left;">0:30</td>
<td style="text-align:left;"></td>
<td style="text-align:left;"></td>
<td style="text-align:left;">かろうじて逃げ切れました。4位通過、Round3進出</td>
</tr>
</tbody>
</table>


<h4>Round3 (group5)</h4>

<table>
<thead>
<tr>
<th style="text-align:left;">時間</th>
<th style="text-align:left;">言語</th>
<th style="text-align:left;">問題</th>
<th style="text-align:left;">コメント</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left;">0:08</td>
<td style="text-align:left;">Ruby</td>
<td style="text-align:left;">A</td>
<td style="text-align:left;">最大K個を拾う。当然誤解法。</td>
</tr>
<tr>
<td style="text-align:left;">0:12</td>
<td style="text-align:left;">Ruby</td>
<td style="text-align:left;">B</td>
<td style="text-align:left;"><code>N-S.index('m')</code>個の中の最大を取って、その最小では？ → WA</td>
</tr>
<tr>
<td style="text-align:left;">0:30</td>
<td style="text-align:left;"></td>
<td style="text-align:left;"></td>
<td style="text-align:left;">0点。くそすぎました…</td>
</tr>
</tbody>
</table>


<p>まあ、下以外のステッカー、計3枚もらえてうれしかったので、その場で貼ってしまいました。</p>

<h3>昼</h3>

<ul>
<li>知床鮨。</li>
<li>LT。きゅうりさんの擬人化の <em>よさみ</em> 。</li>
<li>休憩時間にちょろっと退出しUFOキャッチャー。まあ、1回のトライではタオルはおろか何も取れるはずはない。ご苦労様でした。</li>
<li>りんごさんの挑戦状。おもしろかった。</li>
</ul>


<h3>早解きリレー</h3>

<ul>
<li>W4yneb0t氏のチームでした。</li>
<li>Tシャツの色、不幸にも去年と同じ色…。あの色を2着というのは厳しい…。</li>
<li>ゼッケン。アルファベットにしてくれと去年要望出したのにどうしたー。</li>
<li>順位順でGを担当。思いついた解法がどう考えてもTLEだったが、状態を配列に取っておけばいいことを教えてもらった。実装は一発ACだった。</li>
<li>9完でFinish。

<ul>
<li>役に立てなくてすみません。 <strong>W4yneb0tさん、Grand Final優勝おめでとうございます。</strong></li>
</ul>
</li>
<li>Kは、最長パスの接点2の数+葉の数が答えらしい。

<ul>
<li><font color="orange">実際には</font><a href="http://cielavenir.github.io/blog/2016/11/30/problem-on-tree/">少し違った。</a></li>
</ul>
</li>
</ul>


<h3>帰路</h3>

<ul>
<li>他の人の実装見たりしていた。</li>
</ul>


<h2>まとめ</h2>

<ul>
<li>ゆっくり楽しめました。ただ、ゆっくりすぎて太鼓やらなかった(でもまあ太鼓はメイン機種じゃないのでいいか…)</li>
<li>お土産少なくないですか。パーカーあるからいいですが…</li>
</ul>


<h2>お土産</h2>

<ul>
<li>パーカー

<ul>
<li>白だと汚れるので家宝として封印かなぁ。</li>
</ul>
</li>
<li>本選Tシャツ、リレーTシャツ(カーネーション?)</li>
<li>ステッカー(本選、トーナメント3枚)</li>
<li>トートバッグ

<ul>
<li>今回も手提げショルダー両用</li>
</ul>
</li>
<li>ボールペン、ノート</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[atcoder] 無矛盾な単位系 / マス目と整数]]></title>
    <link href="http://cielavenir.github.io/blog/2016/10/13/grid-and-integers/"/>
    <updated>2016-10-13T04:18:24+09:00</updated>
    <id>http://cielavenir.github.io/blog/2016/10/13/grid-and-integers</id>
    <content type="html"><![CDATA[<ul>
<li>無矛盾な単位系

<ul>
<li><a href="http://www.utpc.jp/2010/">http://www.utpc.jp/2010/</a></li>
<li><a href="http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=2207">http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=2207</a></li>
</ul>
</li>
<li>マス目と整数

<ul>
<li><a href="http://code-festival-2016-quala.contest.atcoder.jp/tasks/codefestival_2016_qualA_d">http://code-festival-2016-quala.contest.atcoder.jp/tasks/codefestival_2016_qualA_d</a></li>
</ul>
</li>
</ul>


<h2>無矛盾な単位系</h2>

<h3>概要</h3>

<ul>
<li>無向グラフが与えられるので、誤った閉路がないかどうか判定せよ。なお点は文字列として与えられる。</li>
</ul>


<h3>方法</h3>

<ul>
<li>まだ訪れていない点を調べる。

<ul>
<li><a href="http://www.utpc.jp/2010/">解</a> <a href="https://code-festival-2016-quala.contest.atcoder.jp/editorial">説</a> には深さ優先探索とありますが、実装が適切であれば幅優先探索でも大丈夫っぽいです。ただ、2倍ほど遅くなります。</li>
<li>memoに加えるのは、深さ優先探索では入れる時出す時のいずれでも良いですが、幅優先探索だと入れる時に加える必要があります。</li>
<li>訪れていたら、最初に訪れた時の値と同じかどうか確認します。</li>
</ul>
</li>
<li><p>なお、独立な単位系が複数存在するかもしれない(連結成分が1個ではないかもしれない)ので、グラフが空になるまで取り出し続ける実装にする必要がある。</p></li>
<li><p>コード(深さ優先探索と幅優先探索をベンチマークするためにdequeにしていますが、深さ優先探索だけで良いならvectorの方が速いです)</p></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="cp">#include &lt;string&gt;</span>
</span><span class='line'><span class="cp">#include &lt;cstdio&gt;</span>
</span><span class='line'><span class="cp">#include &lt;unordered_map&gt;</span>
</span><span class='line'><span class="cp">#include &lt;deque&gt;</span>
</span><span class='line'><span class="cp">#include &lt;algorithm&gt;</span>
</span><span class='line'><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
</span><span class='line'><span class="k">typedef</span> <span class="n">string</span> <span class="n">key</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">char</span> <span class="n">b1</span><span class="p">[</span><span class="mi">99</span><span class="p">],</span><span class="n">b2</span><span class="p">[</span><span class="mi">99</span><span class="p">];</span>
</span><span class='line'><span class="kt">void</span> <span class="nf">main2</span><span class="p">(</span><span class="kt">int</span> <span class="n">n</span><span class="p">){</span>
</span><span class='line'>  <span class="n">unordered_map</span><span class="o">&lt;</span><span class="n">key</span><span class="p">,</span><span class="n">deque</span><span class="o">&lt;</span><span class="n">pair</span><span class="o">&lt;</span><span class="n">key</span><span class="p">,</span><span class="kt">long</span> <span class="kt">long</span><span class="o">&gt;&gt;&gt;</span><span class="n">m</span><span class="p">;</span>
</span><span class='line'>  <span class="k">for</span><span class="p">(;</span><span class="n">n</span><span class="p">;</span><span class="n">n</span><span class="o">--</span><span class="p">){</span>
</span><span class='line'>      <span class="kt">int</span> <span class="n">d</span><span class="p">;</span>
</span><span class='line'>      <span class="n">scanf</span><span class="p">(</span><span class="s">&quot; 1 %s = 10^%d %s&quot;</span><span class="p">,</span><span class="n">b1</span><span class="p">,</span><span class="o">&amp;</span><span class="n">d</span><span class="p">,</span><span class="n">b2</span><span class="p">);</span>
</span><span class='line'>      <span class="n">string</span> <span class="n">s1</span><span class="o">=</span><span class="n">b1</span><span class="p">,</span><span class="n">s2</span><span class="o">=</span><span class="n">b2</span><span class="p">;</span>
</span><span class='line'>      <span class="n">m</span><span class="p">[</span><span class="n">s1</span><span class="p">].</span><span class="n">emplace_back</span><span class="p">(</span><span class="n">s2</span><span class="p">,</span><span class="n">d</span><span class="p">);</span>
</span><span class='line'>      <span class="n">m</span><span class="p">[</span><span class="n">s2</span><span class="p">].</span><span class="n">emplace_back</span><span class="p">(</span><span class="n">s1</span><span class="p">,</span><span class="o">-</span><span class="n">d</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">for</span><span class="p">(;</span><span class="o">!</span><span class="n">m</span><span class="p">.</span><span class="n">empty</span><span class="p">();){</span>
</span><span class='line'>      <span class="k">auto</span> <span class="n">s</span><span class="o">=</span><span class="n">m</span><span class="p">.</span><span class="n">begin</span><span class="p">()</span><span class="o">-&gt;</span><span class="n">first</span><span class="p">;</span>
</span><span class='line'>      <span class="n">deque</span><span class="o">&lt;</span><span class="n">pair</span><span class="o">&lt;</span><span class="n">key</span><span class="p">,</span><span class="kt">long</span> <span class="kt">long</span><span class="o">&gt;&gt;</span><span class="n">st</span><span class="o">=</span><span class="p">{</span> <span class="p">{</span><span class="n">s</span><span class="p">,</span><span class="mi">0</span><span class="p">}</span> <span class="p">};</span>
</span><span class='line'>      <span class="n">unordered_map</span><span class="o">&lt;</span><span class="n">key</span><span class="p">,</span><span class="kt">long</span> <span class="kt">long</span><span class="o">&gt;</span><span class="n">memo</span><span class="o">=</span><span class="p">{</span> <span class="p">{</span><span class="n">s</span><span class="p">,</span><span class="mi">0</span><span class="p">}</span> <span class="p">};</span>
</span><span class='line'>      <span class="k">for</span><span class="p">(;</span><span class="o">!</span><span class="n">st</span><span class="p">.</span><span class="n">empty</span><span class="p">();){</span>
</span><span class='line'>          <span class="k">auto</span> <span class="n">p</span><span class="o">=*</span><span class="n">st</span><span class="p">.</span><span class="n">rbegin</span><span class="p">();</span><span class="n">st</span><span class="p">.</span><span class="n">pop_back</span><span class="p">();</span>
</span><span class='line'>          <span class="k">auto</span> <span class="n">cur</span><span class="o">=</span><span class="n">p</span><span class="p">.</span><span class="n">first</span><span class="p">;</span><span class="kt">long</span> <span class="kt">long</span> <span class="n">d</span><span class="o">=</span><span class="n">p</span><span class="p">.</span><span class="n">second</span><span class="p">;</span>
</span><span class='line'>          <span class="k">for</span><span class="p">(</span><span class="k">auto</span> <span class="o">&amp;</span><span class="nl">e</span><span class="p">:</span><span class="n">m</span><span class="p">[</span><span class="n">cur</span><span class="p">]){</span>
</span><span class='line'>              <span class="k">if</span><span class="p">(</span><span class="n">memo</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="n">e</span><span class="p">.</span><span class="n">first</span><span class="p">)</span><span class="o">==</span><span class="n">memo</span><span class="p">.</span><span class="n">end</span><span class="p">()){</span>
</span><span class='line'>                  <span class="n">st</span><span class="p">.</span><span class="n">emplace_back</span><span class="p">(</span><span class="n">e</span><span class="p">.</span><span class="n">first</span><span class="p">,</span><span class="n">d</span><span class="o">+</span><span class="n">e</span><span class="p">.</span><span class="n">second</span><span class="p">);</span>
</span><span class='line'>                  <span class="n">memo</span><span class="p">[</span><span class="n">e</span><span class="p">.</span><span class="n">first</span><span class="p">]</span><span class="o">=</span><span class="n">d</span><span class="o">+</span><span class="n">e</span><span class="p">.</span><span class="n">second</span><span class="p">;</span>
</span><span class='line'>              <span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">memo</span><span class="p">[</span><span class="n">e</span><span class="p">.</span><span class="n">first</span><span class="p">]</span><span class="o">!=</span><span class="n">d</span><span class="o">+</span><span class="n">e</span><span class="p">.</span><span class="n">second</span><span class="p">){</span>
</span><span class='line'>                  <span class="n">puts</span><span class="p">(</span><span class="s">&quot;No&quot;</span><span class="p">);</span>
</span><span class='line'>                  <span class="k">return</span><span class="p">;</span>
</span><span class='line'>              <span class="p">}</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="k">for</span><span class="p">(</span><span class="k">auto</span> <span class="o">&amp;</span><span class="nl">e</span><span class="p">:</span><span class="n">memo</span><span class="p">)</span><span class="n">m</span><span class="p">.</span><span class="n">erase</span><span class="p">(</span><span class="n">m</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="n">e</span><span class="p">.</span><span class="n">first</span><span class="p">));</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="n">puts</span><span class="p">(</span><span class="s">&quot;Yes&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(){</span><span class="kt">int</span> <span class="n">n</span><span class="p">;</span><span class="k">for</span><span class="p">(;</span><span class="o">~</span><span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span><span class="o">&amp;</span><span class="n">n</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="n">n</span><span class="p">;)</span><span class="n">main2</span><span class="p">(</span><span class="n">n</span><span class="p">);}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>マス目と整数</h2>

<ul>
<li>入力を変更し、連結成分重み判定を加えるだけで、マス目と整数の解答に変更することができる。</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="o">---</span> <span class="n">utpc2010_10125</span><span class="p">(</span><span class="n">aizu2207</span><span class="p">)</span><span class="n">_stack</span><span class="p">.</span><span class="n">cpp</span>    <span class="mi">2016</span><span class="o">-</span><span class="mi">10</span><span class="o">-</span><span class="mi">13</span> <span class="mo">04</span><span class="o">:</span><span class="mi">19</span><span class="o">:</span><span class="mf">40.000000000</span> <span class="o">+</span><span class="mi">0900</span>
</span><span class='line'><span class="o">+++</span> <span class="n">atcodercodefestival2016qualaD</span><span class="p">.</span><span class="n">cpp</span> <span class="mi">2016</span><span class="o">-</span><span class="mi">10</span><span class="o">-</span><span class="mi">13</span> <span class="mo">04</span><span class="o">:</span><span class="mi">42</span><span class="o">:</span><span class="mf">46.000000000</span> <span class="o">+</span><span class="mi">0900</span>
</span><span class='line'><span class="err">@@</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="mi">22</span> <span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="mi">22</span> <span class="err">@@</span>
</span><span class='line'><span class="o">-</span><span class="err">#</span><span class="n">include</span> <span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span>
</span><span class='line'> <span class="cp">#include &lt;cstdio&gt;</span>
</span><span class='line'> <span class="cp">#include &lt;unordered_map&gt;</span>
</span><span class='line'> <span class="cp">#include &lt;deque&gt;</span>
</span><span class='line'> <span class="cp">#include &lt;algorithm&gt;</span>
</span><span class='line'> <span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
</span><span class='line'><span class="o">-</span><span class="k">typedef</span> <span class="n">string</span> <span class="n">key</span><span class="p">;</span>
</span><span class='line'><span class="o">+</span><span class="k">typedef</span> <span class="kt">int</span> <span class="n">key</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="o">-</span><span class="kt">char</span> <span class="n">b1</span><span class="p">[</span><span class="mi">99</span><span class="p">],</span><span class="n">b2</span><span class="p">[</span><span class="mi">99</span><span class="p">];</span>
</span><span class='line'><span class="o">-</span><span class="kt">void</span> <span class="n">main2</span><span class="p">(</span><span class="kt">int</span> <span class="n">n</span><span class="p">){</span>
</span><span class='line'><span class="o">+</span><span class="kt">int</span> <span class="n">main</span><span class="p">(){</span>
</span><span class='line'><span class="o">+</span>  <span class="kt">int</span> <span class="n">r</span><span class="p">,</span><span class="n">c</span><span class="p">,</span><span class="n">n</span><span class="p">;</span>
</span><span class='line'><span class="o">+</span>  <span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d%d%d&quot;</span><span class="p">,</span><span class="o">&amp;</span><span class="n">r</span><span class="p">,</span><span class="o">&amp;</span><span class="n">c</span><span class="p">,</span><span class="o">&amp;</span><span class="n">n</span><span class="p">);</span>
</span><span class='line'>  <span class="n">unordered_map</span><span class="o">&lt;</span><span class="n">key</span><span class="p">,</span><span class="n">deque</span><span class="o">&lt;</span><span class="n">pair</span><span class="o">&lt;</span><span class="n">key</span><span class="p">,</span><span class="kt">long</span> <span class="kt">long</span><span class="o">&gt;&gt;&gt;</span><span class="n">m</span><span class="p">;</span>
</span><span class='line'>  <span class="k">for</span><span class="p">(;</span><span class="n">n</span><span class="p">;</span><span class="n">n</span><span class="o">--</span><span class="p">){</span>
</span><span class='line'><span class="o">-</span>      <span class="kt">int</span> <span class="n">d</span><span class="p">;</span>
</span><span class='line'><span class="o">-</span>      <span class="n">scanf</span><span class="p">(</span><span class="s">&quot; 1 %s = 10^%d %s&quot;</span><span class="p">,</span><span class="n">b1</span><span class="p">,</span><span class="o">&amp;</span><span class="n">d</span><span class="p">,</span><span class="n">b2</span><span class="p">);</span>
</span><span class='line'><span class="o">-</span>      <span class="n">string</span> <span class="n">s1</span><span class="o">=</span><span class="n">b1</span><span class="p">,</span><span class="n">s2</span><span class="o">=</span><span class="n">b2</span><span class="p">;</span>
</span><span class='line'><span class="o">-</span>      <span class="n">m</span><span class="p">[</span><span class="n">s1</span><span class="p">].</span><span class="n">emplace_back</span><span class="p">(</span><span class="n">s2</span><span class="p">,</span><span class="n">d</span><span class="p">);</span>
</span><span class='line'><span class="o">-</span>      <span class="n">m</span><span class="p">[</span><span class="n">s2</span><span class="p">].</span><span class="n">emplace_back</span><span class="p">(</span><span class="n">s1</span><span class="p">,</span><span class="o">-</span><span class="n">d</span><span class="p">);</span>
</span><span class='line'><span class="o">+</span>      <span class="kt">int</span> <span class="n">s1</span><span class="p">,</span><span class="n">s2</span><span class="p">,</span><span class="n">d</span><span class="p">;</span>
</span><span class='line'><span class="o">+</span>      <span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d%d%d&quot;</span><span class="p">,</span><span class="o">&amp;</span><span class="n">s1</span><span class="p">,</span><span class="o">&amp;</span><span class="n">s2</span><span class="p">,</span><span class="o">&amp;</span><span class="n">d</span><span class="p">);</span>
</span><span class='line'><span class="o">+</span>      <span class="n">m</span><span class="p">[</span><span class="n">s1</span><span class="p">].</span><span class="n">emplace_back</span><span class="p">(</span><span class="n">s2</span><span class="o">+</span><span class="n">r</span><span class="p">,</span><span class="n">d</span><span class="p">);</span>
</span><span class='line'><span class="o">+</span>      <span class="n">m</span><span class="p">[</span><span class="n">s2</span><span class="o">+</span><span class="n">r</span><span class="p">].</span><span class="n">emplace_back</span><span class="p">(</span><span class="n">s1</span><span class="p">,</span><span class="o">-</span><span class="n">d</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">for</span><span class="p">(;</span><span class="o">!</span><span class="n">m</span><span class="p">.</span><span class="n">empty</span><span class="p">();){</span>
</span><span class='line'><span class="o">+</span>      <span class="kt">long</span> <span class="kt">long</span> <span class="n">a</span><span class="o">=-</span><span class="mi">1LL</span><span class="o">&lt;&lt;</span><span class="mi">61</span><span class="p">,</span><span class="n">b</span><span class="o">=</span><span class="mi">1LL</span><span class="o">&lt;&lt;</span><span class="mi">61</span><span class="p">;</span>
</span><span class='line'>      <span class="k">auto</span> <span class="n">s</span><span class="o">=</span><span class="n">m</span><span class="p">.</span><span class="n">begin</span><span class="p">()</span><span class="o">-&gt;</span><span class="n">first</span><span class="p">;</span>
</span><span class='line'>      <span class="n">deque</span><span class="o">&lt;</span><span class="n">pair</span><span class="o">&lt;</span><span class="n">key</span><span class="p">,</span><span class="kt">long</span> <span class="kt">long</span><span class="o">&gt;&gt;</span><span class="n">st</span><span class="o">=</span><span class="p">{</span> <span class="p">{</span><span class="n">s</span><span class="p">,</span><span class="mi">0</span><span class="p">}</span> <span class="p">};</span>
</span><span class='line'>      <span class="n">unordered_map</span><span class="o">&lt;</span><span class="n">key</span><span class="p">,</span><span class="kt">long</span> <span class="kt">long</span><span class="o">&gt;</span><span class="n">memo</span><span class="o">=</span><span class="p">{</span> <span class="p">{</span><span class="n">s</span><span class="p">,</span><span class="mi">0</span><span class="p">}</span> <span class="p">};</span>
</span><span class='line'><span class="err">@@</span> <span class="o">-</span><span class="mi">29</span><span class="p">,</span><span class="mi">12</span> <span class="o">+</span><span class="mi">29</span><span class="p">,</span><span class="mi">17</span> <span class="err">@@</span>
</span><span class='line'>                  <span class="n">memo</span><span class="p">[</span><span class="n">e</span><span class="p">.</span><span class="n">first</span><span class="p">]</span><span class="o">=</span><span class="n">d</span><span class="o">+</span><span class="n">e</span><span class="p">.</span><span class="n">second</span><span class="p">;</span>
</span><span class='line'>              <span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">memo</span><span class="p">[</span><span class="n">e</span><span class="p">.</span><span class="n">first</span><span class="p">]</span><span class="o">!=</span><span class="n">d</span><span class="o">+</span><span class="n">e</span><span class="p">.</span><span class="n">second</span><span class="p">){</span>
</span><span class='line'>                  <span class="n">puts</span><span class="p">(</span><span class="s">&quot;No&quot;</span><span class="p">);</span>
</span><span class='line'><span class="o">-</span>                  <span class="k">return</span><span class="p">;</span>
</span><span class='line'><span class="o">+</span>                  <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>              <span class="p">}</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'><span class="o">+</span>          <span class="k">if</span><span class="p">(</span><span class="n">cur</span><span class="o">&lt;=</span><span class="n">r</span><span class="p">)</span><span class="n">a</span><span class="o">=</span><span class="n">max</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">d</span><span class="p">);</span>
</span><span class='line'><span class="o">+</span>          <span class="k">else</span> <span class="n">b</span><span class="o">=</span><span class="n">min</span><span class="p">(</span><span class="n">b</span><span class="p">,</span><span class="n">d</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'><span class="o">+</span>      <span class="k">if</span><span class="p">(</span><span class="n">a</span><span class="o">&gt;</span><span class="n">b</span><span class="p">){</span>
</span><span class='line'><span class="o">+</span>          <span class="n">puts</span><span class="p">(</span><span class="s">&quot;No&quot;</span><span class="p">);</span>
</span><span class='line'><span class="o">+</span>          <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="o">+</span>      <span class="p">}</span>
</span><span class='line'>      <span class="k">for</span><span class="p">(</span><span class="k">auto</span> <span class="o">&amp;</span><span class="nl">e</span><span class="p">:</span><span class="n">memo</span><span class="p">)</span><span class="n">m</span><span class="p">.</span><span class="n">erase</span><span class="p">(</span><span class="n">m</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="n">e</span><span class="p">.</span><span class="n">first</span><span class="p">));</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="n">puts</span><span class="p">(</span><span class="s">&quot;Yes&quot;</span><span class="p">);</span>
</span><span class='line'> <span class="p">}</span>
</span><span class='line'><span class="o">-</span><span class="kt">int</span> <span class="n">main</span><span class="p">(){</span><span class="kt">int</span> <span class="n">n</span><span class="p">;</span><span class="k">for</span><span class="p">(;</span><span class="o">~</span><span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span><span class="o">&amp;</span><span class="n">n</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="n">n</span><span class="p">;)</span><span class="n">main2</span><span class="p">(</span><span class="n">n</span><span class="p">);}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><a href="https://github.com/cielavenir/procon/commit/073d4d0c991750b056836de69cc7b556864b6353">https://github.com/cielavenir/procon/commit/073d4d0c991750b056836de69cc7b556864b6353</a></li>
</ul>


<h2>あとがき</h2>

<ul>
<li>Code Festival 予選中、無矛盾な単位系が類似問題として頭に浮かんだのですが、当時書いていたコードが <strong>一行入力するごとにグラフを全走査する</strong> くそコードだったため、どうしようもできませんでした。</li>
<li>結果的には復習になってよかったです。</li>
<li>ただ、連結成分重み判定はやはり本番中に思いつかなかったと思います…</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[tozangezanお誕生日コンテスト]]></title>
    <link href="http://cielavenir.github.io/blog/2016/08/31/tozangezan-contest/"/>
    <updated>2016-08-31T17:45:14+09:00</updated>
    <id>http://cielavenir.github.io/blog/2016/08/31/tozangezan-contest</id>
    <content type="html"><![CDATA[<h2>URL</h2>

<ul>
<li><a href="https://www.hackerrank.com/contests/tozangezan-birthday-contest/challenges">https://www.hackerrank.com/contests/tozangezan-birthday-contest/challenges</a></li>
</ul>


<h2>結果</h2>

<ul>
<li><code>---ox△△◎oo-oo△-ooo△△--△-</code> 1752.66点で2位でした。</li>
</ul>


<h2>A:BonusMondai</h2>

<ul>
<li>解いたらあかんやつやこれ</li>
<li>てか負の配点って設定できちゃだめやろ</li>
</ul>


<h2>B:NA RI KI RI knapsack</h2>

<ul>
<li>よくある問題だけど得点が謎。</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#include &lt;vector&gt;
</span><span class='line'>#include &lt;algorithm&gt;
</span><span class='line'>#include &lt;cstdio&gt;
</span><span class='line'>using namespace std;
</span><span class='line'>int main(){
</span><span class='line'>  int N,W;
</span><span class='line'>  scanf("%d%d",&N,&W);
</span><span class='line'>  vector&lt;pair&lt;int,long long&gt;&gt;v(N);
</span><span class='line'>  for(int i=0;i&lt;N;i++)scanf("%d%lld",&v[i].first,&v[i].second);
</span><span class='line'>  vector&lt;long long&gt;bag(W+1);bag[0]=1;
</span><span class='line'>  for(auto &e:v){
</span><span class='line'>      for(int j=W;j&gt;=e.first;j--){
</span><span class='line'>          if(bag[j-e.first]&&bag[j]&lt;bag[j-e.first]+e.second)bag[j]=bag[j-e.first]+e.second;
</span><span class='line'>      }
</span><span class='line'>  }
</span><span class='line'>  printf("%lld\n",*max_element(bag.begin(),bag.end())-1);
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<h2>C:Number Guessing Master</h2>

<ul>
<li>8桁の数値の当該桁がヒットならACになるかと思ったけどそうでもなかった</li>
<li>最初の4ケースがhit、後ろの4ケースがblowだそうです…</li>
</ul>


<h2>D:ポッポカウント(AC)</h2>

<ul>
<li>素直に解いて良い。なおNの最大は100であるようだ。</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#include &lt;stdio.h&gt;
</span><span class='line'>int main(){
</span><span class='line'>  long long N,i,j,R=0;
</span><span class='line'>  scanf("%lld",&N);
</span><span class='line'>  for(i=1;i&lt;N;i++)for(j=i+1;j&lt;=N;j++)R+=__builtin_popcountll(i*j);
</span><span class='line'>  printf("%lld\n",R);
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<h2>E:Hedgehog(TLE)</h2>

<ul>
<li><strong>入力拾うだけでTLEになる</strong> のでどうしたもんだろう。</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#include &lt;algorithm&gt;
</span><span class='line'>#include &lt;cstdio&gt;
</span><span class='line'>using namespace std;
</span><span class='line'>int main(){
</span><span class='line'>  long long v[1000];
</span><span class='line'>  long long R=0;
</span><span class='line'>  int N,M;
</span><span class='line'>  scanf("%d",&N);
</span><span class='line'>  for(int i=0;i&lt;N;i++){
</span><span class='line'>      scanf("%d",&M);
</span><span class='line'>      for(int j=0;j&lt;M;j++)scanf("%lld",&v[j]);
</span><span class='line'>      std::sort(v,v+M);
</span><span class='line'>      for(int j=1;j&lt;M;j++)R^=v[j]*j;
</span><span class='line'>  }
</span><span class='line'>  printf("%lld\n",R);
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<h2>F:ライツアウト(部分点)</h2>

<ul>
<li>5x5を反転させるのでは満点にならないらしい。サイズ、いくらなんだろう。</li>
<li>解説読んだけどあれはひどい&ndash;;</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>15
</span><span class='line'>0 0
</span><span class='line'>0 1
</span><span class='line'>1 0
</span><span class='line'>1 1
</span><span class='line'>1 3
</span><span class='line'>1 4
</span><span class='line'>2 2
</span><span class='line'>2 3
</span><span class='line'>2 4
</span><span class='line'>3 1
</span><span class='line'>3 2
</span><span class='line'>3 3
</span><span class='line'>4 1
</span><span class='line'>4 2
</span><span class='line'>4 4</span></code></pre></td></tr></table></div></figure>


<h2>G:Surprising Language(部分点)</h2>

<ul>
<li>Perlで解いたものをBashに埋め込んで210/300点。300点は難読言語専用かな？</li>
<li>Whitespaceで解くと満点なの?テストケース埋め込みが必要やん…</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#!/usr/bin/perl
</span><span class='line'>use feature qw(say);
</span><span class='line'>use strict;
</span><span class='line'>my($x,$y)=split(/ /,&lt;&gt;);
</span><span class='line'>my $M=10**9+7;
</span><span class='line'>my @I=(1,1);
</span><span class='line'>my @F=(1,1);
</span><span class='line'>my @R=(1,1);
</span><span class='line'>for(my $i=2;$i&lt;=$x;$i++){
</span><span class='line'>  my $z=($M-($M/$i^0))*$I[$M%$i]%$M;
</span><span class='line'>  $I[$i]=$z;
</span><span class='line'>  $F[$i]=$i*$F[-1]%$M;
</span><span class='line'>  $R[$i]=$z*$R[-1]%$M;
</span><span class='line'>}
</span><span class='line'>say $F[$x]*$R[$x-$y]%$M*$R[$y]%$M;</span></code></pre></td></tr></table></div></figure>


<h2>H:OCR Killer(AC)</h2>

<ul>
<li>FAです。やった＾ω＾</li>
<li><a href="http://kjjk.weblio.jp/">http://kjjk.weblio.jp/</a> の手書きに頑張って書く。途中から疲れてiPadになった(twitter 自分宛DMでPCに転送)。タッチパネル最強＾＾</li>
<li>問題文(一部おかしいけど、まあ。これでもGoogle翻訳結果見ながら手直しした方ですよ？)</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>달의 구면 상의 러리를 구하심시모
</span><span class='line'>달의 구면 상의 점은 두 실수
</span><span class='line'>(a,b) 로 주어진다 이건 지구의
</span><span class='line'>"동겸a 도, 북왼 b도", 와 같다
</span><span class='line'>서경, 남위는 음수를 사용 찬다
</span><span class='line'>단, 이 몬세에서는 달을 위키백라
</span><span class='line'>기사에 쓰이는 직경의 구라고
</span><span class='line'>가정해야 찬다
</span><span class='line'>(出力)
</span><span class='line'>주머신 두 점의 거리를 츨력한다
</span><span class='line'>오차는 적담히</span></code></pre></td></tr></table></div></figure>


<ul>
<li>要約</li>
<li><p>東経aと北緯bが2組入力される。月における2点間の距離を求めよ。月の半径はWikiにあるものを使え。</p></li>
<li><p>答案</p></li>
<li>北緯と東経が(慣習と)逆に入力されることにさえ注意すれば、難しくはない。</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#!/usr/bin/python
</span><span class='line'>import sys,math
</span><span class='line'>def calcdist(a):
</span><span class='line'>  lat1,lon1,lat2,lon2=map(lambda e:e*math.pi/180,a)
</span><span class='line'>  return 3474.3/2*math.acos( (math.sin(lat1)*math.sin(lat2)+math.cos(lat1)*math.cos(lat2)*math.cos(lon1-lon2)) )
</span><span class='line'>
</span><span class='line'>b1,a1=map(float,sys.stdin.readline().split())
</span><span class='line'>b2,a2=map(float,sys.stdin.readline().split())
</span><span class='line'>print(calcdist([a1,b1,a2,b2]))</span></code></pre></td></tr></table></div></figure>


<h2>I:雑な問題(AC)</h2>

<ul>
<li><code>piyo</code></li>
</ul>


<h2>J:雑な問題2(AC)</h2>

<ul>
<li>問題IDが「the-answer-is-to2ange2an」である。</li>
<li><code>to2ange2an</code></li>
</ul>


<h2>K:Classical Cipher</h2>

<ul>
<li>もういいや</li>
<li><p>鍵がT,Z,Nであることからエニグマだと思ったんですけどね、 <strong>ローターの選択とプラグボード配線もエニグマの鍵に含まれますよね？？</strong></p></li>
<li><p>問題文</p></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>YOUAREGIVENASTRING
</span><span class='line'>WRITEAPROGRAMTODECODETHESTRING
</span><span class='line'>THESTRINGISENCODEDINFOLLOWINGWAY
</span><span class='line'>FIRSTCONVERTEACHCHARACTERBYTHETABLE
</span><span class='line'>THETABLEISGIVENRIGHTBELOW
</span><span class='line'>KSYWQJDRZUIPGOLMXEBTVAFNHC
</span><span class='line'>NEXTCHANGEKTHCHARACTERTOITSKTHNEXTALPHABET
</span><span class='line'>FOREXAMPLEIFAFOURTHCHARACTERISYTHENCHANGEITTOC</span></code></pre></td></tr></table></div></figure>


<ul>
<li>答案</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#!/usr/bin/ruby
</span><span class='line'>puts gets.chomp.bytes.map.with_index{|b,i|((b-65-i)%26+65).chr}.join.tr('KSYWQJDRZUIPGOLMXEBTVAFNHC','A-Z')</span></code></pre></td></tr></table></div></figure>


<h2>L:洞窟(AC)</h2>

<ul>
<li>Googleフォームを開いたらソースを開くと答えを見つけることができる。</li>
<li><code>SNUKEGORM_BY_DARUDE</code></li>
</ul>


<h2>M:Matryoshka(AC)</h2>

<h3>(1)</h3>

<ul>
<li>CPUに <strong>10時間ほど</strong> 頑張って頂きました。</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#!/usr/bin/ruby
</span><span class='line'>s=DATA.gets
</span><span class='line'>314161.times{|i|p i
</span><span class='line'>  s=IO.popen('php','r+b'){|io|
</span><span class='line'>      io.puts s
</span><span class='line'>      io.close_write
</span><span class='line'>      io.read
</span><span class='line'>  }
</span><span class='line'>  puts s if i%1000==0
</span><span class='line'>}
</span><span class='line'>puts s
</span><span class='line'># &lt;?printf($a=($b=0)?'&lt;?printf($a=($b=%d)?%c%s%c:"%s-%s",$b-1,39,$a,39,dechex($x=%d),dechex($y=%d),$x+$x+$y,-$x);':"bf-cbc",$b-1,39,$a,39,dechex($x=3642),dechex($y=-191),$x+$x+$y,-$x);
</span><span class='line'># bf-cbc
</span><span class='line'>__END__
</span><span class='line'>&lt;?printf($a='&lt;?printf($a=($b=%d)?%c%s%c:"%s-%s",$b-1,39,$a,39,dechex($x=%d),dechex($y=%d),$x+$x+$y,-$x);',314159,39,$a,39,'','',-1084159067,1084162518);</span></code></pre></td></tr></table></div></figure>


<h3>(2)</h3>

<ul>
<li>こちらもCPUに10分ほど頑張って頂き、後半戦には入れたのですが、そこで死にました。</li>
<li><strong>funzip、こういう目的には割と良いツール。</strong></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#!/usr/bin/ruby
</span><span class='line'>loop{
</span><span class='line'>  system("&lt;data.zip funzip -bf-cbc &gt;data.bin")
</span><span class='line'>  break if File.binread('data.bin',2)!='PK'
</span><span class='line'>  File.rename('data.bin','data.zip')
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<ul>
<li>ヒントに助けられました。</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#!/usr/bin/php
</span><span class='line'>&lt;?php
</span><span class='line'>$s='';
</span><span class='line'>for(;;){
</span><span class='line'>  $stdin=trim(fgets(STDIN));
</span><span class='line'>  if(!$stdin)break;
</span><span class='line'>  $s.=$stdin;
</span><span class='line'>}
</span><span class='line'>for($i=0;$i&lt;39;$i++)$s=openssl_decrypt($s,'bf-cbc','bf-cbc');
</span><span class='line'>echo $s;</span></code></pre></td></tr></table></div></figure>


<h3>(3)</h3>

<ul>
<li>これもヒントに助けられました。</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#!/usr/bin/ruby
</span><span class='line'>require 'net/http'
</span><span class='line'>s=''.dup
</span><span class='line'>Net::HTTP.start('goo.gl'){|http|
</span><span class='line'>  key='xFnLDH'
</span><span class='line'>  location=''
</span><span class='line'>  loop{
</span><span class='line'>      resp=http.get('/'+key)
</span><span class='line'>      h=Hash[*resp]
</span><span class='line'>      break if !h.has_key?('location')
</span><span class='line'>      location=h['location'][0]
</span><span class='line'>      domain,key=location.split('/')[-2..-1]
</span><span class='line'>      s&lt;&lt;domain.scan(/\d/).join
</span><span class='line'>      sleep(1)
</span><span class='line'>  }
</span><span class='line'>  puts location
</span><span class='line'>}
</span><span class='line'>puts s.tr('10','ls')</span></code></pre></td></tr></table></div></figure>


<ul>
<li><p>Herbert Online Judgeに流し込む。</p></li>
<li><p>答案</p></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bf-cbc
</span><span class='line'>xFnLDH
</span><span class='line'>SHRIFT</span></code></pre></td></tr></table></div></figure>


<h2>N:Answer the Number(部分点)</h2>

<ul>
<li>(1)だけです</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>def f(n) r=1.0;(1..1/0.0).find{|i|(r=r*(n-i)/n)&lt;=0.5}+1 end
</span><span class='line'>p f(10000)</span></code></pre></td></tr></table></div></figure>


<h2>O:THE EMPTY</h2>

<ul>
<li>問題文は透過pngになっているのですが、画像中の暗号を解読できず。</li>
<li>0,6,8,9の輪っかでπを表現するとか…うーむ。</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#!/usr/bin/ruby
</span><span class='line'>s=Math::PI.to_s.tr('.','')
</span><span class='line'>puts s[gets.to_i-1]</span></code></pre></td></tr></table></div></figure>


<h2>P:THE EMPTY 2(AC)</h2>

<ul>
<li>解答言語としてWhitespaceを選択すると問題文が現れます。</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#!/usr/bin/ruby
</span><span class='line'>require 'prime'
</span><span class='line'>a,b=`dd`.split.map(&:to_i)
</span><span class='line'>p Prime.each(b).drop_while{|e|e&lt;a}.size</span></code></pre></td></tr></table></div></figure>


<h2>Q:THE EMPTY 3(AC)</h2>

<ul>
<li>Download sample test casesすると、output00.txtに問題文があります。</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#!/usr/bin/ruby
</span><span class='line'>require 'prime'
</span><span class='line'>class Integer
</span><span class='line'>  def divisornum() self.prime_division.reduce(1){|s,(n,p)|s*(p+1)} end
</span><span class='line'>end
</span><span class='line'>p (gets.to_i**2).divisornum</span></code></pre></td></tr></table></div></figure>


<h2>R:正しいダジャレギュレーション(AC)</h2>

<ul>
<li>落ち着いて問題文を読みましょう。sの種類数と同じ意味です(ただしsが1文字の場合は無効)。</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#!/usr/bin/ruby
</span><span class='line'>n,a=gets.split.map(&:to_i)
</span><span class='line'>if n&lt;2
</span><span class='line'>  p 0
</span><span class='line'>elsif
</span><span class='line'>  p a**n%100000007
</span><span class='line'>end</span></code></pre></td></tr></table></div></figure>


<h2>S:健康計算機(部分点)</h2>

<ul>
<li>こういう問題の相場として、複雑な字句解析ってのがあるんですが、どうにもならなかった感じがします。ぐぬぬ。</li>
<li>まじめ版の字句解析器が通らなかったのは「x'y」という入力のせいですかあーあーそこまで考えてなかったわ</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>def bmi(kg,m)
</span><span class='line'>  kg/m/m
</span><span class='line'>end
</span><span class='line'>a,b,c,d=gets.downcase.scan(/([\d'"\.]+)|([a-zA-Z]+)/).map{|e|e.compact[0]}
</span><span class='line'>if a.scan(/\d/).empty?
</span><span class='line'>  a,b=b,a
</span><span class='line'>end
</span><span class='line'>if c.scan(/\d/).empty?
</span><span class='line'>  c,d=d,c
</span><span class='line'>end
</span><span class='line'>if b.end_with?('g')
</span><span class='line'>  a,c=c,a
</span><span class='line'>  b,d=d,b
</span><span class='line'>end
</span><span class='line'>a=a.to_f
</span><span class='line'>a*=0.3048/12 if b=='in'
</span><span class='line'>a*=0.3048 if b=='ft'
</span><span class='line'>a*=0.9144 if b=='yd'
</span><span class='line'>a*=1000 if b=='km'
</span><span class='line'>a/=100 if b=='cm'
</span><span class='line'>a/=1000 if b=='mm'
</span><span class='line'>c=c.to_f
</span><span class='line'>c*=1000 if d=='t'
</span><span class='line'>c/=1000 if d=='g'
</span><span class='line'>c/=1000000 if d=='mg'
</span><span class='line'>c*=0.45359237 if d=='lb' || d=='lbs'
</span><span class='line'>p bmi(c,a)</span></code></pre></td></tr></table></div></figure>


<h2>T:明日使えない英単語(部分点)</h2>

<ul>
<li>知るかいな</li>
<li>本番中は2,4に正解。</li>
<li>alopecoidという単語は「プログレッシブ英和・和英中辞典」「ウィズダム英和・和英辞典」「New Oxford American Dictionary」「Oxford Dictionary of English」のいずれにも載っていない単語ですよ

<ul>
<li>OSXの辞書ってこんなにくそでしたっけ(んなわけはない) ＾ω＾＃</li>
</ul>
</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#!/usr/bin/ruby
</span><span class='line'>T=%w(eaglet camaraderie oblast thesaurus alopecoid)
</span><span class='line'>puts T[gets.to_i-1]</span></code></pre></td></tr></table></div></figure>


<h2>U:うんちくビ〜ム</h2>

<ul>
<li><strong>解説すら読めない。</strong></li>
</ul>


<h2>V:Side Story of WolfHockeyTeamEasy/Hard</h2>

<ul>
<li>問題、読めず。私の国語力も地に落ちたもの。</li>
<li>jpg埋め込みかよ</li>
<li><code>HOUSTON COSMONAUTS</code></li>
</ul>


<h2>W:Shiritori(部分点)</h2>

<ul>
<li>知るかいな(2回目)</li>
<li>本番中は1,2,3,4,5,7,8,9に正解できました。</li>
<li>ウルフサザ?なんですかそれGoogle検索結果0件なんですが…?「sothe」は不正解だしねぇ。</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#!/usr/bin/ruby
</span><span class='line'>T=%w(ke-ki ki kitune nezi zi ziyu-nomegami idou u uruhusaza huryoku kuku donou)
</span><span class='line'>puts T[gets.to_i-1]</span></code></pre></td></tr></table></div></figure>


<h2>X:Please ignore.</h2>

<ul>
<li>解いたらあかんやつ(2回目)</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOSのターミナルでIllegal Instruction: 4が表示される]]></title>
    <link href="http://cielavenir.github.io/blog/2016/08/09/ios-illegal-instruction/"/>
    <updated>2016-08-09T16:34:42+09:00</updated>
    <id>http://cielavenir.github.io/blog/2016/08/09/ios-illegal-instruction</id>
    <content type="html"><![CDATA[<ul>
<li>先日iPad Air 9.3.2を脱獄してから久しぶりにいろいろ遊んでます。</li>
<li><a href="http://leafmoon.users.sourceforge.net/cydia/">ech0chrome iPhone Repo on Cydia</a> (昔私がビルドしたソフト群)も一部使えました。ncompressとか(tar.Zとか今は使われてるんでしょうか…)</li>
<li>しかし、nkfやPuTTY、OpenHSPは「Illegal Instruction: 4」と出て動かない。</li>
<li>少し調べたところ、<a href="http://theiostream.tumblr.com/post/63923259800/patching-iphone-gcc-binaries-to-armv7s">http://theiostream.tumblr.com/post/63923259800/patching-iphone-gcc-binaries-to-armv7s</a> に行き当たりました。<code>ldr r3, [r3]</code>命令がarmv6/v7専用命令になっていて、armv7sで解釈できないのが原因とのこと。armv7sで解釈できるように手直しすればよいそうです。crt1.oだけがおかしく、原因は不明とのこと。</li>
</ul>


<pre><code>#!/bin/sh
for file in "$@";do
sed -i'' 's/\x00\x30\x93\xe4/\x00\x30\x93\xe5/g;s/\x00\x30\xd3\xe4/\x00\x30\xd3\xe5/g;' $file
ldid -S $file
done
</code></pre>

<ul>
<li>まあ、当時はiPhone 3GSやiPhone 4の時代だったので、v7sのことなんて頭になかったですからねぇ…</li>
<li>ビルドスクリプト、もしあったら、パッケージ化しようと思います。バックアップは今何処＾＾；(開発機のiPod Touch 3rdはヒューズが飛んだ状態)</li>
<li><p>てか、私の出してるiOS gccは間違いなく壊れたバイナリを出力するんですが、どうしたもんか。3.1.2用のtoolchainをセルフコンパイル用にポートしただけなので、新たにtoolchainを作る能力は私にはない＾＾；</p></li>
<li><p>ちなみに、Illegal Instruction: 4はこのパッチで直せますが、mmap error 22は直せません。</p></li>
<li><a href="https://forums.developer.apple.com/thread/7524">https://forums.developer.apple.com/thread/7524</a> によると、32bit dylibを読み込むにはMach-Oのヘッダがどうこうという話っぽいです。</li>
</ul>


<hr />

<ul>
<li>話は変わりますが、アプリ領域にアクセスするのが不便なのでapplinkなるソフトを作ってましたが、これもiOS8で使えなくなってた模様。com.apple.mobile.installation.plistがなくなったため。</li>
<li>突貫工事で新たに作りました。Pythonが必要ではありますが。しかもリンク名がアプリ識別子になる制限付き。</li>
<li><a href="https://gist.github.com/cielavenir/089ae47301458db8e2e04a67f72132b3">https://gist.github.com/cielavenir/089ae47301458db8e2e04a67f72132b3</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[atcoder] こだわり者いろはちゃん]]></title>
    <link href="http://cielavenir.github.io/blog/2016/07/25/irohas-obsession/"/>
    <updated>2016-07-25T16:10:23+09:00</updated>
    <id>http://cielavenir.github.io/blog/2016/07/25/irohas-obsession</id>
    <content type="html"><![CDATA[<p><a href="http://abc042.contest.atcoder.jp/tasks/arc058_a">http://abc042.contest.atcoder.jp/tasks/arc058_a</a>
<a href="http://arc058.contest.atcoder.jp/tasks/arc058_a">http://arc058.contest.atcoder.jp/tasks/arc058_a</a></p>

<h2>概要</h2>

<ul>
<li>N以上の数値で、与えられた数字を使わずに作れる最小のものを答える。</li>
</ul>


<h2>高速解法</h2>

<ul>
<li>使って良い数字の集合(入力の補集合)Aを求めておく。</li>
<li>まず、与えられた数値の文字列表記Sの前から後ろに向かって、使って良い数字以外が含まれる桁jを求める。

<ul>
<li>もし見つからないなら、Sを出力して終了する。</li>
</ul>
</li>
<li>桁jから前側に向かって、Siよりも大きい数字がAに含まれるような桁kを求める。見つからなければ-1とする。

<ul>
<li>大きい数字がAに含まれるとは、繰り上がりを受け切れるという意味である。</li>
</ul>
</li>
<li>kが-1ならばAの先頭(ただし先頭が0ならば次の要素)を出力。0以上ならばSの先頭からk文字とSkよりも大きい数字のうち最小のものを出力。</li>
<li>Aの先頭要素を(Sの文字数-k-1)だけつなげて出力。

<ul>
<li>kを-1にしておくとこの部分での場合分けが不要になるというわけ。</li>
</ul>
</li>
<li>2回Sを走査するので、計算量はO(S)あるいはO(logN)となる。</li>
</ul>


<h2>まとめ</h2>

<ul>
<li>土曜日、帰宅後に問題ページを開いて最初に思いついた解法がこれです。O(NlogN)解法の方が明らかに実装が楽なので、コンテストとしては負け。</li>
<li>復習コンテストのストックにしなかったのは、テストデータ作成が面倒だったからです。</li>
</ul>


<p><a href="http://abc042.contest.atcoder.jp/submissions/818591">http://abc042.contest.atcoder.jp/submissions/818591</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CROSS X BEATSをやってみて]]></title>
    <link href="http://cielavenir.github.io/blog/2016/02/29/crossbeats/"/>
    <updated>2016-02-29T23:59:59+09:00</updated>
    <id>http://cielavenir.github.io/blog/2016/02/29/crossbeats</id>
    <content type="html"><![CDATA[<ul>
<li>1/3、何を思ったか研究室から貸与されたiPadにインストール。まあ、共有物ではないし…</li>
<li>ULC、面白いシステムだと思う。(最後までプレイすることで完了させられるようになったのは最近らしいけど、それを差し置けば)難しい譜面も繰り返しプレイすることでクリアできるようになる点は良い。</li>
<li>節分キャンペーンを進める。所持していない楽曲はフレンド募集スレッドからプレイさせていただくことを学習する。シェアソングはソーシャル要素の答えの１つだと思った。</li>
<li>1/15、Break down獲得(RP600突破)。しかし、節分キャンペーンを進めた結果、同時期開催の個人戦報酬を落とす。まあ、ソシャゲを始めた時のイベント報酬が厳しいのと近いので、しかたがない。個人戦の課題曲が全て未所持であることも理由。</li>
<li>ランダムセレクト祭。ランダム選曲すると過去の曲が常駐するかもしれないというイベント。とりあえずフルコンボ譜面を増やす。</li>
<li>1/24、Azitate獲得。条件は難しい難易度であるMASTER譜面をULTIMATEで5曲クリアということで、当時はかなりきつい条件だった。ランダムセレクト祭で引き当てたEternallyが5曲目だった。</li>
<li>期間限定RP曲、未確認XX生命体を購入すれば5曲とも所持することになるので、購入。結果、2/8、RP1000突破。NEXT FRONTIER獲得。簡単な難易度であるSTANDARD譜面の難易度値がかなり高いんですが、慣れれば自然と指が動く面白い譜面。</li>
<li>2/17、RP1100突破。期間限定RP曲+上位20曲のため、いろいろ埋めないと上がらない。あと、Lobi入れた。</li>
<li>2/18、バレンタインキャンペーン完走。きつかったのがMake It Fresh HARDフルゲージと最後の1ページ MASTER Sランク。まあ、クリア出来てよかった(節分キャンペーンリバイバルの最後の報酬を諦めた理由がMASTERフルゲージで、それよりは簡単ですし…)。</li>
<li>2/28、RP1200突破。Touch of Goldと雨の音が虹を呼ぶでMASTER ULTできたのが大きい。</li>
<li>3/1、期間限定RP曲のうち4曲しか所持していないため、RP1200を割る。</li>
<li>この進行がハイペースかどうかを訊くのは愚問とのこと。落ち着いて考えればそうなのですが…。ごめんなさい。</li>
<li>まあ、個人個人自由に楽しむのが第一ですよね。</li>
<li>あとは、アンロックゲージが溜まったからといってすぐにアンロックチャレンジを開始すべきかという質問も愚問のよう。チケットの消費に慎重な人もいるかもしれないので。</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CROSS X BEATS 取得楽曲]]></title>
    <link href="http://cielavenir.github.io/blog/2016/02/11/crossbeats-music/"/>
    <updated>2016-02-11T03:57:27+09:00</updated>
    <id>http://cielavenir.github.io/blog/2016/02/11/crossbeats-music</id>
    <content type="html"><![CDATA[<ul>
<li>CROSS X BEATSを始めて2ヶ月、42曲となりました。(RP以外の)ミッション曲を全部回収したこともあり、今後曲がどんどん増えていくということはないでしょう。</li>
<li>というわけで、時系列でまとめておきます。</li>
</ul>


<table>
<thead>
<tr>
<th style="text-align:left;">曲数</th>
<th style="text-align:left;">日時</th>
<th style="text-align:left;">取得楽曲</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left;">10</td>
<td style="text-align:left;">1 / 3</td>
<td style="text-align:left;">Wanna Be Your Special / Touch Of Gold / 雨の音が虹を呼ぶ / DIAMOND SKIN / Wasteland<br>When You Call My Name / キミとMUSIC / Aqualight / Wanyo Wanyo / Lotus Love</td>
</tr>
<tr>
<td style="text-align:left;">13</td>
<td style="text-align:left;">1 / 5</td>
<td style="text-align:left;">Loveless / Landing on the moon / Jahacid</td>
</tr>
<tr>
<td style="text-align:left;">16</td>
<td style="text-align:left;">1 / 6</td>
<td style="text-align:left;">Freak With Me / ホントのワタシ / Dirty Mouth</td>
</tr>
<tr>
<td style="text-align:left;">18</td>
<td style="text-align:left;">1 / 8</td>
<td style="text-align:left;">Hi / Binary Overdrive</td>
</tr>
<tr>
<td style="text-align:left;">19</td>
<td style="text-align:left;">1 / 9</td>
<td style="text-align:left;">Anomie</td>
</tr>
<tr>
<td style="text-align:left;">20</td>
<td style="text-align:left;">1 / 12</td>
<td style="text-align:left;">Otherside</td>
</tr>
<tr>
<td style="text-align:left;">21</td>
<td style="text-align:left;">1 / 13</td>
<td style="text-align:left;">What is Wrong With The World</td>
</tr>
<tr>
<td style="text-align:left;">23</td>
<td style="text-align:left;">1 / 15</td>
<td style="text-align:left;">Break down / エアリアル</td>
</tr>
<tr>
<td style="text-align:left;">24</td>
<td style="text-align:left;">1 / 20</td>
<td style="text-align:left;">DAZZLING♡SEASON</td>
</tr>
<tr>
<td style="text-align:left;">25</td>
<td style="text-align:left;">1 / 22</td>
<td style="text-align:left;"><font color="teal">Eternally</font></td>
</tr>
<tr>
<td style="text-align:left;">26</td>
<td style="text-align:left;">1 / 23</td>
<td style="text-align:left;">Giant Killing</td>
</tr>
<tr>
<td style="text-align:left;">28</td>
<td style="text-align:left;">1 / 24</td>
<td style="text-align:left;">Azitate / <font color="orange">Cross + Angel</font></td>
</tr>
<tr>
<td style="text-align:left;">29</td>
<td style="text-align:left;">1 / 26</td>
<td style="text-align:left;"><font color="teal">everKrack</font></td>
</tr>
<tr>
<td style="text-align:left;">30</td>
<td style="text-align:left;">1 / 28</td>
<td style="text-align:left;"><font color="teal">Winter, again</font></td>
</tr>
<tr>
<td style="text-align:left;">31</td>
<td style="text-align:left;">2 / 7</td>
<td style="text-align:left;"><strong>未確認XX生命体</strong></td>
</tr>
<tr>
<td style="text-align:left;">32</td>
<td style="text-align:left;">2 / 8</td>
<td style="text-align:left;"><strong>NEXT FRONTIER</strong></td>
</tr>
<tr>
<td style="text-align:left;">33</td>
<td style="text-align:left;">2 / 11</td>
<td style="text-align:left;"><strong>The Epic</strong></td>
</tr>
<tr>
<td style="text-align:left;">34</td>
<td style="text-align:left;">2 / 14</td>
<td style="text-align:left;">How True Is Your Love</td>
</tr>
<tr>
<td style="text-align:left;">36</td>
<td style="text-align:left;">2 / 15</td>
<td style="text-align:left;">nightmares / default affinity</td>
</tr>
<tr>
<td style="text-align:left;">37</td>
<td style="text-align:left;">2 / 19</td>
<td style="text-align:left;"><font color="teal">JUSTICE from GUILTY</font></td>
</tr>
<tr>
<td style="text-align:left;">38</td>
<td style="text-align:left;">2 / 20</td>
<td style="text-align:left;"><font color="teal">Re:Milky way</font></td>
</tr>
<tr>
<td style="text-align:left;">41</td>
<td style="text-align:left;">2 / 21</td>
<td style="text-align:left;"><font color="teal">エール</font> / <font color="teal">誘惑</font> / <font color="teal">オーバーラップ</font></td>
</tr>
<tr>
<td style="text-align:left;">42</td>
<td style="text-align:left;">2 / 22</td>
<td style="text-align:left;"><font color="teal">Nu Heat</font></td>
</tr>
<tr>
<td style="text-align:left;">44</td>
<td style="text-align:left;">3 / 10</td>
<td style="text-align:left;">BASS ANTICS / Doki Blaster</td>
</tr>
<tr>
<td style="text-align:left;">45</td>
<td style="text-align:left;">3 / 12</td>
<td style="text-align:left;">BRAND NEW</td>
</tr>
<tr>
<td style="text-align:left;">46</td>
<td style="text-align:left;">3 / 22</td>
<td style="text-align:left;"><font color="teal">最後の１ページ</font></td>
</tr>
<tr>
<td style="text-align:left;">48</td>
<td style="text-align:left;">4 / 8</td>
<td style="text-align:left;">boule de berlin / cloudstepping</td>
</tr>
<tr>
<td style="text-align:left;">50</td>
<td style="text-align:left;">4 / 9</td>
<td style="text-align:left;">残響のアカーシャ / <strong>Impact</strong></td>
</tr>
<tr>
<td style="text-align:left;">51</td>
<td style="text-align:left;">4 / 11</td>
<td style="text-align:left;">the Last Missile Man</td>
</tr>
<tr>
<td style="text-align:left;">53</td>
<td style="text-align:left;">4 / 23</td>
<td style="text-align:left;">光年 / Human Nature</td>
</tr>
<tr>
<td style="text-align:left;">55</td>
<td style="text-align:left;">5 / 5</td>
<td style="text-align:left;"><font color="teal">Azitate (Prologue Edition)</font> / <font color="orange">Touch Of Gold (Bongo Mango Remix)</font></td>
</tr>
<tr>
<td style="text-align:left;">56</td>
<td style="text-align:left;">5 / 6</td>
<td style="text-align:left;"><font color="teal">HEADPHONE PARTY</font></td>
</tr>
<tr>
<td style="text-align:left;">58</td>
<td style="text-align:left;">5 / 10</td>
<td style="text-align:left;">イルミナレガロ / Deep Outside</td>
</tr>
<tr>
<td style="text-align:left;">60</td>
<td style="text-align:left;">5 / 23</td>
<td style="text-align:left;">Harmony / Flame Up</td>
</tr>
<tr>
<td style="text-align:left;">61</td>
<td style="text-align:left;">5 / 27</td>
<td style="text-align:left;"><font color="teal">ツカイステ・デッドワールド</font></td>
</tr>
<tr>
<td style="text-align:left;">62</td>
<td style="text-align:left;">5 / 28</td>
<td style="text-align:left;"><font color="orange">最終回STORY</font></td>
</tr>
<tr>
<td style="text-align:left;">63</td>
<td style="text-align:left;">5 / 29</td>
<td style="text-align:left;"><font color="teal">Landing on the moon (Inst)</font></td>
</tr>
<tr>
<td style="text-align:left;">64</td>
<td style="text-align:left;">6 / 1</td>
<td style="text-align:left;"><font color="orange">Into the Cave</font></td>
</tr>
<tr>
<td style="text-align:left;">65</td>
<td style="text-align:left;">6 / 6</td>
<td style="text-align:left;"><font color="orange">Wonderful</font></td>
</tr>
<tr>
<td style="text-align:left;">67</td>
<td style="text-align:left;">6 / 16</td>
<td style="text-align:left;">Indigo Isle / Free</td>
</tr>
<tr>
<td style="text-align:left;">78</td>
<td style="text-align:left;">6 / 21</td>
<td style="text-align:left;">killy killy JOKER / 海色 / 白鳥の湖 / トルコ行進曲 / イジメダメゼッタイ<br>Hopes Bright / いいね！ / Flowerwall / ギミチョコ / サバイバル<br>ヘドバンギャー</td>
</tr>
<tr>
<td style="text-align:left;">80</td>
<td style="text-align:left;">6 / 24</td>
<td style="text-align:left;"><font color="teal">Sunny day</font> / <font color="teal">Vespero</font></td>
</tr>
<tr>
<td style="text-align:left;">81</td>
<td style="text-align:left;">6 / 28</td>
<td style="text-align:left;"><font color="orange">Anomie (Axiom Style)</font></td>
</tr>
<tr>
<td style="text-align:left;">82</td>
<td style="text-align:left;">6 / 29</td>
<td style="text-align:left;"><font color="orange">NEXT FRONTIER -TRUE RISE-</font></td>
</tr>
<tr>
<td style="text-align:left;">83</td>
<td style="text-align:left;">7 / 4</td>
<td style="text-align:left;"><font color="orange">Murasame</font></td>
</tr>
<tr>
<td style="text-align:left;">85</td>
<td style="text-align:left;">7 / 5</td>
<td style="text-align:left;">ソンザイキョウドウタイ / 妄想全開</td>
</tr>
<tr>
<td style="text-align:left;">86</td>
<td style="text-align:left;">7 / 8</td>
<td style="text-align:left;">tokyo</td>
</tr>
<tr>
<td style="text-align:left;">88</td>
<td style="text-align:left;">7 / 21</td>
<td style="text-align:left;">Bi-Zon Zon Zombi (More) / 光年 Remix</td>
</tr>
<tr>
<td style="text-align:left;">91</td>
<td style="text-align:left;">7 / 22</td>
<td style="text-align:left;"><font color="orange">Reseed</font> / <font color="teal">メギツネ</font> / <font color="teal">Dreaming Girl</font></td>
</tr>
<tr>
<td style="text-align:left;">97</td>
<td style="text-align:left;">7 / 23</td>
<td style="text-align:left;"><font color="teal">Make It Fresh</font> / <font color="teal">逆転裁判</font> / <font color="orange">Raise Your Handz</font> / <font color="orange">チルドレン・オートマトン</font> / <font color="orange">Designed World</font><br><font color="teal">What is Wrong With The World (Cross)</font></td>
</tr>
<tr>
<td style="text-align:left;">98</td>
<td style="text-align:left;">7 / 24</td>
<td style="text-align:left;"><font color="orange">Sundrop (Remix)</font></td>
</tr>
<tr>
<td style="text-align:left;">101</td>
<td style="text-align:left;">7 / 25</td>
<td style="text-align:left;"><font color="teal">RIDE ON NOW</font> / <font color="orange">ロマンシングゲーム</font> / <font color="orange">ロックマン</font></td>
</tr>
<tr>
<td style="text-align:left;">103</td>
<td style="text-align:left;">7 / 26</td>
<td style="text-align:left;"><font color="teal">MERCURY</font> / <font color="teal">some day (instrumental)</font></td>
</tr>
<tr>
<td style="text-align:left;">105</td>
<td style="text-align:left;">7 / 27</td>
<td style="text-align:left;"><font color="teal">Voice Of House</font> / <strong>Z[i]</strong></td>
</tr>
<tr>
<td style="text-align:left;">106</td>
<td style="text-align:left;">7 / 29</td>
<td style="text-align:left;"><font color="orange">戦国BASARA</font></td>
</tr>
<tr>
<td style="text-align:left;">107</td>
<td style="text-align:left;">7 / 30</td>
<td style="text-align:left;"><font color="orange">Virtual Reality Controller</font></td>
</tr>
<tr>
<td style="text-align:left;">109</td>
<td style="text-align:left;">7 / 31</td>
<td style="text-align:left;"><font color="orange">ピコラセテ (Inst)</font> / <font color="orange">Sapphire</font></td>
</tr>
<tr>
<td style="text-align:left;">110</td>
<td style="text-align:left;">8 / 2</td>
<td style="text-align:left;">Reuniverse</td>
</tr>
<tr>
<td style="text-align:left;">111</td>
<td style="text-align:left;">8 / 5</td>
<td style="text-align:left;">VOHリミ</td>
</tr>
<tr>
<td style="text-align:left;">113</td>
<td style="text-align:left;">8 / 17</td>
<td style="text-align:left;">Always Thinkg Of You / Machine</td>
</tr>
<tr>
<td style="text-align:left;">114</td>
<td style="text-align:left;">8 / 18</td>
<td style="text-align:left;"><font color="orange">Timeless encode</font></td>
</tr>
<tr>
<td style="text-align:left;">115</td>
<td style="text-align:left;">8 / 20</td>
<td style="text-align:left;"><font color="teal">Moonrise</font></td>
</tr>
<tr>
<td style="text-align:left;">116</td>
<td style="text-align:left;">8 / 21</td>
<td style="text-align:left;"><font color="orange">OKOKUNIKOD</font></td>
</tr>
<tr>
<td style="text-align:left;">117</td>
<td style="text-align:left;">8 / 23</td>
<td style="text-align:left;"><font color="orange">ホコロビシロガールズ</font></td>
</tr>
<tr>
<td style="text-align:left;">118</td>
<td style="text-align:left;">8 / 28</td>
<td style="text-align:left;">Wanna Be Your Special (Remix)</td>
</tr>
<tr>
<td style="text-align:left;">121</td>
<td style="text-align:left;">9 / 10</td>
<td style="text-align:left;">ストレンジ・ディーヴァ / Don&rsquo;t Walk Away / All U Need</td>
</tr>
<tr>
<td style="text-align:left;">132</td>
<td style="text-align:left;">9 / 13</td>
<td style="text-align:left;">シュガーソングとビターステップ / Inner Urge / D.O.B. / ViViD / unfinished<br>Break a spell / メモリーズ / WE GO / X-encounter / Light My Fire<br>show</td>
</tr>
<tr>
<td style="text-align:left;">140</td>
<td style="text-align:left;">9 / 16</td>
<td style="text-align:left;"><font color="orange">電脳少女</font> / <font color="orange">I.D.</font> / <font color="orange">Sundrop</font> / <font color="orange">some day see you again</font> / <font color="orange">甘い言葉</font><br><font color="orange">Driving story</font> / <font color="orange">覚醒awake</font> / <font color="orange">NIGHT FEELIN</font></td>
</tr>
<tr>
<td style="text-align:left;">143</td>
<td style="text-align:left;">9 / 17</td>
<td style="text-align:left;"><font color="orange">大殺界</font> / <font color="orange">現実幻覚スピードスター</font> / <font color="orange">サマ★ラブ</font> / <font color="orange"></font></td>
</tr>
<tr>
<td style="text-align:left;">145</td>
<td style="text-align:left;">9 / 18</td>
<td style="text-align:left;"><font color="orange">Addicted</font> / <font color="orange">Break Your World</font></td>
</tr>
<tr>
<td style="text-align:left;">150</td>
<td style="text-align:left;">9 / 19</td>
<td style="text-align:left;"><font color="orange">Aqualight (Remix)</font> / <font color="orange">魔界村</font> / <font color="orange">ピコラセテ</font> / <font color="orange">Reanimation</font> / <font color="orange">Omniverse</font></td>
</tr>
<tr>
<td style="text-align:left;">153</td>
<td style="text-align:left;">9 / 20</td>
<td style="text-align:left;"><font color="orange">CrossShooter</font> / <font color="orange">Rebellion</font> / <font color="orange">Underworld</font></td>
</tr>
<tr>
<td style="text-align:left;">154</td>
<td style="text-align:left;">9 / 21</td>
<td style="text-align:left;"><font color="orange">SUNDAY リベンジ</font></td>
</tr>
<tr>
<td style="text-align:left;">155</td>
<td style="text-align:left;">9 / 22</td>
<td style="text-align:left;"><font color="orange">DREAMIN' OF YOU</font></td>
</tr>
<tr>
<td style="text-align:left;">157</td>
<td style="text-align:left;">10 / 8</td>
<td style="text-align:left;">Assign / Flame Up (Remix)</td>
</tr>
<tr>
<td style="text-align:left;">159</td>
<td style="text-align:left;">10 / 19</td>
<td style="text-align:left;">FUNKYBABY EVOLUTION / SuperLuminalGirl Rebirth</td>
</tr>
<tr>
<td style="text-align:left;">160</td>
<td style="text-align:left;">10 / 24</td>
<td style="text-align:left;"><font color="orange">Bi-Zon Zon Zombi</font></td>
</tr>
<tr>
<td style="text-align:left;">162</td>
<td style="text-align:left;">11 / 10</td>
<td style="text-align:left;">Burning Inside / Resonance</td>
</tr>
<tr>
<td style="text-align:left;">163</td>
<td style="text-align:left;">11 / 12</td>
<td style="text-align:left;">BUZZ Ketos</td>
</tr>
<tr>
<td style="text-align:left;">164</td>
<td style="text-align:left;">11 / 14</td>
<td style="text-align:left;"><strong>DYNAMITE SENSATION</strong></td>
</tr>
<tr>
<td style="text-align:left;">165</td>
<td style="text-align:left;">11 / 19</td>
<td style="text-align:left;"><font color="orange">Break down (2nd)</font></td>
</tr>
<tr>
<td style="text-align:left;">166</td>
<td style="text-align:left;">11 / 20</td>
<td style="text-align:left;"><font color="orange">ASTAROTH</font></td>
</tr>
<tr>
<td style="text-align:left;">167</td>
<td style="text-align:left;">11 / 21</td>
<td style="text-align:left;"><font color="orange">Another Chance</font></td>
</tr>
<tr>
<td style="text-align:left;">168</td>
<td style="text-align:left;">11 / 23</td>
<td style="text-align:left;"><font color="orange">Hisui</font></td>
</tr>
<tr>
<td style="text-align:left;">169</td>
<td style="text-align:left;">11 / 24</td>
<td style="text-align:left;"><font color="orange">Designed World (Remix)</font></td>
</tr>
<tr>
<td style="text-align:left;">170</td>
<td style="text-align:left;">11 / 28</td>
<td style="text-align:left;"><font color="orange">Crystal Ribbon</font></td>
</tr>
<tr>
<td style="text-align:left;">172</td>
<td style="text-align:left;">11 / 29</td>
<td style="text-align:left;"><font color="orange">Soda Machine</font> / <font color="orange">Grand Arc (Club Remix)</font></td>
</tr>
<tr>
<td style="text-align:left;">174</td>
<td style="text-align:left;">12 / 7</td>
<td style="text-align:left;">Interstellar Plazma / Sangeyasya</td>
</tr>
<tr>
<td style="text-align:left;">175</td>
<td style="text-align:left;">12 / 21</td>
<td style="text-align:left;">フォルテシモ</td>
</tr>
<tr>
<td style="text-align:left;">177</td>
<td style="text-align:left;">12 / 25</td>
<td style="text-align:left;">Metro Night / ULTRiX</td>
</tr>
</tbody>
</table>


<ul>
<li>月別獲得数</li>
<li>30,12,4,7,10,19,<strong>27</strong>,9,<strong>37</strong>,5,12,5</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[atcoder] 高橋君とパスワード]]></title>
    <link href="http://cielavenir.github.io/blog/2016/01/14/takahashikun-password/"/>
    <updated>2016-01-14T01:37:00+09:00</updated>
    <id>http://cielavenir.github.io/blog/2016/01/14/takahashikun-password</id>
    <content type="html"><![CDATA[<p><a href="http://abc032.contest.atcoder.jp/tasks/abc032_b">http://abc032.contest.atcoder.jp/tasks/abc032_b</a></p>

<h2>概要</h2>

<ul>
<li>sからk文字取り出して、その部分文字列を連想配列に突っ込んで、重複しない数を答える。</li>
</ul>


<h2>高速解法</h2>

<ul>
<li>ローリングハッシュを生成する。ローリングハッシュには、<code>hash[a:c] = (hash[a:b]*B**(c-b) + hash[b:c]) % P</code>という性質がある。</li>
<li>今回はhash[i:i+k]が得られれば良いので、この式を<code>hash[b:c] = ...</code>と変形すれば良い。</li>
<li>部分ハッシュを得るのは、<code>B**(c-b)</code>を事前に計算しておくことでO(1)とできる。</li>
<li>また、連想配列がハッシュテーブルならば重複判定もO(1)なので、トータルでO(s)となる。</li>
<li><a href="http://abc032.contest.atcoder.jp/submissions/608838">http://abc032.contest.atcoder.jp/submissions/608838</a>

<ul>
<li>※C++98互換のためunordered_setではなくsetを使っているためこの実装はO(slogs)</li>
</ul>
</li>
</ul>


<h2>まとめ</h2>

<ul>
<li>今回の制約では全くの無駄ですので、解法は賢く選びましょう。</li>
<li>なぜyukicoder復習コンテストのストックにしなかったし。提出後に気づいたので後の祭り。</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[yukicoder] (P,Q)-サンタと街の子供たち]]></title>
    <link href="http://cielavenir.github.io/blog/2015/12/14/pq-santa/"/>
    <updated>2015-12-14T23:59:59+09:00</updated>
    <id>http://cielavenir.github.io/blog/2015/12/14/pq-santa</id>
    <content type="html"><![CDATA[<ul>
<li>P,Qがどちらも0の場合はX==0とY==0だけを数えます。</li>
<li>簡単のため、P,Qの最大公約数を単位とする座標系に変換します。X,Yが変換できなければ弾きます。</li>
<li>ここで、各方向に進む回数をa,b,c,dと置くと、</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>(a+b)P+(c+d)Q==X - (1)
</span><span class='line'>(c-d)P+(a-b)Q==Y - (2)</span></code></pre></td></tr></table></div></figure>


<ul>
<li>となります。</li>
<li>α=a+b、β=c+dとおきます。</li>
<li>αP+βQ==1を満たす(α,β)を拡張ユークリッド互除法で求めます。

<ul>
<li>代表値を(z1,z2)とすると、式(1)を満たすのは、α=z1<em>X+Q</em>n、β=z2<em>X-P</em>nとなります。</li>
</ul>
</li>
<li>式(2)を<code>(β-2d)P+(α-2b)Q==Y</code>と変形し、αとβを代入して、整理します。<code>2*P*d+2*Q*b==(Q*Q-P*P)*n+z2*X*P+z1*X*Q-Y</code>となります。</li>
<li>この不定方程式において、 <strong>整数解(d,b)を持つようなnが存在する</strong> ことが問題が求める条件となります。

<ul>
<li>ここで、上で媒介変数表示により変数を一個減らしたことが効いてきます。</li>
</ul>
</li>
<li><code>(Q*Q-P*P)*n+z2*X*P+z1*X*Q-Y</code>が<code>gcd(2*P,2*Q)</code>の倍数であることが条件ですので、<code>-(z2*X*P+z1*X*Q-Y)%gcd(Q*Q-P*P,gcd(2*P,2*Q))==0</code>を判定します。</li>
<li>なお、このnを用いてd,bを拡張ユークリッド互除法から求めることで、a,cも求まりますので、原点から何回で目標に到達するかを実際に計算することも可能です。

<ul>
<li>プログラムにおいてeとfが可変。abs(a)+abs(b)+abs&copy;+abs(d)が最小となるようなe,fを求めるのもまた一興かと(やってませんが)。</li>
</ul>
</li>
</ul>


<p><a href="http://yukicoder.me/submissions/65751">http://yukicoder.me/submissions/65751</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Code Runner 2015 参加記]]></title>
    <link href="http://cielavenir.github.io/blog/2015/12/14/coderunner2015/"/>
    <updated>2015-12-14T18:25:54+09:00</updated>
    <id>http://cielavenir.github.io/blog/2015/12/14/coderunner2015</id>
    <content type="html"><![CDATA[<p>参加記、書く予定なかったけど、私のことがコンテストレポートに載る可能性が濃厚なので、書くことにする。</p>

<ul>
<li>CodeIQパーカー。Code Festivalでパーカー獲得が叶ったので、今日も願掛けです。</li>
<li>orisano氏とjmc.miz-miz.bizの話とか(jmc、A問題であふあふなんですが…)。kcs/koj復活お願いします(開発頑張ってください)。

<ul>
<li><del>てか、yukicoderもkojも、Docker-Builder部分は公開してはどうでしょうか。</del></li>
<li>セキュリティの問題があるので公開はあれですが、問い合わせは可とするのは。どうしてもサイトを作りたい人には、みたく。</li>
</ul>
</li>
</ul>


<table>
<thead>
<tr>
<th style="text-align:left;">時間</th>
<th style="text-align:left;">コメント</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left;">0:00</td>
<td style="text-align:left;">問題のリンクが違う、昨年に続き。大丈夫ですか。 <strong>game.coderunner.jpは開いたので、一番上に書いてあるAPIを叩きまくって負債を抱える大事故。</strong> 問題読まないの、絶対ダメ。</td>
</tr>
<tr>
<td style="text-align:left;">0:25</td>
<td style="text-align:left;">正の得点が取れるプログラムを書くことができた。 <strong>仕事を請けて、全割当。納期に収まるかどうかとか考えてません。</strong> コメント変更「今回、今までの全6問で初の、誰でも正の点数を取れるわけではない問題。」</td>
</tr>
<tr>
<td style="text-align:left;">0:40</td>
<td style="text-align:left;">点数の推移がおかしいのが注目されたらしく、インタビューを受けることに。実はこの時点でほぼ万策尽きていたので、考え中というのは半分取り繕い。ただ、得点が半分になるルールをこの時知った(0:30の時点で負債が半分になっていた)ので、ラッキーでした。 <strong>でも…解説放送聞きたかったなぁ。</strong></td>
</tr>
<tr>
<td style="text-align:left;">1:30</td>
<td style="text-align:left;">仕事量と報酬から計算される仮想乱数値が75以上(外注元の利益を考え80にはしてない。ただ、これ以上下げると安請け合いと判断した)、仕事量が1250以上(報酬は2乗で計算されるため)、得意な仕事(仕事Xに対する全社員の速度の和が90以上)について、外注から請ける処理を実装した。</td>
</tr>
<tr>
<td style="text-align:left;">2:10</td>
<td style="text-align:left;">0:50〜1:40まで10位をキープしていたが、この辺りで20位ほどに。コメント変更「 <strong>闘え、堕ちるまで。</strong> 」</td>
</tr>
<tr>
<td style="text-align:left;">3:00</td>
<td style="text-align:left;">論文を読みながら過ごし、終了。33位。</td>
</tr>
</tbody>
</table>


<ul>
<li>10位以内のパーカーはないんですね。願掛けはあくまでパーカーに対するものと考えれば前提が(略)</li>
<li>懇親会、時間中に3ブースかつ先着でトートバッグとかいろいろひどくないですか。

<ul>
<li>私は特別に頂けましたが。kenkoooo氏からもらったようなものなので、使うことにします。。</li>
</ul>
</li>
<li><p>食事はあまり摂れませんでした。昼食のサンドイッチを食べたのがコンテスト開始後2時間だったので、まあよかった(サンドイッチ食べたの遅すぎたかなと心配していましたが杞憂に終わった(よくない))。</p></li>
<li><p>帰り、レジャーランドでmusecaやった。となりにsnuke氏がいた。<del>対戦とかはしてませんが。twitterで募集かけてればまた違ったかも。</del>そういえばmusecaって現在は対戦機能ないんだった。</p></li>
<li><p>そういえばインタビューでシエルについて訊かれたんだっけ。<a href="https://ja.wikipedia.org/wiki/%E3%82%B9%E3%82%AB%E3%82%A4%E3%82%AC%E3%83%B3%E3%83%8A%E3%83%BC">スカイガンナー</a>、機会があったらやってみてください。キャラは可愛いのにゲーム内容がかなりガチだったりするので＾＾；</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ [yukicoder] 辺の追加]]></title>
    <link href="http://cielavenir.github.io/blog/2015/12/11/add-edges/"/>
    <updated>2015-12-11T06:11:16+09:00</updated>
    <id>http://cielavenir.github.io/blog/2015/12/11/add-edges</id>
    <content type="html"><![CDATA[<p><a href="http://yukicoder.me/problems/896">http://yukicoder.me/problems/896</a></p>

<ul>
<li>まず、union-findで島の大きさを列挙し、その列挙されたものに対し、bag[0]=-1として、最小値版0-1ナップザックを行えばよいです。</li>
<li>しかし、これでは、島の個数をXとすると、O(NX)であり、Xの最大値はNなので、島が多数あった場合に最悪O(N<sup>2</sup>)となり、TLEになってしまいます。</li>
<li><p>そこで、ダブリングを行います。例えば、大きさ2の島が10個ある場合、「大きさ2コスト1」を10回並べるのではなく、「大きさ2コスト1」「大きさ4コスト2」「大きさ8コスト4」「大きさ6コスト3」の4つを並べれば良いことになります。</p>

<ul>
<li>最後の3は<code>10-1-2-4</code>のように求められます。</li>
</ul>
</li>
<li><p><a href="http://yukicoder.me/submissions/64709">http://yukicoder.me/submissions/64709</a></p></li>
<li><p>この考え方はtails氏の答案( <a href="http://yukicoder.me/submissions/64600">http://yukicoder.me/submissions/64600</a> )を参考にしました。ありがとうございます。</p></li>
</ul>


<h3>追伸</h3>

<ul>
<li>蟻本302ページに普通に書いてありました。まだ読み終わっていないため、勉強不足ということが露呈しました…</li>
<li>deque解法が多いのはスライド最小値の考え方で解けるかららしいですね。ダブリング解法は(計算量が少し増えることもあって)少数派のようです。</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CodeEval 219 The Tourist]]></title>
    <link href="http://cielavenir.github.io/blog/2015/11/22/codeeval219/"/>
    <updated>2015-11-22T04:13:10+09:00</updated>
    <id>http://cielavenir.github.io/blog/2015/11/22/codeeval219</id>
    <content type="html"><![CDATA[<p>問題文：<a href="https://www.codeeval.com/browse/219/">https://www.codeeval.com/browse/219/</a></p>

<h2>概要</h2>

<ul>
<li>探偵が複数の都市を全て回るとき、その距離の合計値の最小を出力する問題。</li>
<li>こう書くと、巡回セールスマン問題だと思いたいですが、なんと、 <strong>最小全域木</strong> 問題である。やばくないですか。問題文ではHeと <strong>単数形</strong> で書かれていますが…分身できるんですか。</li>
<li>普通にクラスカル法で解けば良いのでその部分の解説は他に譲ります。もしくは私の解答集を見ても。</li>
</ul>


<h2>注意点</h2>

<ul>
<li>Falseを出力すべきなのは、

<ul>
<li>グラフが連結でない場合</li>
<li><strong>グラフに示されていない点が存在する場合</strong></li>
</ul>
</li>
<li>である。たとえば、<code>1 2 1 | 2 4 1</code>の答えは、2ではなくFalseである。つまり、点番号を詰める必要はないということ。</li>
<li>多重辺を持つ場合、 <strong>一番後ろの辺を採用</strong> する。例えば、<code>1 2 1 | 2 1 2</code>の場合、点1と点2の間にコスト2の無向辺を張る。</li>
</ul>


<h2>まとめ</h2>

<ul>
<li>公式掲示板の <a href="https://getsatisfaction.com/codeeval/topics/-the-tourist-challenge-is-not-defined-properly">https://getsatisfaction.com/codeeval/topics/-the-tourist-challenge-is-not-defined-properly</a> スレッドがなければ解けませんでした。</li>
<li>解法がミスリードすぎるのは(拙作Rotate Holeの旧問題文以上に)やばいと思います。</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Code Festival 2015 参加記]]></title>
    <link href="http://cielavenir.github.io/blog/2015/11/16/code-festival-2015/"/>
    <updated>2015-11-16T02:06:30+09:00</updated>
    <id>http://cielavenir.github.io/blog/2015/11/16/code-festival-2015</id>
    <content type="html"><![CDATA[<p>記憶が残っている内に参加記を書いておくことにした。</p>

<h2>予選</h2>

<ul>
<li>A: D問題、65分で書き終わったが、2分探索がオーバーフローしているのに気付かず、109分でAC。129位。ぎりぎり通過。</li>
<li>B: 範囲結合で行けると思ったが、微妙にバグらせて、113分でAC。ただ、予選Bは全完が少なかったので、58位。</li>
</ul>


<h2>木曜〜金曜</h2>

<p>短縮王、あなごるにて、とりあえず充足解を出したあと、適当にクロック数を減らす。
一方、Union-Findは再帰しない答案が通ってしまったが、本番で通らないとまずいので、最初の答案は残しておいた。</p>

<h2>1日目</h2>

<h3>朝</h3>

<ul>
<li>9:30起床、初のCodeIQパーカーを来て出発。コンビニでおにぎりを買って食べる。こどふぇすで出るおにぎりだけではもたないことがわかっていたので。

<ul>
<li>去年は(おにぎりが出るのを知らずに)御茶ノ水の日高屋で食べたが、六本木一丁目ではそういうことはできそうにない。</li>
</ul>
</li>
<li>会場で、スタンプラリーを見て戦慄する。適当に参加すれば12〜3個は取れるが、スケジュールが重なっているため、15個取るにはフル参加がほぼ必須である。</li>
</ul>


<h3>本選</h3>

<ul>
<li>スタンプ1</li>
<li>パーカーボーダーが6問から5問に減ったと知って喜んだが、その分難易度が左に一個ずれただけなのではという危惧を抱く。</li>
<li>ネットワークの不具合でやる気の大半が削がれる。<a href="https://empireofcode.com/">Empire of Code</a>やったり。コード川柳のネタが生える(※1)。</li>
</ul>


<table>
<thead>
<tr>
<th style="text-align:left;">時間</th>
<th style="text-align:left;">言語</th>
<th style="text-align:left;">問題(A-J)</th>
<th style="text-align:left;">コメント</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left;">44秒</td>
<td style="text-align:left;">Ruby</td>
<td style="text-align:left;">A</td>
<td style="text-align:left;"><strong>AC</strong> 。<code>a[0].size==5&amp;&amp;a[1].size==7&amp;&amp;a[2].size==5</code>というくそコードを生み出す。<code>gets.split.map(&amp;:size)==[5,7,5]</code>とタイプしていたらFAだった。</td>
</tr>
<tr>
<td style="text-align:left;">0:03</td>
<td style="text-align:left;">Ruby</td>
<td style="text-align:left;">B</td>
<td style="text-align:left;"><code>[*2..6*N]</code>の中央値でしょ -> WA。焦る。</td>
</tr>
<tr>
<td style="text-align:left;">0:09</td>
<td style="text-align:left;">Ruby</td>
<td style="text-align:left;">C</td>
<td style="text-align:left;">そのまま置けるときは置く、そうでない場合分解が必要かどうか判断する貪欲法。 <strong>AC</strong></td>
</tr>
<tr>
<td style="text-align:left;">0:16</td>
<td style="text-align:left;">Ruby</td>
<td style="text-align:left;">E</td>
<td style="text-align:left;">適当に置換 WA</td>
</tr>
<tr>
<td style="text-align:left;">0:20</td>
<td style="text-align:left;">Ruby</td>
<td style="text-align:left;">E</td>
<td style="text-align:left;">WA</td>
</tr>
<tr>
<td style="text-align:left;">0:25</td>
<td style="text-align:left;">Ruby</td>
<td style="text-align:left;">B</td>
<td style="text-align:left;">N=1の処理を追加するも WA</td>
</tr>
<tr>
<td style="text-align:left;">0:30</td>
<td style="text-align:left;">Ruby</td>
<td style="text-align:left;">D</td>
<td style="text-align:left;">最大被覆-1 WA。rprocon 2013FでnCrの計算式を間違えたり、code festival 2015予選A Dで2分探索がオーバーフローしたりとRHDコンテストには魔が潜む、その魔に今回も喰われるのか。2問で終わるのか。 <em>激しく焦る。胸が痛む。</em></td>
</tr>
<tr>
<td style="text-align:left;">0:33</td>
<td style="text-align:left;">Python</td>
<td style="text-align:left;">B</td>
<td style="text-align:left;">N〜N*6の確率を全部求め、その最大を答えるという酷い実装。<a href="http://www.checkio.org/mission/probably-dice/share/3d723f2165fef2b5dc2b1992ae7eb3e6/">CheckiO probably-dice</a>をコピった。 <strong>AC</strong></td>
</tr>
<tr>
<td style="text-align:left;">0:54</td>
<td style="text-align:left;">Ruby</td>
<td style="text-align:left;">E</td>
<td style="text-align:left;">2**3通り、-10〜10に対しシミュレーションする。WA</td>
</tr>
<tr>
<td style="text-align:left;">0:55</td>
<td style="text-align:left;">Ruby</td>
<td style="text-align:left;">E</td>
<td style="text-align:left;">WA</td>
</tr>
<tr>
<td style="text-align:left;">0:57</td>
<td style="text-align:left;">Ruby</td>
<td style="text-align:left;">E</td>
<td style="text-align:left;">探索部分のバグを修正成功。 <strong>AC</strong></td>
</tr>
<tr>
<td style="text-align:left;">1:20</td>
<td style="text-align:left;">Ruby</td>
<td style="text-align:left;">D</td>
<td style="text-align:left;">謎なDFSを生やす。WA</td>
</tr>
<tr>
<td style="text-align:left;">1:38</td>
<td style="text-align:left;">C++</td>
<td style="text-align:left;">D</td>
<td style="text-align:left;">使わないボタンを1個決めて、それぞれに対し最大被覆を計算すれば良いことはわかるんですよ。O(nm)の定数倍で通そうとする無茶。TLE</td>
</tr>
<tr>
<td style="text-align:left;">1:51</td>
<td style="text-align:left;">C++</td>
<td style="text-align:left;">D</td>
<td style="text-align:left;">手持ちのRMQで殴る。<code>rmq=imos(notes);print min(max(rmq.query(1,e.first),rmq.query(e.first,e.second)-1,rmq.query(e.second,10**5+1)) for e in notes)</code>。 <strong>AC</strong> <strong>パーカー確定</strong> 。 <em>胸の痛み、収束する</em>。 かなりやばい。提供されたおにぎりを食べる。</td>
</tr>
<tr>
<td style="text-align:left;"></td>
<td style="text-align:left;"></td>
<td style="text-align:left;">F〜J</td>
<td style="text-align:left;">読んだけど方針すら立たない</td>
</tr>
<tr>
<td style="text-align:left;">2:16</td>
<td style="text-align:left;">Ruby</td>
<td style="text-align:left;">B</td>
<td style="text-align:left;">普通の解き方でAC</td>
</tr>
<tr>
<td style="text-align:left;">3:00</td>
<td style="text-align:left;"></td>
<td style="text-align:left;"></td>
<td style="text-align:left;">116位。仕方がない。パーカーで良しとします。ところで、今年はパーカーが159着出ました。去年の54着に比べるとかなりの大盤振る舞いありがとうございます。</td>
</tr>
</tbody>
</table>


<h3>夕方</h3>

<ul>
<li>スケジュールが遅延するも、短縮王の本番環境は予定通り16時に開く。解説を聞きながら適当に通す。Bが通らずやばい。とりあえずC++版を送る。ACDはRuby版とC版を送る。</li>
<li>スタンプ2: タイピングをやる。残り40体ぐらいで死ぬ。終。</li>
<li>スタンプ3: ボードゲームをやる。面子みたいなやつ。<a href="https://www.google.co.jp/search?q=%E3%83%93%E3%82%A2%EF%BC%86%E3%83%97%E3%83%AC%E3%83%83%E3%83%84%E3%82%A7%E3%83%AB">ビア＆プレッツェル</a>というらしい。適当にやったら1位だったみたい。終。</li>
<li>スタンプ4: akensho氏トークライブ。AtCoderの裏側をいろいろ聞けてよかった。</li>
<li>スタンプ5: 問題解説のスタンプを押し忘れたので戻る。</li>
<li>スタンプ6: 太鼓の達人。天下一音ゲ祭2014課題曲であるきたさいたま2000は去年やったので、今年は夏祭り(普)。太鼓の反応悪くないですか。終。</li>
<li>スタンプ7: DDR。Mickey Mouse March。ランクSSSらしい。終。ランカーのプレイは見ずに出る。

<ul>
<li>どちらも去年と同じマシンなのかな。来年はぜひ新筐体で。DDRにセツナトリップが入ってないというツイートも見かけましたので、ぜひよろしく。</li>
</ul>
</li>
<li>にぎり鮨を5分で流しこむ。 <strong>全く味わっていない。</strong>

<ul>
<li>でもまあ、太鼓とDDRをやりに行ったからこそ主食締め切りに気づきました。告知が遅かった印象。もし食事を得られていなかったらと思うと悪寒が。</li>
</ul>
</li>
<li>スタンプ8: LayCurse氏トークライブ。ネタ帳大事ですね。あと、細かいポイントのくだり、全部飛ばされたので、Advent Calendar参加を増やすかどうか怪しいです。現状判断できかねますので、スライド公開お願いします。</li>
<li>コード川柳、できたので投稿。「RE テストケースを 推測だ」今思えば「コーナーケース」のほうが良かったかもしれないが、まあ、表彰とか考えてませんので、これでよし。ちなみに会期中ハッシュタグ検索使ってません。</li>
<li>スタンプ9: 書道コーディング。(※1)をこちらに消費することに決定(プログラミングあるあるとは少し違うというのもあり)。「回線が 落ちてつらみの Festival」だってFestivalって楽しむものよね？？</li>
<li>スタンプ10/11: コード川柳・短縮王のスタンプをもらう。ステッカーとバッジをもらう。</li>
<li>スタンプ12: エキシビション観戦。</li>
<li>生春巻き・ソースやきそば・おでんを自分の席で食す。 <strong>味わえた。</strong></li>
<li>エキシビション、去年より難易度上がってませんか。解説聞いても解けるか怪しい。あと短縮王B、C言語版通った。</li>
<li>あさプロ難易度ボーダーが50位/150位から30位/100位に変更。Easy出るお＾ω＾</li>
</ul>


<h3>夜</h3>

<ul>
<li>起床フェーズがやばいことは明白だったので、今年も宿泊希望。品川プリンスホテル。</li>
<li>アミューズメントアイランドセガ、行ってみたが、22時閉店だったっぽい。戦慄を感じる。</li>
<li>0時まで短縮王で寿命を縮める。</li>
<li>本選D・E、想定解法で通す。 <strong>それぞれ233Bytes、115Bytes。</strong> びっくり。</li>
<li>本選HをC++で通す。main関数自体は18行。解説の凄さを感じた。</li>
<li>yukicoder No.302を通す。</li>
<li><strong>狭い湯船</strong> に浸かり、就寝</li>
</ul>


<h2>2日目</h2>

<h3>朝</h3>

<ul>
<li>7:10起床。AC。</li>
</ul>


<h3>あさプロ</h3>

<ul>
<li>スタンプ13</li>
</ul>


<table>
<thead>
<tr>
<th style="text-align:left;">時間</th>
<th style="text-align:left;">言語</th>
<th style="text-align:left;">問題(A-H)</th>
<th style="text-align:left;">コメント</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left;">52秒</td>
<td style="text-align:left;">Ruby</td>
<td style="text-align:left;">A</td>
<td style="text-align:left;"><code>Math.sqrt(n).to_i!=n</code> TLE。今思えば最低ですが、この時は仕方がない。</td>
</tr>
<tr>
<td style="text-align:left;">0:03</td>
<td style="text-align:left;">Ruby</td>
<td style="text-align:left;">B</td>
<td style="text-align:left;">2つに分けて、ハミング距離。 <strong>AC</strong></td>
</tr>
<tr>
<td style="text-align:left;">0:07</td>
<td style="text-align:left;">Ruby</td>
<td style="text-align:left;">A</td>
<td style="text-align:left;"><code>(1..100).map{e e**2}.bsearch{e e&gt;=n}-n</code>。頭がおかしいですが、やむをえません。 <strong>AC</strong></td>
</tr>
<tr>
<td style="text-align:left;">0:10</td>
<td style="text-align:left;">Ruby</td>
<td style="text-align:left;">C</td>
<td style="text-align:left;">ソートして、上位K個の和が既にR*Kを越えているか、または下を1個減らしたときに足すべき値は何か。WA。焦る。</td>
</tr>
<tr>
<td style="text-align:left;">0:11</td>
<td style="text-align:left;">Ruby</td>
<td style="text-align:left;">C</td>
<td style="text-align:left;">N==1の時、reduce(:+)はnilになる。(0,:+)。WA</td>
</tr>
<tr>
<td style="text-align:left;">0:13</td>
<td style="text-align:left;">Ruby</td>
<td style="text-align:left;">C</td>
<td style="text-align:left;">N==Kの時、a[0,K]の要素数はKではなくK-1。下を1個減らす必要はない。 <strong>AC</strong></td>
</tr>
<tr>
<td style="text-align:left;">0:20あたり</td>
<td style="text-align:left;">C</td>
<td style="text-align:left;">D</td>
<td style="text-align:left;">lcsを試すも、サンプルが通らない。スコア計算関数を修正。まだ通らない。切断位置はN/2である必要はないのか。じゃあB問題と違ってN%2の場合分けも要らないな。</td>
</tr>
<tr>
<td style="text-align:left;">0:32</td>
<td style="text-align:left;">C</td>
<td style="text-align:left;">D</td>
<td style="text-align:left;"><strong>AC</strong> Easy順位確定。7位。</td>
</tr>
<tr>
<td style="text-align:left;">1:08</td>
<td style="text-align:left;">Ruby</td>
<td style="text-align:left;">E</td>
<td style="text-align:left;">左右に分けて、<code>sum((i+1)*a[i]+1 for i in range(N))</code>。サンプル合わず。</td>
</tr>
<tr>
<td style="text-align:left;">1:15</td>
<td style="text-align:left;">Ruby</td>
<td style="text-align:left;">G</td>
<td style="text-align:left;">各数字の前で切ってソートすればいいんじゃね->&hellip; 1 2 9 3 &hellip;で他の部分を切ってしまい2と9を切らない。間違えました、はい。ソース破棄。</td>
</tr>
<tr>
<td style="text-align:left;">1:21</td>
<td style="text-align:left;">Ruby</td>
<td style="text-align:left;">F</td>
<td style="text-align:left;">高さでソートして貪欲。O(K)。TLE。ちなみにO(N)の答案を書いてわかりましたがこの解法は嘘解法でした。</td>
</tr>
<tr>
<td style="text-align:left;">1:30</td>
<td style="text-align:left;"></td>
<td style="text-align:left;"></td>
<td style="text-align:left;">Middleは77位。3問解きたかったね。仕方ないね。</td>
</tr>
</tbody>
</table>


<ul>
<li>スタンプ14: 入賞。タンブラー先着順に関してしか利益がないので、うーむ。</li>
</ul>


<h3>昼</h3>

<ul>
<li>あさプロE 左右にわけられるのは白石の場所のみ。サンプルは通った。しかしTLE。</li>
<li>今半すき焼き弁当。 <strong>味わえました。</strong></li>
<li>スタンプ15: chokudai氏トークライブ。そんなにアルゴリズムぽんぽん出てきませんToT</li>
<li><strong>タンブラー引き換え。</strong> よかった´ω｀</li>
<li>shinh氏トークライブ。私のコード紹介ありがとうございます。詰めが甘くてすみません。</li>
<li>なんか係の人が忙しそうだったのでスタンプはいいやと。

<ul>
<li>ただ、本当は、こういうことを思わせた時点でアウトではある。</li>
</ul>
</li>
</ul>


<h3>早解きリレー</h3>

<ul>
<li>ゼッケン、去年はアルファベットだけど、今年整数だ。問題番号なのか解く順番なのかわからないっす。</li>
<li>順位順で、普通にEを担当。実装は2問目。</li>
<li>最初、すぐに反転させれば良いと勘違いしてWA。「解けそうだ」とか言ってすみません。h&lt;=6やm&lt;=30のときは待ってから反転させることで0にできますね。AC。途中で戻らずにすみました。</li>
<li>ちなみに解いた順番の関係でEはFAらしい。</li>
<li>他は見てるだけになってしまった感が。申し訳ない…</li>
</ul>


<h3>ハッピーアワー</h3>

<ul>
<li>本来の趣旨から少し外れ、コンテンツ表彰の前の短い歓談時間的扱いになった気がしますが、仕方ないかなと。</li>
<li>短縮王は、総合2位、しかたないねToT</li>
<li>コード川柳、kyudenamida氏、「もっと真面目な川柳にいいねするべき」とのことでしたが、Twitterの性質上やむを得ないのかも。</li>
</ul>


<h3>帰路</h3>

<ul>
<li>電車の中であさプロE AC。<code>sum((i+1)*a[i]+1 for i in range(N))</code>は2段階の和で表せるので、DP可能。</li>
<li>リレーの問題、通して見ましたが、CとかDとかFとか本番中に解ける気がしない。G・Hなら解けるけど。てかこの問題セットだと思考停止状態で解けるのはB・G・Hだけですわ。Eも考察が必要ですが少しだけなので。E担当でよかった´ω｀</li>
</ul>


<h2>まとめ</h2>

<ul>
<li>1日目夕方を見れば分かる通り、とてつもなくタイトでした。食事を味わえなかったのも残念。</li>
<li>トークライブ途中退室を推奨しているかのような印象をあたえてしまう恐れ、有ったのでは。21 Completeとか。無茶でしょ</li>
<li><p>太鼓の達人・DDRは来年こそ新筐体で。あー、まあ、需要過多になる危険があるか…</p></li>
<li><p>それはそれとして、全体としては、濃い2日間で楽しめました。ありがとうございました。</p></li>
</ul>


<h2>お土産</h2>

<ul>
<li><a href="https://twitter.com/cielavenir/status/665833405490139136">https://twitter.com/cielavenir/status/665833405490139136</a></li>
<li>パーカー</li>
<li>本選Tシャツ、リレーTシャツ(カーネーション?)</li>
<li>あさプロタオル</li>
<li>トートバッグ

<ul>
<li>今回、手提げショルダー両用なので、かなりありがたいです。</li>
</ul>
</li>
<li>リストバンド、ボールペン、メモパッド、ステッカー、缶バッジ、タンブラー</li>
</ul>


<h2>追記(151116)</h2>

<ul>
<li>ショートコーディングOzy本、電子版が良いけどKindleは専用アプリが必要なのでちょっと、という人はこれを買いましょう。pdfなのでデバイスに依らず閲覧できますよ。</li>
<li><a href="http://tatsu-zine.com/books/short-cording">http://tatsu-zine.com/books/short-cording</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[yukicoder] アメーバがたくさん (and マスと駒と色塗り)]]></title>
    <link href="http://cielavenir.github.io/blog/2015/10/29/many-ameba/"/>
    <updated>2015-10-29T01:40:16+09:00</updated>
    <id>http://cielavenir.github.io/blog/2015/10/29/many-ameba</id>
    <content type="html"><![CDATA[<p><a href="http://yukicoder.me/problems/6">http://yukicoder.me/problems/6</a></p>

<ul>
<li>まず、N,D,Tを取得した後、アメーバの初期位置(e)を取得し、(e%D+D)%D(=mod)ごとに分けます。</li>
<li>「modごとに分け」て以降にDを考慮しなくても良いよう、分けられたアメーバは、その中で [(e-mod)/D-T,(e-mod)/D+T] という範囲(閉区間)に分裂するとします。</li>
<li><p>※言語によってはeが負だとバグるので、mod計算はきちんとやったほうが良いでしょう。</p>

<ul>
<li>Ruby/Pythonだとe//D-TでACですが、C++ではそうではない。</li>
</ul>
</li>
<li><p>ここからが本題で、現在yukicoderに上がっている解説ですと、範囲集合を事前にソートするとしていますが、それは必ずしも必要ではありません。逐一マージすれば良いからです。</p></li>
<li><p>マージするには、二分探索で右側を求め、左側と重なっているかチェックして、右側はいくつ先まで重なっているかもチェック。それらを消して、新しい範囲を挿入すればよいです。</p>

<ul>
<li>Python2/3 <a href="http://yukicoder.me/submissions/4190">http://yukicoder.me/submissions/4190</a></li>
<li>Ruby <a href="http://yukicoder.me/submissions/56062">http://yukicoder.me/submissions/56062</a></li>
<li>C++

<ul>
<li>vector <a href="http://yukicoder.me/submissions/56075">http://yukicoder.me/submissions/56075</a></li>
<li>deque <a href="http://yukicoder.me/submissions/56074">http://yukicoder.me/submissions/56074</a></li>
<li>set <a href="http://yukicoder.me/submissions/56079">http://yukicoder.me/submissions/56079</a></li>
<li>dequeはvectorと比較しておおよそ定数倍の高速化が望めます。(cf: CODE FESTIVAL 2014 あさぷろD 枕決め)</li>
<li>この問題はNが小さいので実行時間の差があまり出ませんが、Nが大きいとvector > deque > setの順番に時間がかかることが如実にわかります。</li>
<li>順序が重要ですので、当然ながらunordered_setは使えないことに注意して下さい。</li>
</ul>
</li>
<li>Crystal <a href="http://yukicoder.me/submissions/56637">http://yukicoder.me/submissions/56637</a> (bsearchは独自ポート)</li>
</ul>
</li>
<li><p>事前にソートしない利点として、以下のように変形した問題も容易に解けることが上げられます。</p></li>
<li>「N個の初期位置が与えられる。あなたは与えられた順番通りにN匹のアメーバを数直線上に配置する。配置されたアメーバは、分裂を開始してT秒後に停止する。停止するまで次のアメーバを配置することはない。さて、i番目のアメーバが停止した時点で合計何匹のアメーバが数直線上に存在するか？」</li>
<li><p>この考え方を使うことで解ける問題があります。そう、<a href="http://code-festival-2015-qualb.contest.atcoder.jp/tasks/codefestival_2015_qualB_d">CODE FESTIVAL 2015 予選B D問題 (マスと駒と色塗り)</a>です。</p>

<ul>
<li>なお、残念ながら、この問題は制約が大きいため、Ruby/PythonだとTLEします。PyPy/Crystalは導入されていないため、通るかはわかりません。ただ、C++でもset解法でなければならず、deque解法は75点(ちなみにvectorは40点)だったので、通る可能性は低いかもしれませんが。</li>
<li>あと、<code>if(l&lt;=left-&gt;second+1)</code>の「+1」は必須。</li>
<li><a href="http://code-festival-2015-qualb.contest.atcoder.jp/submissions/549169">http://code-festival-2015-qualb.contest.atcoder.jp/submissions/549169</a></li>
</ul>
</li>
<li><p>※ ついでに言うと、<a href="http://www.checkio.org/mission/painting-wall/share/8a0e0061de3ff95664776d904d309e57/">CheckiO Painting Wall</a>も逐一マージが想定解です。</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[シンクロニカの公開用IDを得る方法]]></title>
    <link href="http://cielavenir.github.io/blog/2015/07/19/synchronica-id/"/>
    <updated>2015-07-19T16:53:25+09:00</updated>
    <id>http://cielavenir.github.io/blog/2015/07/19/synchronica-id</id>
    <content type="html"><![CDATA[<ul>
<li><a href="https://lounge.synchronica.jp/">シンクロニカラウンジ</a>にて、自分のIDを得る方法について</li>
<li>フレンド検索で自分を検索することはできませんが、「スコアデータ」->「個人プレイ成績」を閲覧すると、URLの末尾に40文字の文字列が見えます。</li>
<li><p>これを <a href="https://lounge.synchronica.jp/Friend/info/">https://lounge.synchronica.jp/Friend/info/</a> の後ろに付けることで、自分の情報を実際に見ることができます。よって、これを公開用IDとして良いのではないかと思われます。</p></li>
<li><p>なお、maimaiもフレンドコードを見られませんが、この方法で得ることもできません。なおフレンド申請は「ご近所リストの○番目に申請」という形式で実装されています。</p></li>
</ul>

]]></content>
  </entry>
  
</feed>
