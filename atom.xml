<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[My Octopress Blog]]></title>
  <link href="http://cielavenir.github.io/atom.xml" rel="self"/>
  <link href="http://cielavenir.github.io/"/>
  <updated>2020-09-05T19:10:51+09:00</updated>
  <id>http://cielavenir.github.io/</id>
  <author>
    <name><![CDATA[Ciel Avenir]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Personal Stuff]]></title>
    <link href="http://cielavenir.github.io/blog/2038/01/01/personal-stuff/"/>
    <updated>2038-01-01T00:00:00+09:00</updated>
    <id>http://cielavenir.github.io/blog/2038/01/01/personal-stuff</id>
    <content type="html"><![CDATA[<h3>Twitter</h3>

<ul>
<li><a href="https://twitter.com/cielavenir">https://twitter.com/cielavenir</a></li>
<li><a href="http://twilog.org/cielavenir">http://twilog.org/cielavenir</a></li>
<li><a href="http://twisave.com/cielavenir">http://twisave.com/cielavenir</a></li>
<li><a href="http://tweez.net/cielavenir">http://tweez.net/cielavenir</a></li>
</ul>


<h3>Accounts</h3>

<ul>
<li><a href="https://github.com/cielavenir">https://github.com/cielavenir</a></li>
<li><a href="https://rubygems.org/profiles/cielavenir">https://rubygems.org/profiles/cielavenir</a></li>
<li><a href="https://pypi.org/user/cielavenir/">https://pypi.org/user/cielavenir/</a></li>
<li><a href="https://qiita.com/cielavenir">https://qiita.com/cielavenir</a></li>
<li><a href="https://portfolio.forkwell.com/@cielavenir">https://portfolio.forkwell.com/@cielavenir</a></li>
<li><a href="http://www.programmerprofile.net/user/cielavenir/">http://www.programmerprofile.net/user/cielavenir/</a></li>
<li><a href="https://stargzr.net/users/cielavenir">https://stargzr.net/users/cielavenir</a></li>
<li><a href="http://togetter.com/id/cielavenir">http://togetter.com/id/cielavenir</a></li>
<li><a href="https://www.instagram.com/cielartisan/">https://www.instagram.com/cielartisan/</a></li>
</ul>


<h3>巡拝</h3>

<ul>
<li>2015/01 関東三十六不動尊結願</li>
<li>2015/04 江戸三十三観音満願</li>
<li>2017/06 関東三十六不動尊結願(酉)</li>
</ul>


<h3>資格等</h3>

<ul>
<li>英検2級</li>
<li>漢検2級</li>
<li>文検4級</li>
<li>普通自動車AT</li>
<li>Master of Integrated Biosciences</li>
<li><p>日本バイオインフォマティクス学会認定バイオインフォマティクス技術者</p></li>
<li><p>以下は受験料が無料だった時に適当に取ったので誇ることもない。</p>

<ul>
<li>Yahooデジカメエキスパート1級</li>
<li>Yahooタイピングエキスパート6級</li>
<li>(日本将棋連盟)将棋1級</li>
</ul>
</li>
</ul>


<h3>CodeIQ出題</h3>

<ul>
<li><a href="https://github.com/cielavenir/codeiq_problems">https://github.com/cielavenir/codeiq_problems</a>

<ul>
<li>Restricted Words (Hello World)は挑戦者数542人を記録。</li>
<li>Restricted Base32は少し残念。。</li>
</ul>
</li>
</ul>


<h3>CheckiO</h3>

<ul>
<li>(コーディング道場) The Same Gmail

<ul>
<li>Gmailの性質理解してますかって問題。悪問だったので他所では没になりました。</li>
</ul>
</li>
<li><a href="http://www.checkio.org/mission/painting-wall/share/8a0e0061de3ff95664776d904d309e57/">http://www.checkio.org/mission/painting-wall/share/8a0e0061de3ff95664776d904d309e57/</a>

<ul>
<li>当時は純粋なアルゴリズム問題は出したくないということでこっちに出した経緯。

<ul>
<li>ちなみに、今もモーニングクエスト枠(とRestricted)以外ではアルゴリズム問題は出していないです。</li>
</ul>
</li>
</ul>
</li>
<li><a href="http://www.checkio.org/mission/rotate-hole/share/ad54904cae112ddc65fa37533c5b0c1e/">http://www.checkio.org/mission/rotate-hole/share/ad54904cae112ddc65fa37533c5b0c1e/</a>

<ul>
<li>あれの設定を簡単にしてアルゴリズム部分だけを取り出した問題。</li>
</ul>
</li>
<li><a href="http://www.checkio.org/mission/exec-quine/share/2f386036b01111d06befa6820f2c2c5e/">http://www.checkio.org/mission/exec-quine/share/2f386036b01111d06befa6820f2c2c5e/</a>

<ul>
<li>Quineを書かせる問題はたくさんあるけど、CheckiOのシステム用にアレンジしてみたら面白そうな感じになった。</li>
</ul>
</li>
<li><a href="http://www.checkio.org/mission/fibonacci-golf/share/8e02b24099a9e339b86e73e4f4360524/">http://www.checkio.org/mission/fibonacci-golf/share/8e02b24099a9e339b86e73e4f4360524/</a>

<ul>
<li><a href="https://github.com/cielavenir/checkio-task-fibonacci-golf/blob/master/local_checker.py">https://github.com/cielavenir/checkio-task-fibonacci-golf/blob/master/local_checker.py</a></li>
<li><a href="https://github.com/cielavenir/checkio-task-fibonacci-golf/blob/master/local_checker.rb">https://github.com/cielavenir/checkio-task-fibonacci-golf/blob/master/local_checker.rb</a></li>
<li>(つまり、コンパイル後のサイズ)を使った問題をCodeIQで出したら面白いだろうなと思ったのだけど、一部から非難轟々になる恐れがあったのでやめた問題。</li>
</ul>
</li>
<li><a href="http://www.checkio.org/mission/adfgvx-cipher/share/558141829caa7987d18d95cd9f68ba9b/">http://www.checkio.org/mission/adfgvx-cipher/share/558141829caa7987d18d95cd9f68ba9b/</a>

<ul>
<li>暗号祭りに合わせて作った問題。ちなみに某所の暗号解読問題をアレンジして作ったので原案は私ではない。</li>
</ul>
</li>
</ul>


<h3>競技プログラミング等</h3>

<table>
<thead>
<tr>
<th style="text-align:left;">Judge</th>
<th style="text-align:left;">Rate</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left;">TopCoder</td>
<td style="text-align:left;">1016 (緑のまま引退の危機)</td>
</tr>
<tr>
<td style="text-align:left;">Codeforces</td>
<td style="text-align:left;">1666 (青が1600-1899になったので引退しました)</td>
</tr>
<tr>
<td style="text-align:left;">HackerRank</td>
<td style="text-align:left;">2303</td>
</tr>
<tr>
<td style="text-align:left;">AtCoder</td>
<td style="text-align:left;">1800程度</td>
</tr>
<tr>
<td style="text-align:left;">yukicoder</td>
<td style="text-align:left;">最高Lv 73</td>
</tr>
<tr>
<td style="text-align:left;">AOJ</td>
<td style="text-align:left;">658問</td>
</tr>
<tr>
<td style="text-align:left;">POJ</td>
<td style="text-align:left;">275問</td>
</tr>
<tr>
<td style="text-align:left;">CodeIQ</td>
<td style="text-align:left;">バッジ数・スキルピース数トップ</td>
</tr>
<tr>
<td style="text-align:left;">paiza</td>
<td style="text-align:left;">paizaマスター、言語マスター</td>
</tr>
<tr>
<td style="text-align:left;">CheckiO</td>
<td style="text-align:left;">全問解答</td>
</tr>
<tr>
<td style="text-align:left;">8946</td>
<td style="text-align:left;">残3問</td>
</tr>
</tbody>
</table>


<table>
<thead>
<tr>
<th style="text-align:left;">(少なくとも表彰式が)オンサイト、もしくは賞金を得た大会</th>
<th style="text-align:left;">(成績)</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left;">RProcon 2013</td>
<td></td>
</tr>
<tr>
<td style="text-align:left;">CodeSCORE 2014</td>
<td style="text-align:left;">本選単独満点・優勝/50</td>
</tr>
<tr>
<td style="text-align:left;">Code Formula 2014</td>
<td style="text-align:left;">本選36位(銀賞)/100</td>
</tr>
<tr>
<td style="text-align:left;">CODE FESTIVAL 2014</td>
<td style="text-align:left;">112位/200、あさプロ Middle23位(銀賞)/100</td>
</tr>
<tr>
<td style="text-align:left;">Data League 2014</td>
<td style="text-align:left;">本選17位/18</td>
</tr>
<tr>
<td style="text-align:left;">Code Runner 2014</td>
<td style="text-align:left;">本選19位/100</td>
</tr>
<tr>
<td style="text-align:left;">CODE FESTIVAL 2015</td>
<td style="text-align:left;">116位/200、あさプロ Easy7位(入賞)/100 Middle77位/70+α</td>
</tr>
<tr>
<td style="text-align:left;">Data League 2015</td>
<td style="text-align:left;">12位/46</td>
</tr>
<tr>
<td style="text-align:left;">Code Runner 2015</td>
<td style="text-align:left;">本選33位/100</td>
</tr>
<tr>
<td style="text-align:left;">CODE FESTIVAL 2016</td>
<td style="text-align:left;">84位/220、Elimination Tournament Round3進出</td>
</tr>
<tr>
<td style="text-align:left;">BattleConferenceU30 2018</td>
<td style="text-align:left;">プログラミングバトル 本選5位/80</td>
</tr>
<tr>
<td style="text-align:left;">天下一 GameBattleContest 2020</td>
<td style="text-align:left;">20位(入賞)/100</td>
</tr>
</tbody>
</table>


<h3>音楽ゲーム</h3>

<table>
<thead>
<tr>
<th style="text-align:left;">ゲーム</th>
<th style="text-align:left;">ID</th>
<th style="text-align:left;">成績</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left;">[TAITO]</td>
<td style="text-align:left;"></td>
<td></td>
</tr>
<tr>
<td style="text-align:left;">グルーヴコースター</td>
<td style="text-align:left;">AC：asn66m4n</td>
<td style="text-align:left;">CS(Android)：約2000位。(機種変更回数の上限を知り絶望)ほぼ引退。<br><a href="https://docs.google.com/spreadsheets/d/1mNx4Ea36CaSmYRqGyX0oRftIBVuUlOVQbtaacQbpYHc/edit?usp=sharing">AC：約1000位。Perfect12、S++69</a> <a href="http://gc.kt-flcl.com/spread/">※</a></td>
</tr>
<tr>
<td style="text-align:left;">[SEGA]</td>
<td style="text-align:left;"></td>
<td></td>
</tr>
<tr>
<td style="text-align:left;">maimai</td>
<td style="text-align:left;"></td>
<td style="text-align:left;"><a href="http://maimai-log.net/cielavenir"><strong>10.70</strong></a></td>
</tr>
<tr>
<td style="text-align:left;">maimax dx</td>
<td style="text-align:left;">2032702787413</td>
<td style="text-align:left;"><a href="https://mai-score.com/user/cielavenir"><strong>7124(銀)</strong></a></td>
</tr>
<tr>
<td style="text-align:left;">chunithm</td>
<td style="text-align:left;">2037702683463</td>
<td style="text-align:left;"><a href="http://chuniviewer.net/rate?user=ciel"><strong>13.23</strong></a> <a href="https://docs.google.com/spreadsheets/d/1DHLLLaa2odajD5cNmvkpVZBEgVVE2vlrzwsO-fAjhZ0/edit?usp=sharing">_</a></td>
</tr>
<tr>
<td style="text-align:left;">ongeki</td>
<td style="text-align:left;">2033792186403</td>
<td style="text-align:left;"><a href="https://docs.google.com/spreadsheets/d/17EHX57cQ_nE9euPWj-5yRjMIaEABvCzizbU0lzmnKCc/edit?usp=sharing"><strong>13.15</strong></a> <a href="https://github.com/cielavenir/ongeki_sorter">※</a></td>
</tr>
<tr>
<td style="text-align:left;">DIVA</td>
<td style="text-align:left;">CWAAQK79AD</td>
<td></td>
</tr>
<tr>
<td style="text-align:left;">[BNEI]</td>
<td style="text-align:left;"></td>
<td></td>
</tr>
<tr>
<td style="text-align:left;">太鼓の達人</td>
<td style="text-align:left;"><a href="http://donderhiroba.jp/user_profile.php?taiko_no=532629126552">532629126552</a></td>
<td style="text-align:left;">モモイロ初級(苦笑)</td>
</tr>
<tr>
<td style="text-align:left;">シンクロニカ</td>
<td style="text-align:left;"><a href="https://lounge.synchronica.jp/Friend/info/46fade365cce05f806f0445be25bfd761acb2400">46fade365cce05f806f0445be25bfd761acb2400</a> <a href="http://cielavenir.github.io/blog/2015/07/19/synchronica-id/">※</a></td>
<td></td>
</tr>
<tr>
<td style="text-align:left;">[CAPCOM]</td>
<td style="text-align:left;"></td>
<td></td>
</tr>
<tr>
<td style="text-align:left;">crossbeats</td>
<td style="text-align:left;">51486150</td>
<td style="text-align:left;"><a href="http://cxbrank.maplia.jp/view/00652">2018/2 RP1750達成</a></td>
</tr>
<tr>
<td style="text-align:left;">crossbeats REV.</td>
<td style="text-align:left;"><a href="https://rev-srw.ac.capcom.jp/profile/76435928">76435928</a></td>
<td style="text-align:left;"><a href="https://revrank.maplia.jp/sunrise/view/00057">Class III RP1473.03</a></td>
</tr>
<tr>
<td style="text-align:left;">[KONAMI]</td>
<td style="text-align:left;"></td>
<td></td>
</tr>
<tr>
<td style="text-align:left;">jubeat saucer</td>
<td style="text-align:left;">57710108066051</td>
<td style="text-align:left;">3.50</td>
</tr>
<tr>
<td style="text-align:left;">jubeat prop</td>
<td style="text-align:left;">60930017972907</td>
<td style="text-align:left;"><a href="http://cycr.net/jubeat/prop/data.php?id=60930017972907&amp;sort=jubility">Step 15</a></td>
</tr>
<tr>
<td style="text-align:left;">jubeat qubell</td>
<td style="text-align:left;">60930007106643</td>
<td style="text-align:left;"><a href="http://cycr.net/jubeat/qubell/data.php?id=60930007106643&amp;sort=jubility&amp;jblt=1">Stage 5クリア</a></td>
</tr>
<tr>
<td style="text-align:left;">jubeat clan</td>
<td style="text-align:left;">60930002044801</td>
<td style="text-align:left;"><a href="https://cycr.net/jubeat/clan/data.php?id=60930002044801&amp;ex=jubility&amp;sort=d-jubility">7.18</a></td>
</tr>
<tr>
<td style="text-align:left;">jubeat festo</td>
<td style="text-align:left;">60930001629309</td>
<td style="text-align:left;"><a href="https://cycr.net/jubeat/festo/data.php?id=60930001629309&amp;sort=d-pseudolity&amp;ex=pseudolity">VIOLET 4165.7</a></td>
</tr>
<tr>
<td style="text-align:left;">Reflec Beat</td>
<td style="text-align:left;">RB-6564-2108</td>
<td style="text-align:left;">VOLZZA CLASS 8</td>
</tr>
<tr>
<td style="text-align:left;">DDR</td>
<td style="text-align:left;">41242214</td>
<td style="text-align:left;">Enjoy LV 18</td>
</tr>
<tr>
<td style="text-align:left;">弐寺</td>
<td style="text-align:left;">3492-2945</td>
<td style="text-align:left;">(pendual) SP7級、step up ED1</td>
</tr>
<tr>
<td style="text-align:left;">pop'n</td>
<td style="text-align:left;">4392-2014-5346</td>
<td></td>
</tr>
<tr>
<td style="text-align:left;">BeatStream</td>
<td style="text-align:left;"></td>
<td style="text-align:left;">Beast <strong>Rank9</strong></td>
</tr>
<tr>
<td style="text-align:left;">SDVX</td>
<td style="text-align:left;">SV-2080-7171</td>
<td style="text-align:left;">HH 岳翔</td>
</tr>
<tr>
<td style="text-align:left;">museca</td>
<td style="text-align:left;"></td>
<td style="text-align:left;">Curator Rank12</td>
</tr>
<tr>
<td style="text-align:left;">DanceRush</td>
<td style="text-align:left;"></td>
<td style="text-align:left;">FLOWER常駐</td>
</tr>
<tr>
<td style="text-align:left;">GD</td>
<td style="text-align:left;">0009ee6234</td>
<td style="text-align:left;">iOSは1600取って放置、ACは引き継ぎだけした(スキルポイント引き継がれないの…？)</td>
</tr>
<tr>
<td style="text-align:left;">[他]</td>
<td style="text-align:left;"></td>
<td></td>
</tr>
<tr>
<td style="text-align:left;">ちくたくコンチェルト</td>
<td style="text-align:left;">0364886461</td>
<td style="text-align:left;">exc125</td>
</tr>
<tr>
<td style="text-align:left;">はちはち</td>
<td style="text-align:left;"></td>
<td style="text-align:left;">(削除済)</td>
</tr>
</tbody>
</table>


<h3>作ったもの</h3>

<table>
<thead>
<tr>
<th style="text-align:left;"></th>
<th style="text-align:left;">URL</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left;">cTouch</td>
<td style="text-align:left;"><a href="https://github.com/cielavenir/ctouch/">https://github.com/cielavenir/ctouch/</a><br><a href="https://sourceforge.net/projects/ctouch/">https://sourceforge.net/projects/ctouch/</a></td>
</tr>
<tr>
<td style="text-align:left;">picrawler</td>
<td style="text-align:left;"><a href="https://github.com/cielavenir/picrawler/">https://github.com/cielavenir/picrawler/</a></td>
</tr>
<tr>
<td style="text-align:left;">R on iOS</td>
<td style="text-align:left;">(記入時点でrwikiが落ちている…何たること…)<br><a href="http://rwiki.sciviews.org/doku.php?id=getting-started:installation:iphone">http://rwiki.sciviews.org/doku.php?id=getting-started:installation:iphone</a></td>
</tr>
<tr>
<td style="text-align:left;">R on Android</td>
<td style="text-align:left;"><a href="http://rwiki.sciviews.org/doku.php?id=getting-started:installation:android">http://rwiki.sciviews.org/doku.php?id=getting-started:installation:android</a></td>
</tr>
<tr>
<td style="text-align:left;">Google TwoFactor Authenticator on PSP</td>
<td style="text-align:left;"><a href="http://qiita.com/cielavenir/items/a13215069306eeaa24bf">http://qiita.com/cielavenir/items/a13215069306eeaa24bf</a></td>
</tr>
<tr>
<td style="text-align:left;">qinstall</td>
<td style="text-align:left;"><a href="https://github.com/cielavenir/qinstall">https://github.com/cielavenir/qinstall</a></td>
</tr>
<tr>
<td style="text-align:left;">Ruby multisax</td>
<td style="text-align:left;"><a href="https://github.com/cielavenir/ruby-chan">https://github.com/cielavenir/ruby-chan</a><br><a href="https://github.com/cielavenir/mruby-chan">https://github.com/cielavenir/mruby-chan</a></td>
</tr>
<tr>
<td style="text-align:left;">Ruby chan (bidirectional iterator)</td>
<td style="text-align:left;"><a href="https://github.com/cielavenir/multisax">https://github.com/cielavenir/multisax</a></td>
</tr>
<tr>
<td style="text-align:left;">gyao_url_another.rb</td>
<td style="text-align:left;"><a href="https://gist.github.com/cielavenir/a858255c4009ecbb9b67">https://gist.github.com/cielavenir/a858255c4009ecbb9b67</a></td>
</tr>
<tr>
<td style="text-align:left;">install_npapi.sh/install_ppapi.sh (OSX Flash)</td>
<td style="text-align:left;"><a href="https://github.com/cielavenir/flashupdate">https://github.com/cielavenir/flashupdate</a></td>
</tr>
</tbody>
</table>


<h3>発見したバグ</h3>

<ul>
<li>mdbtools

<ul>
<li>ODBCドライバにおいて、(MicrosoftAccessと違い)DBQ引数が取れない</li>
<li><a href="https://github.com/mdbtools/mdbtools/pull/9">ODBCドライバでマルチバイト文字列が扱えない</a></li>
</ul>
</li>
<li>ExGame (モバゲーのFlashランタイム)

<ul>
<li>Android Chrome/iOS6で文字が表示できない

<ul>
<li>報告自体はcTouchのユーザーから(まあ当時はChromeが入れられるAndroid 4の端末は少なかったですからね…)</li>
</ul>
</li>
</ul>
</li>
<li>RVM

<ul>
<li><a href="https://github.com/rvm/rvm/pull/1257">古いMac(本来i386だがboot.efiハックでx86_64化が可能なモデル)をMountain Lionにアップデートした時に、カーネルがx86_64に切り替わるが、libyaml.dylibがi386のまま正しく読み込まれず、x86_64用にリビルドもされない</a></li>
</ul>
</li>
<li>Google Chrome

<ul>
<li>filesystem APIのクオータ要求時に警告バーが出るが、この要求を機能拡張のポップアップ画面内で行うと警告バーが出る代わりに(親ごと)クラッシュする</li>
<li>Issue 149804: Chromium crashes when window.webkitStorageInfo.requestQuota(PERSISTENT,&hellip;) is fired from POPUP window</li>
</ul>
</li>
<li>嫁コレ

<ul>
<li>APIトークンにIMEIをハッシュではなく暗号化したものを用いているため、嫁コレサーバー側で生IMEIを取り出すことができる。一部通信はHTTPで行われているため盗聴も可能である</li>
<li>3.4.xで修正された</li>
</ul>
</li>
<li>東京100ガイド

<ul>
<li>WiMAX環境で使用できない</li>
<li>修正済み</li>
</ul>
</li>
<li>Enigmail

<ul>
<li><a href="https://gitlab.com/enigmail/enigmail/-/merge_requests/47">Decrypt to folderの挙動が一部誤っていた</a></li>
</ul>
</li>
</ul>


<h3>イラスト</h3>

<ul>
<li>deviantART (私のtwitterアイコン原画等。限定公開)</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[天下一 GameBattleContest 2020 参加記]]></title>
    <link href="http://cielavenir.github.io/blog/2020/08/30/tenka1-gbc/"/>
    <updated>2020-08-30T16:00:00+09:00</updated>
    <id>http://cielavenir.github.io/blog/2020/08/30/tenka1-gbc</id>
    <content type="html"><![CDATA[<h2>2019OBT</h2>

<p><a href="https://tenka1.klab.jp/2019-obt/">https://tenka1.klab.jp/2019-obt/</a></p>

<p><a href="http://www.nikkan.co.jp/brand/irex/2019/">IREX2019</a>に行く前に豊洲で参加した。CodeRunner以来だったのでとても楽しかった。</p>

<h2>2020</h2>

<p><a href="https://tenka1.klab.jp/2020/">https://tenka1.klab.jp/2020/</a></p>

<table>
<thead>
<tr>
<th style="text-align:left;">時間</th>
<th style="text-align:left;">コメント</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left;">-2:00</td>
<td style="text-align:left;">特に理由もないが、過去プログラムをpractice sessionに流したりしてた。非公開リポジトリに新しいトークンを書き込むためってのはある。</td>
</tr>
<tr>
<td style="text-align:left;">-1:00</td>
<td style="text-align:left;">非公開リポジトリ(のcoderunnerディレクトリ)の整理とかやってた。</td>
</tr>
<tr>
<td style="text-align:left;">0:00</td>
<td style="text-align:left;">今回もPythonのサンプルコードをいじりましょうかね。</td>
</tr>
<tr>
<td style="text-align:left;">0:05</td>
<td style="text-align:left;">とりあえず全マス取得するコードを作って裏で回し始める</td>
</tr>
<tr>
<td style="text-align:left;">0:30</td>
<td style="text-align:left;">1x1〜5x5の領域で一番点数が高いものを取るが、どうにも点数が伸びない</td>
</tr>
<tr>
<td style="text-align:left;">1:40</td>
<td style="text-align:left;">ミスが判明。同じ領域を何度も取得してしまっていた。取得する領域が重ならないようにサンプルコードのループを活用するようにした(領域を取得するたびに現在状況を取得するようにした)。</td>
</tr>
<tr>
<td style="text-align:left;">2:10</td>
<td style="text-align:left;">誤読。(私の方針では)一度取った領域の上下左右のマスは取ってはいけないことが判明した。my_claimマスだけでなく上下左右にmy_claimがあったら価値を0にするようにした。<br>この時点で方針の8割は固まった(大体55秒前後で取得したいマスは取得し終わるようになった)。</td>
</tr>
<tr>
<td style="text-align:left;">2:20</td>
<td style="text-align:left;">順位を上げ始めた。この時点で40位ぐらい。</td>
</tr>
<tr>
<td style="text-align:left;">2:30</td>
<td style="text-align:left;">点数が高い領域を計算する際、そのマスを取得した人数を考慮するようにした(num_factor)</td>
</tr>
<tr>
<td style="text-align:left;">2:45</td>
<td style="text-align:left;">点数を比較する際、同様な点数ならサイズが小さいものを拾うようにした(でもうまくいかなかったのでやめた)</td>
</tr>
<tr>
<td style="text-align:left;">3:00</td>
<td style="text-align:left;">23位ぐらいをうろつく。ぎりぎり賞金圏外かな。。</td>
</tr>
<tr>
<td style="text-align:left;">3:05</td>
<td style="text-align:left;">num_factorは他の参加者が強くなると下げないといけないので、微調整。</td>
</tr>
<tr>
<td style="text-align:left;">3:10</td>
<td style="text-align:left;">それにしても順位の入れ替わりが激しいなぁ。さっき圏内だった人が落ちとるよ。。</td>
</tr>
<tr>
<td style="text-align:left;">3:15</td>
<td style="text-align:left;">num_factorの評価が誤っていた(value/(num_claim<em>num_factor+1)とするべきところを(value/((num_claim+1)</em>num_factor)としていた)。最後の60分は走らせるだけにすべきなのにそこで修正かい&ndash;;</td>
</tr>
<tr>
<td style="text-align:left;">3:45</td>
<td style="text-align:left;">ポケモンGOのレイドをやりに外出(今考えるとCodeRunner系では功を奏しうる選択だったと思う)</td>
</tr>
<tr>
<td style="text-align:left;">3:55</td>
<td style="text-align:left;">帰宅。なんと20位に浮上。このまま逃げ切ってくれ。。</td>
</tr>
<tr>
<td style="text-align:left;">4:00</td>
<td style="text-align:left;">20位キープ。賞金！！</td>
</tr>
</tbody>
</table>


<h2>感想</h2>

<ul>
<li>実は1ゲームごとの順位で20位に入れたほうが少ないんですが、総合的にはコンスタントに点数を取るほうが大事だったのかもしれない。

<ul>
<li>いきなりコードを動かすなというのがこれ系のコンテストの定石だが、今回21位との点差が14万点だったこともあり、やはり塵も積もれば山となることを痛感した。ただ、CodeRunnerと違って、1ゲームごとにステートが独立だからってのはあるかもしれない。</li>
</ul>
</li>
<li></li>
<li>BCU30 2018が最後の賞金をとりうるコンテストだと思っていたが、<a href="http://cielavenir.github.io/blog/2018/04/21/ball/">A問題で時間を食ってしまい</a>5位となり、賞金を逃してしまった(3位まで賞金)。もう賞金はもらえないだろうと思っていたが、今回思いがけず賞金を得られることとなり、本当にありがたいです。</li>
<li>プログラミングコンテストで賞金を得られたのは初だったので、今までプログラミングを続けてきてよかったなという気持ちです。

<ul>
<li>正確にはキャリフルのCodeSCOREで賞金もらってるんですが、あれは実務知識…とは名ばかりのぐぐらびりてぃコンテストでしたからね。(CodeIQの方が懇親会にていわく、あれはβ版で本バージョンは試験時間が大幅に短くなったらしい)</li>
</ul>
</li>
<li>OBTは「始点から終点までの辺の最大流」であり、始点から終点までつながなければ点数は一切入らなかったが、今回は「領域の連結成分」であるので、領域を取得さえすれば点数が入るようになったのはよかった。</li>
<li>(領域)取得完了できる時間が十分短い場合は待ってからokを返す仕様はありがたかった。CodeRunnerはリトライの時間調整に苦慮するところがあったので。</li>
<li>長方形を取得できるようになればもう少し点を伸ばせたかもしれないが、取得自体が正方形しかできない以上、長方形を取得するには正方形に分割して複数回取得を繰り返さねばならず、分割が面倒だったので実装しなかった。</li>
</ul>


<h2>答案</h2>

<p>coderunner系は <a href="https://github.com/cielavenir/coderunner">https://github.com/cielavenir/coderunner</a> に格納されます(今後もその予定)</p>

<h2>最後に</h2>

<p>本当にありがとうございました！</p>

<p><img src="https://i.imgur.com/c0uUVSpl.png" alt="tenka1_portal" />
<img src="https://i.imgur.com/dDgnChal.png" alt="tenka1_result" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[第三回 アルゴリズム実技検定 参加記(リアルタイム)]]></title>
    <link href="http://cielavenir.github.io/blog/2020/06/06/past3/"/>
    <updated>2020-06-06T20:00:00+09:00</updated>
    <id>http://cielavenir.github.io/blog/2020/06/06/past3</id>
    <content type="html"><![CDATA[<p>本記事は5/23に下書きを作成、6/6 18時に提出履歴を確認して微修正、公開されました。</p>

<h2>はじめに</h2>

<p><a href="https://past.atcoder.jp/">アルゴリズム実技検定(PAST)</a>。atcoderが最近始めた検定試験である。「新型コロナウィルス感染症対策で外出自粛が続く状況を鑑みて、第三回アルゴリズム実技検定の受験資格を無償で提供いたします。」とのことなので、とりあえず受けてみようと思った。せっかくならチェックマークがつくリアルタイム受験で。</p>

<h2>5/6</h2>

<ul>
<li>シリアルコードを取得</li>
<li>受験登録ページでシリアルコードを入力</li>
<li>「検定期間開始前～リアルタイム受験終了後では、自動的にリアルタイム受験の登録となり、それ以降は、いつでも受験開始可能な通常受験となります。」とのことなので一旦入力を削除</li>
</ul>


<h2>検定</h2>

<table>
<thead>
<tr>
<th style="text-align:left;">時間</th>
<th style="text-align:left;">言語</th>
<th style="text-align:left;">問題(A-O)</th>
<th style="text-align:left;">コメント</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left;">-0:10</td>
<td style="text-align:left;"></td>
<td style="text-align:left;"></td>
<td style="text-align:left;">受験登録ページでシリアルコードを再入力</td>
</tr>
<tr>
<td style="text-align:left;">0:00</td>
<td style="text-align:left;"></td>
<td style="text-align:left;"></td>
<td style="text-align:left;">この時点ではスマホ。 <strong>問題が見られないトラブル発生。</strong> twitter検索してもだれも報告していない。やばい。一過性のものか？床屋の用事があったので済ませる。</td>
</tr>
<tr>
<td style="text-align:left;">0:30</td>
<td style="text-align:left;"></td>
<td style="text-align:left;"></td>
<td style="text-align:left;">床屋は終わったけどまだ見られへん。やばい。</td>
</tr>
<tr>
<td style="text-align:left;">0:50</td>
<td style="text-align:left;"></td>
<td style="text-align:left;"></td>
<td style="text-align:left;">PASTはログインしてたけどatcoderはログインしてなかっただけじゃんToT</td>
</tr>
<tr>
<td style="text-align:left;">0:58</td>
<td style="text-align:left;">Ruby</td>
<td style="text-align:left;">A</td>
<td style="text-align:left;">やるだけですね(String#upcaseを使うと楽) <strong>AC</strong></td>
</tr>
<tr>
<td style="text-align:left;">1:00</td>
<td style="text-align:left;"></td>
<td style="text-align:left;">B</td>
<td style="text-align:left;">Bのくせに制約おかしくないですか？</td>
</tr>
<tr>
<td style="text-align:left;">1:06</td>
<td style="text-align:left;">Ruby</td>
<td style="text-align:left;">C</td>
<td style="text-align:left;">場合分けだけ気をつければやるだけですね <strong>AC</strong></td>
</tr>
<tr>
<td style="text-align:left;">1:45</td>
<td style="text-align:left;">Ruby</td>
<td style="text-align:left;">B</td>
<td style="text-align:left;">問題数は少ないんじゃん。。WA</td>
</tr>
<tr>
<td style="text-align:left;">1:51</td>
<td style="text-align:left;">Ruby</td>
<td style="text-align:left;">F</td>
<td style="text-align:left;">配列のintersectionが楽に取れる点でRubyは強い <strong>AC</strong></td>
</tr>
<tr>
<td style="text-align:left;">2:00</td>
<td style="text-align:left;"></td>
<td style="text-align:left;"></td>
<td style="text-align:left;">帰宅。ここまでスマホここからPC</td>
</tr>
<tr>
<td style="text-align:left;">2:02</td>
<td style="text-align:left;">Ruby</td>
<td style="text-align:left;">B</td>
<td style="text-align:left;">入力値の扱いが間違ってた <strong>AC</strong></td>
</tr>
<tr>
<td style="text-align:left;">2:07</td>
<td style="text-align:left;">Ruby</td>
<td style="text-align:left;">D</td>
<td style="text-align:left;">RubyのDATAハンドルが活用できる <strong>AC</strong></td>
</tr>
<tr>
<td style="text-align:left;">2:17</td>
<td style="text-align:left;">Ruby</td>
<td style="text-align:left;">E</td>
<td style="text-align:left;">Nが多いが制約的に2乗にはならん、大丈夫だ <strong>AC</strong> ここまで前座(7点以上の問題は全完)。</td>
</tr>
<tr>
<td style="text-align:left;">2:29</td>
<td style="text-align:left;">Ruby</td>
<td style="text-align:left;">G</td>
<td style="text-align:left;">普通の幅優先だけど無限グリッドか…探索上限決め打ちでいいかな WA</td>
</tr>
<tr>
<td style="text-align:left;">2:32</td>
<td style="text-align:left;">Ruby</td>
<td style="text-align:left;">G</td>
<td style="text-align:left;">障害物座標に制約があるんなら探索上限決め打ちなんていらない <strong>AC</strong></td>
</tr>
<tr>
<td style="text-align:left;">2:40</td>
<td style="text-align:left;">Python</td>
<td style="text-align:left;">J</td>
<td style="text-align:left;">ヒープか? -> 誤読だった</td>
</tr>
<tr>
<td style="text-align:left;">3:01</td>
<td style="text-align:left;">Ruby</td>
<td style="text-align:left;">H</td>
<td style="text-align:left;">普通のDPか WA</td>
</tr>
<tr>
<td style="text-align:left;">3:03</td>
<td style="text-align:left;">Ruby</td>
<td style="text-align:left;">H</td>
<td style="text-align:left;">定番のoff-by-oneだった(ジャンプ中にゴールする場合の)。これ系の問題はデバッグ難ですよね <strong>AC</strong></td>
</tr>
<tr>
<td style="text-align:left;">3:05</td>
<td style="text-align:left;"></td>
<td style="text-align:left;">M</td>
<td style="text-align:left;">あと1問で中級かぁ。あ、M問題、<a href="https://qiita.com/cielavenir/items/33aaf548b14bcae386a2">CodeIQで既出</a>やん。でもアダプタ実装がそこそこ面倒なのよね…</td>
</tr>
<tr>
<td style="text-align:left;">3:15</td>
<td style="text-align:left;">Ruby</td>
<td style="text-align:left;">I</td>
<td style="text-align:left;">行列自体じゃなくて、行と列の配列だけを持とう サンプル合わず</td>
</tr>
<tr>
<td style="text-align:left;">3:16</td>
<td style="text-align:left;">Ruby</td>
<td style="text-align:left;">I</td>
<td style="text-align:left;">転置する場合は(以降の)出力クエリの行と列だけじゃなくて、その時点での行と列の配列自体も交換しないといけないのね <strong>AC</strong> これで中級。激冷えを回避！</td>
</tr>
<tr>
<td style="text-align:left;">3:24</td>
<td style="text-align:left;">C++</td>
<td style="text-align:left;">N</td>
<td style="text-align:left;">愚直解を出しとけ TLE</td>
</tr>
<tr>
<td style="text-align:left;">3:41</td>
<td style="text-align:left;">C++</td>
<td style="text-align:left;">N</td>
<td style="text-align:left;"><a href="https://qiita.com/EmuraDaisuke/items/fbcfbdae8e0477693331">颯式</a>を出してみろ TLE</td>
</tr>
<tr>
<td style="text-align:left;">4:16</td>
<td style="text-align:left;">C++</td>
<td style="text-align:left;">M</td>
<td style="text-align:left;">がんばって実装した。<strong>AC</strong></td>
</tr>
<tr>
<td style="text-align:left;">4:30</td>
<td style="text-align:left;"></td>
<td style="text-align:left;"></td>
<td style="text-align:left;">もうやれる問題ないわ(1問だけ解いても級は変わりませんしねぇ)。。投了。</td>
</tr>
<tr>
<td style="text-align:left;">5:00</td>
<td style="text-align:left;"></td>
<td style="text-align:left;"></td>
<td style="text-align:left;">70点・中級でした。お疲れ様でした。</td>
</tr>
</tbody>
</table>


<h2>まとめ</h2>

<ul>
<li>開始ぎりぎりまでシリアルコードは入力するな</li>
<li>現状atcoder本体へのログインをお忘れなく(要望は出しておきましたが…)w</li>
<li>解いた順番ACFBDEGHIMとか面白いですねw</li>
<li>序盤はスマホでもいけるがやっぱりPCは必要w</li>
<li><p>競プロが鈍っていても初級までは確実に取れそう</p></li>
<li><p>Fは個人的に(通常でいう)200点的な印象だった。(BとFを交換しても良いぐらい)</p></li>
<li>Iは個人的に行列の数的構造に感動した。</li>
<li>颯式、std::sortよりも少しだけ速いっぽい。</li>
<li><p>既出が出たのはすこしびっくりだった。でもまあ、問題がかぶることなんてありえる話ですよね</p></li>
<li><p>楽しかったです(が、通常8800円は高めだなぁ)</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ingress First Saturday 初参加記(杉戸)]]></title>
    <link href="http://cielavenir.github.io/blog/2020/05/03/first-saturday/"/>
    <updated>2020-05-03T23:00:00+09:00</updated>
    <id>http://cielavenir.github.io/blog/2020/05/03/first-saturday</id>
    <content type="html"><![CDATA[<h2>準備</h2>

<ul>
<li>5/1(金)23時にふと思い立って参加登録。今回現地に行く必要はありませんでしたが、場所は埼玉杉戸を選択しました。家(山手線内)から一番近いからってのが理由ですが。なんとなくです。</li>
<li>AGの必需品であるTelegramですが、まだ登録していなかったことが判明。TelegramのSMS認証メールが来なくて焦った。一旦iPadから母の回線で登録。私の方は <strong>携帯を再起動してから再認証</strong> で事なきを得ましたが、準備だけは早めにやっておきましょうってことですね…。</li>
<li>そういえば <strong>Telegramの表示名ってどうなってるんでしょうね。</strong> 通常はハンネだけど連絡先に名前があればその名前になるんだろうか…。 <strong>Telegramグループに本名が表示されて一瞬ぎょっとしました(他の人からはハンネが見えているらしい)</strong> …。</li>
</ul>


<h2>当日</h2>

<ul>
<li>開始時statsをgoogle formに入力して、リチャージしました。ポータルキーは400個ほどありましたが、パワーキューブが尽きかけてしまいました。。</li>
<li>statsが指定の値に一番近かった人にプレゼントする企画がありました。

<ul>
<li>zoomを使用しましたが、メインの携帯と別にiPadでzoom使うとのいいですね。PCでzoom使うのはあれですしねぇ…。</li>
</ul>
</li>
<li>終了時statsを入力。実は <strong>「回答を編集」用のフォームのURLを消さないようにすることが一番大変でした</strong> &ndash;;;;

<ul>
<li>人によっては反映に時間がかかったみたいですが、私はどういうわけか1分以内で反映されてました。</li>
</ul>
</li>
<li>デコードチャレンジがかなり遅れて到着。16進数asciiコード列を読むだけという内容でした。</li>
</ul>


<h2>終わりに</h2>

<ul>
<li>どういったイベントなのかある程度把握できたので、場所が合えば行けそうです〜</li>
</ul>


<h2>追伸</h2>

<ul>
<li>virtualなのではしごしようと思えばできたんですが、「Agents can only receive one count towards the badge each month」という制限によりやめときました。</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[how to cite mcmanuslab long noncoding rna article]]></title>
    <link href="http://cielavenir.github.io/blog/2019/11/17/lncrna-cite/"/>
    <updated>2019-11-17T20:00:00+09:00</updated>
    <id>http://cielavenir.github.io/blog/2019/11/17/lncrna-cite</id>
    <content type="html"><![CDATA[<h2>Background</h2>

<p><a href="https://mcmanuslab.ucsf.edu/node/251">https://mcmanuslab.ucsf.edu/node/251</a> is a very useful information source about long non-coding RNA. Also, it is cited sometimes. However the citation format does not seem to be established.</p>

<h2>Result</h2>

<h3>Title</h3>

<p><code>The Dark Matter of the Genome</code> or <code>Long Noncoding RNA The Dark Matter of the Genome</code>.</p>

<h3>Author</h3>

<p>The author should be Megan McSweeney as it is written in the slide.</p>

<h3>Year</h3>

<p>The slide says BMS265. According to <a href="https://mcmanuslab.ucsf.edu/rnas,">https://mcmanuslab.ucsf.edu/rnas,</a> it seems to be a course number in University of California San Francisco. BMS means Biomedical Sciences Graduate Program (<a href="https://bms.ucsf.edu/course-list">https://bms.ucsf.edu/course-list</a>). And there seemed to be BMS265 RNA wiki course around 2009 May. So the year should be 2009.</p>

<h2>Conclusion</h2>

<p>Megan McSweeney, Long Noncoding RNA The Dark Matter of the Genome, 2009</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[yukicoder] サメトロ]]></title>
    <link href="http://cielavenir.github.io/blog/2019/10/12/sametoro/"/>
    <updated>2019-10-12T02:00:00+09:00</updated>
    <id>http://cielavenir.github.io/blog/2019/10/12/sametoro</id>
    <content type="html"><![CDATA[<p><a href="https://yukicoder.me/problems/2699">https://yukicoder.me/problems/2699</a></p>

<p>まず、pekempeyさんの解説にある以下の条件</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>0&lt;=a1
</span><span class='line'>0&lt;=b1
</span><span class='line'>a1+...+an==b1+...+bn
</span><span class='line'>ai+bi&lt;=a1+...+an for all i</span></code></pre></td></tr></table></div></figure>


<p>をコードに落とし込むと以下のようになる。なお、<code>a1==x, b1==y==x+sa-sb</code>とする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="n">n</span><span class="o">=</span><span class="nb">gets</span><span class="o">.</span><span class="n">not_nil!</span><span class="o">.</span><span class="n">to_i</span><span class="o">-</span><span class="mi">1</span>
</span><span class='line'><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="o">=</span><span class="n">n</span><span class="o">.</span><span class="n">times</span><span class="o">.</span><span class="n">map</span><span class="p">{</span><span class="nb">gets</span><span class="o">.</span><span class="n">not_nil!</span><span class="o">.</span><span class="n">split</span><span class="o">.</span><span class="n">map</span> <span class="o">&amp;.</span><span class="n">to_i</span><span class="p">}</span><span class="o">.</span><span class="n">to_a</span><span class="o">.</span><span class="n">transpose</span>
</span><span class='line'><span class="n">sa</span><span class="p">,</span><span class="n">sb</span><span class="o">=[</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="o">].</span><span class="n">map</span> <span class="o">&amp;.</span><span class="n">sum</span>
</span><span class='line'><span class="nb">p</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="mi">10</span><span class="o">**</span><span class="mi">6</span><span class="p">)</span><span class="o">.</span><span class="n">count</span><span class="p">{</span><span class="o">|</span><span class="n">x</span><span class="o">|</span>
</span><span class='line'>  <span class="n">x</span><span class="o">+</span><span class="n">sa</span><span class="o">-</span><span class="n">sb</span><span class="o">&gt;=</span><span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">x</span><span class="o">&lt;=</span><span class="n">sb</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="o">.</span><span class="n">n</span><span class="p">)</span><span class="o">.</span><span class="n">all?</span><span class="p">{</span><span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class='line'>      <span class="n">a</span><span class="o">[</span><span class="n">i</span><span class="o">]+</span><span class="n">b</span><span class="o">[</span><span class="n">i</span><span class="o">]&lt;=</span><span class="n">x</span><span class="o">+</span><span class="n">sa</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>このコードを効率化したいわけだが、今回、範囲が</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="kp">false</span>
</span><span class='line'><span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'><span class="kp">false</span>
</span><span class='line'><span class="kp">true</span>
</span><span class='line'><span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'><span class="kp">true</span>
</span><span class='line'><span class="kp">false</span>
</span><span class='line'><span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span></code></pre></td></tr></table></div></figure>


<p>のようであるため、二分探索は使えない。別の方法で効率化を図る。</p>

<p>まず、少し移項すると以下のようになる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="n">n</span><span class="o">=</span><span class="nb">gets</span><span class="o">.</span><span class="n">not_nil!</span><span class="o">.</span><span class="n">to_i</span><span class="o">-</span><span class="mi">1</span>
</span><span class='line'><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="o">=</span><span class="n">n</span><span class="o">.</span><span class="n">times</span><span class="o">.</span><span class="n">map</span><span class="p">{</span><span class="nb">gets</span><span class="o">.</span><span class="n">not_nil!</span><span class="o">.</span><span class="n">split</span><span class="o">.</span><span class="n">map</span> <span class="o">&amp;.</span><span class="n">to_i</span><span class="p">}</span><span class="o">.</span><span class="n">to_a</span><span class="o">.</span><span class="n">transpose</span>
</span><span class='line'><span class="n">sa</span><span class="p">,</span><span class="n">sb</span><span class="o">=[</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="o">].</span><span class="n">map</span> <span class="o">&amp;.</span><span class="n">sum</span>
</span><span class='line'><span class="nb">p</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="mi">10</span><span class="o">**</span><span class="mi">6</span><span class="p">)</span><span class="o">.</span><span class="n">count</span><span class="p">{</span><span class="o">|</span><span class="n">x</span><span class="o">|</span>
</span><span class='line'>  <span class="n">sb</span><span class="o">-</span><span class="n">sa</span><span class="o">&lt;=</span><span class="n">x</span> <span class="o">&amp;&amp;</span> <span class="n">x</span><span class="o">&lt;=</span><span class="n">sb</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="o">.</span><span class="n">n</span><span class="p">)</span><span class="o">.</span><span class="n">all?</span><span class="p">{</span><span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class='line'>      <span class="n">a</span><span class="o">[</span><span class="n">i</span><span class="o">]+</span><span class="n">b</span><span class="o">[</span><span class="n">i</span><span class="o">]-</span><span class="n">sa</span><span class="o">&lt;=</span><span class="n">x</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>sb-sa&lt;=x &amp;&amp; x&lt;=sb</code>はxの範囲を示すから、これを使う。また、<code>a[i]+b[i]-sa</code>は不変量なので、条件を整理する。すると、以下のようになる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="n">n</span><span class="o">=</span><span class="nb">gets</span><span class="o">.</span><span class="n">not_nil!</span><span class="o">.</span><span class="n">to_i</span><span class="o">-</span><span class="mi">1</span>
</span><span class='line'><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="o">=</span><span class="n">n</span><span class="o">.</span><span class="n">times</span><span class="o">.</span><span class="n">map</span><span class="p">{</span><span class="nb">gets</span><span class="o">.</span><span class="n">not_nil!</span><span class="o">.</span><span class="n">split</span><span class="o">.</span><span class="n">map</span> <span class="o">&amp;.</span><span class="n">to_i</span><span class="p">}</span><span class="o">.</span><span class="n">to_a</span><span class="o">.</span><span class="n">transpose</span>
</span><span class='line'><span class="n">sa</span><span class="p">,</span><span class="n">sb</span><span class="o">=[</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="o">].</span><span class="n">map</span> <span class="o">&amp;.</span><span class="n">sum</span>
</span><span class='line'><span class="nb">p</span> <span class="p">(</span><span class="o">[</span><span class="mi">0</span><span class="p">,</span><span class="n">sb</span><span class="o">-</span><span class="n">sa</span><span class="o">].</span><span class="n">max</span><span class="o">.</span><span class="n">.sb</span><span class="p">)</span><span class="o">.</span><span class="n">count</span><span class="p">{</span><span class="o">|</span><span class="n">x</span><span class="o">|</span>
</span><span class='line'>  <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="o">.</span><span class="n">n</span><span class="p">)</span><span class="o">.</span><span class="n">map</span><span class="p">{</span><span class="o">|</span><span class="n">i</span><span class="o">|</span><span class="n">a</span><span class="o">[</span><span class="n">i</span><span class="o">]+</span><span class="n">b</span><span class="o">[</span><span class="n">i</span><span class="o">]-</span><span class="n">sa</span><span class="p">}</span><span class="o">.</span><span class="n">max</span><span class="o">&lt;=</span><span class="n">x</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>これもxの範囲となるため、最終的に以下のようになる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="n">n</span><span class="o">=</span><span class="nb">gets</span><span class="o">.</span><span class="n">not_nil!</span><span class="o">.</span><span class="n">to_i</span><span class="o">-</span><span class="mi">1</span>
</span><span class='line'><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="o">=</span><span class="n">n</span><span class="o">.</span><span class="n">times</span><span class="o">.</span><span class="n">map</span><span class="p">{</span><span class="nb">gets</span><span class="o">.</span><span class="n">not_nil!</span><span class="o">.</span><span class="n">split</span><span class="o">.</span><span class="n">map</span> <span class="o">&amp;.</span><span class="n">to_i</span><span class="p">}</span><span class="o">.</span><span class="n">to_a</span><span class="o">.</span><span class="n">transpose</span>
</span><span class='line'><span class="n">sa</span><span class="p">,</span><span class="n">sb</span><span class="o">=[</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="o">].</span><span class="n">map</span> <span class="o">&amp;.</span><span class="n">sum</span>
</span><span class='line'><span class="nb">p</span> <span class="n">sb</span><span class="o">-[</span><span class="mi">0</span><span class="p">,</span><span class="n">sb</span><span class="o">-</span><span class="n">sa</span><span class="p">,(</span><span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="o">.</span><span class="n">n</span><span class="p">)</span><span class="o">.</span><span class="n">map</span><span class="p">{</span><span class="o">|</span><span class="n">i</span><span class="o">|</span><span class="n">a</span><span class="o">[</span><span class="n">i</span><span class="o">]+</span><span class="n">b</span><span class="o">[</span><span class="n">i</span><span class="o">]</span><span class="p">}</span><span class="o">.</span><span class="n">max</span><span class="o">-</span><span class="n">sa</span><span class="o">].</span><span class="n">max</span><span class="o">+</span><span class="mi">1</span>
</span></code></pre></td></tr></table></div></figure>


<p>ここまで最適化されていれば、Rubyでも十分ACできる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="c1">#!/usr/bin/ruby</span>
</span><span class='line'><span class="n">n</span><span class="o">=</span><span class="nb">gets</span><span class="o">.</span><span class="n">to_i</span><span class="o">-</span><span class="mi">1</span>
</span><span class='line'><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="o">=</span><span class="vg">$&lt;</span><span class="o">.</span><span class="n">map</span><span class="p">{</span><span class="o">|</span><span class="n">e</span><span class="o">|</span><span class="n">e</span><span class="o">.</span><span class="n">split</span><span class="o">.</span><span class="n">map</span> <span class="o">&amp;</span><span class="ss">:to_i</span><span class="p">}</span><span class="o">.</span><span class="n">transpose</span>
</span><span class='line'><span class="n">c</span><span class="p">,</span><span class="n">d</span><span class="o">=[</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="o">].</span><span class="n">map</span> <span class="o">&amp;</span><span class="ss">:sum</span>
</span><span class='line'><span class="nb">p</span> <span class="n">d</span><span class="o">-[</span><span class="mi">0</span><span class="p">,</span><span class="n">d</span><span class="o">-</span><span class="n">c</span><span class="p">,</span><span class="o">*</span><span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="o">.</span><span class="n">n</span><span class="p">)</span><span class="o">.</span><span class="n">map</span><span class="p">{</span><span class="o">|</span><span class="n">i</span><span class="o">|</span><span class="n">a</span><span class="o">[</span><span class="n">i</span><span class="o">]+</span><span class="n">b</span><span class="o">[</span><span class="n">i</span><span class="o">]-</span><span class="n">c</span><span class="p">}</span><span class="o">].</span><span class="n">max</span><span class="o">+</span><span class="mi">1</span>
</span></code></pre></td></tr></table></div></figure>


<p>重複を減らすと以下のようになる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="nb">gets</span>
</span><span class='line'><span class="n">m</span><span class="o">=</span><span class="mi">0</span>
</span><span class='line'><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="o">=</span><span class="vg">$&lt;</span><span class="o">.</span><span class="n">map</span><span class="p">{</span><span class="o">|</span><span class="n">e</span><span class="o">|</span><span class="n">e</span><span class="o">.</span><span class="n">split</span><span class="o">.</span><span class="n">map</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:to_i</span><span class="p">)</span><span class="o">.</span><span class="n">tap</span><span class="p">{</span><span class="o">|</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="o">|</span><span class="n">m</span><span class="o">=[</span><span class="n">m</span><span class="p">,</span><span class="n">a</span><span class="o">+</span><span class="n">b</span><span class="o">].</span><span class="n">max</span><span class="p">}}</span><span class="o">.</span><span class="n">transpose</span>
</span><span class='line'><span class="n">c</span><span class="p">,</span><span class="n">d</span><span class="o">=[</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="o">].</span><span class="n">map</span> <span class="o">&amp;</span><span class="ss">:sum</span>
</span><span class='line'><span class="nb">p</span> <span class="n">d</span><span class="o">-[</span><span class="mi">0</span><span class="p">,</span><span class="n">d</span><span class="o">-</span><span class="n">c</span><span class="p">,</span><span class="n">m</span><span class="o">-</span><span class="n">c</span><span class="o">].</span><span class="n">max</span><span class="o">+</span><span class="mi">1</span>
</span></code></pre></td></tr></table></div></figure>


<p>そもそも配列を取っておく必要はなかったようだ。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="nb">gets</span>
</span><span class='line'><span class="n">m</span><span class="o">=</span><span class="n">c</span><span class="o">=</span><span class="n">d</span><span class="o">=</span><span class="mi">0</span>
</span><span class='line'><span class="vg">$&lt;</span><span class="o">.</span><span class="n">map</span><span class="p">{</span><span class="o">|</span><span class="n">e</span><span class="o">|</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="o">=</span><span class="n">e</span><span class="o">.</span><span class="n">split</span><span class="o">.</span><span class="n">map</span> <span class="o">&amp;</span><span class="ss">:to_i</span><span class="p">;</span><span class="n">m</span><span class="o">=[</span><span class="n">m</span><span class="p">,</span><span class="n">x</span><span class="o">+</span><span class="n">y</span><span class="o">].</span><span class="n">max</span><span class="p">;</span><span class="n">c</span><span class="o">+=</span><span class="n">x</span><span class="p">;</span><span class="n">d</span><span class="o">+=</span><span class="n">y</span><span class="p">}</span>
</span><span class='line'><span class="nb">p</span> <span class="n">d</span><span class="o">-[</span><span class="mi">0</span><span class="p">,</span><span class="n">d</span><span class="o">-</span><span class="n">c</span><span class="p">,</span><span class="n">m</span><span class="o">-</span><span class="n">c</span><span class="o">].</span><span class="n">max</span><span class="o">+</span><span class="mi">1</span>
</span></code></pre></td></tr></table></div></figure>


<p>Crystalも一応書き換えておく。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="n">n</span><span class="o">=</span><span class="nb">gets</span><span class="o">.</span><span class="n">not_nil!</span><span class="o">.</span><span class="n">to_i</span><span class="o">-</span><span class="mi">1</span>
</span><span class='line'><span class="n">m</span><span class="o">=</span><span class="n">c</span><span class="o">=</span><span class="n">d</span><span class="o">=</span><span class="mi">0</span>
</span><span class='line'><span class="n">n</span><span class="o">.</span><span class="n">times</span><span class="p">{</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="o">=</span><span class="nb">gets</span><span class="o">.</span><span class="n">not_nil!</span><span class="o">.</span><span class="n">split</span><span class="o">.</span><span class="n">map</span> <span class="o">&amp;.</span><span class="n">to_i</span><span class="p">;</span><span class="n">m</span><span class="o">=[</span><span class="n">m</span><span class="p">,</span><span class="n">x</span><span class="o">+</span><span class="n">y</span><span class="o">].</span><span class="n">max</span><span class="p">;</span><span class="n">c</span><span class="o">+=</span><span class="n">x</span><span class="p">;</span><span class="n">d</span><span class="o">+=</span><span class="n">y</span><span class="p">}</span>
</span><span class='line'><span class="nb">p</span> <span class="n">d</span><span class="o">-[</span><span class="mi">0</span><span class="p">,</span><span class="n">d</span><span class="o">-</span><span class="n">c</span><span class="p">,</span><span class="n">m</span><span class="o">-</span><span class="n">c</span><span class="o">].</span><span class="n">max</span><span class="o">+</span><span class="mi">1</span>
</span></code></pre></td></tr></table></div></figure>


<p>最終的に関数型っぽいことはしなくても良くなったので、C言語でも書ける。以下のようになる。勿論ifはfmaxで書き換えても良いだろう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="n">m</span><span class="p">,</span><span class="n">c</span><span class="p">,</span><span class="n">d</span><span class="p">,</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">;</span>
</span><span class='line'><span class="n">main</span><span class="p">(){</span>
</span><span class='line'><span class="k">for</span><span class="p">(</span><span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span><span class="o">&amp;</span><span class="n">x</span><span class="p">);</span><span class="o">~</span><span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d%d&quot;</span><span class="p">,</span><span class="o">&amp;</span><span class="n">x</span><span class="p">,</span><span class="o">&amp;</span><span class="n">y</span><span class="p">);</span><span class="n">c</span><span class="o">+=</span><span class="n">x</span><span class="p">,</span><span class="n">d</span><span class="o">+=</span><span class="n">y</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="n">m</span><span class="o">&lt;</span><span class="n">x</span><span class="o">+</span><span class="n">y</span><span class="p">)</span><span class="n">m</span><span class="o">=</span><span class="n">x</span><span class="o">+</span><span class="n">y</span><span class="p">;</span>
</span><span class='line'><span class="n">x</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="n">x</span><span class="o">&lt;</span><span class="n">d</span><span class="o">-</span><span class="n">c</span><span class="p">)</span><span class="n">x</span><span class="o">=</span><span class="n">d</span><span class="o">-</span><span class="n">c</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="n">x</span><span class="o">&lt;</span><span class="n">a</span><span class="o">-</span><span class="n">c</span><span class="p">)</span><span class="n">x</span><span class="o">=</span><span class="n">a</span><span class="o">-</span><span class="n">c</span><span class="p">;</span>
</span><span class='line'><span class="n">printf</span><span class="p">(</span><span class="s">&quot;%d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">d</span><span class="o">-</span><span class="n">x</span><span class="o">+</span><span class="mi">1</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>以上、不変量を見つけてまとめることで計算量が減ってコードも短くなる過程を楽しんでいただけたなら幸いです。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[数学ガールの秘密ノート立ち読み]]></title>
    <link href="http://cielavenir.github.io/blog/2019/10/05/math-note/"/>
    <updated>2019-10-05T02:00:00+09:00</updated>
    <id>http://cielavenir.github.io/blog/2019/10/05/math-note</id>
    <content type="html"><![CDATA[<p>数学ガールの秘密ノートポータル <a href="https://www.hyuki.com/girl/note.html">https://www.hyuki.com/girl/note.html</a></p>

<p>※cakesをブラッシュアップしたものが書籍になります(書籍化完了後の巻については、cakesは雰囲気を掴むための参考。巻によっては章の順序が違う場合すらあります)</p>

<table>
<thead>
<tr>
<th style="text-align:left;">cakes番号</th>
<th style="text-align:left;">巻名</th>
<th style="text-align:left;">URL</th>
<th style="text-align:left;">立ち読み</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left;">1</td>
<td style="text-align:left;">式とグラフ</td>
<td style="text-align:left;"><a href="https://note1.hyuki.net/">https://note1.hyuki.net/</a></td>
<td style="text-align:left;">cakes <a href="https://cakes.mu/posts/435">https://cakes.mu/posts/435</a><br>達人出版会のサンプル <a href="http://tatsu-zine.com/books/mathgirl-himitu-formula-graph">http://tatsu-zine.com/books/mathgirl-himitu-formula-graph</a></td>
</tr>
<tr>
<td style="text-align:left;">2</td>
<td style="text-align:left;">整数で遊ぼう</td>
<td style="text-align:left;"><a href="https://note2.hyuki.net/">https://note2.hyuki.net/</a></td>
<td style="text-align:left;">cakes <a href="https://cakes.mu/posts/966">https://cakes.mu/posts/966</a></td>
</tr>
<tr>
<td style="text-align:left;">3</td>
<td style="text-align:left;">丸い三角関数</td>
<td style="text-align:left;"><a href="https://note3.hyuki.net/">https://note3.hyuki.net/</a></td>
<td style="text-align:left;">cakes <a href="https://cakes.mu/posts/1534">https://cakes.mu/posts/1534</a></td>
</tr>
<tr>
<td style="text-align:left;">4</td>
<td style="text-align:left;">数列の広場</td>
<td style="text-align:left;"><a href="https://note4.hyuki.net/">https://note4.hyuki.net/</a></td>
<td style="text-align:left;">cakes <a href="https://cakes.mu/posts/2093">https://cakes.mu/posts/2093</a></td>
</tr>
<tr>
<td style="text-align:left;">5</td>
<td style="text-align:left;">微分を追いかけて</td>
<td style="text-align:left;"><a href="https://note5.hyuki.net/">https://note5.hyuki.net/</a></td>
<td style="text-align:left;">cakes <a href="https://cakes.mu/posts/2658">https://cakes.mu/posts/2658</a></td>
</tr>
<tr>
<td style="text-align:left;">6</td>
<td style="text-align:left;">ベクトルの真実</td>
<td style="text-align:left;"><a href="https://note6.hyuki.net/">https://note6.hyuki.net/</a></td>
<td style="text-align:left;">cakes <a href="https://cakes.mu/posts/3337">https://cakes.mu/posts/3337</a><br>SBクリエイティブ <a href="http://ul.sbcr.jp/MATH-8232-0">http://ul.sbcr.jp/MATH-8232-0</a></td>
</tr>
<tr>
<td style="text-align:left;">7</td>
<td style="text-align:left;">場合の数</td>
<td style="text-align:left;"><a href="https://note7.hyuki.net/">https://note7.hyuki.net/</a></td>
<td style="text-align:left;">cakes <a href="https://cakes.mu/posts/4620">https://cakes.mu/posts/4620</a><br>SBクリエイティブ <a href="http://ul.sbcr.jp/MATH-SJddk">http://ul.sbcr.jp/MATH-SJddk</a></td>
</tr>
<tr>
<td style="text-align:left;">8</td>
<td style="text-align:left;">(指数と対数)</td>
<td style="text-align:left;"></td>
<td style="text-align:left;">cakes <a href="https://cakes.mu/posts/5506">https://cakes.mu/posts/5506</a></td>
</tr>
<tr>
<td style="text-align:left;">9</td>
<td style="text-align:left;">(フラクタル)</td>
<td style="text-align:left;"></td>
<td style="text-align:left;">cakes <a href="https://cakes.mu/posts/6259">https://cakes.mu/posts/6259</a></td>
</tr>
<tr>
<td style="text-align:left;">10</td>
<td style="text-align:left;">(不等式)</td>
<td style="text-align:left;"></td>
<td style="text-align:left;">cakes <a href="https://cakes.mu/posts/7139">https://cakes.mu/posts/7139</a></td>
</tr>
<tr>
<td style="text-align:left;">11</td>
<td style="text-align:left;">ビットとバイナリー</td>
<td style="text-align:left;"><a href="https://note11.hyuki.net/">https://note11.hyuki.net/</a></td>
<td style="text-align:left;">cakes <a href="https://cakes.mu/posts/7990">https://cakes.mu/posts/7990</a><br>SBクリエイティブ <a href="http://ul.sbcr.jp/MATH-oPU7T">http://ul.sbcr.jp/MATH-oPU7T</a></td>
</tr>
<tr>
<td style="text-align:left;">12</td>
<td style="text-align:left;">行列が描くもの</td>
<td style="text-align:left;"><a href="https://note10.hyuki.net/">https://note10.hyuki.net/</a></td>
<td style="text-align:left;">cakes <a href="https://cakes.mu/posts/8952">https://cakes.mu/posts/8952</a><br>SBクリエイティブ <a href="http://ul.sbcr.jp/MATH-PAwkh">http://ul.sbcr.jp/MATH-PAwkh</a></td>
</tr>
<tr>
<td style="text-align:left;">13</td>
<td style="text-align:left;">やさしい統計</td>
<td style="text-align:left;"><a href="https://note8.hyuki.net/">https://note8.hyuki.net/</a></td>
<td style="text-align:left;">cakes <a href="https://cakes.mu/posts/10035">https://cakes.mu/posts/10035</a><br>BOOK WALKER <a href="https://bookwalker.jp/de7becb42b-6efd-45d7-8c23-41b3df8d3995/">https://bookwalker.jp/de7becb42b-6efd-45d7-8c23-41b3df8d3995/</a></td>
</tr>
<tr>
<td style="text-align:left;">14</td>
<td style="text-align:left;">積分を見つめて</td>
<td style="text-align:left;"><a href="https://note9.hyuki.net/">https://note9.hyuki.net/</a></td>
<td style="text-align:left;">cakes <a href="https://cakes.mu/posts/11042">https://cakes.mu/posts/11042</a><br>BOOK WALKER <a href="https://bookwalker.jp/de8a8b19a1-3ae8-4ce0-aeeb-48ddb16f990a/">https://bookwalker.jp/de8a8b19a1-3ae8-4ce0-aeeb-48ddb16f990a/</a></td>
</tr>
<tr>
<td style="text-align:left;">15</td>
<td style="text-align:left;">波の広がり</td>
<td style="text-align:left;"></td>
<td style="text-align:left;">cakes <a href="https://cakes.mu/posts/11927">https://cakes.mu/posts/11927</a></td>
</tr>
<tr>
<td style="text-align:left;">16</td>
<td style="text-align:left;">数を作る</td>
<td style="text-align:left;"></td>
<td style="text-align:left;">cakes <a href="https://cakes.mu/posts/12710">https://cakes.mu/posts/12710</a></td>
</tr>
<tr>
<td style="text-align:left;">17</td>
<td style="text-align:left;">広がる複素数</td>
<td style="text-align:left;"></td>
<td style="text-align:left;">cakes <a href="https://cakes.mu/posts/13400">https://cakes.mu/posts/13400</a></td>
</tr>
<tr>
<td style="text-align:left;">18</td>
<td style="text-align:left;">論理と証明</td>
<td style="text-align:left;"></td>
<td style="text-align:left;">cakes <a href="https://cakes.mu/posts/14173">https://cakes.mu/posts/14173</a></td>
</tr>
<tr>
<td style="text-align:left;">19</td>
<td style="text-align:left;">いにしえの数学</td>
<td style="text-align:left;"></td>
<td style="text-align:left;">cakes <a href="https://cakes.mu/posts/15062">https://cakes.mu/posts/15062</a></td>
</tr>
<tr>
<td style="text-align:left;">20</td>
<td style="text-align:left;">整数に誘われて</td>
<td style="text-align:left;"></td>
<td style="text-align:left;">cakes <a href="https://cakes.mu/posts/16037">https://cakes.mu/posts/16037</a></td>
</tr>
<tr>
<td style="text-align:left;">21</td>
<td style="text-align:left;">関数を手がかりに</td>
<td style="text-align:left;"></td>
<td style="text-align:left;">cakes <a href="https://cakes.mu/posts/17155">https://cakes.mu/posts/17155</a></td>
</tr>
<tr>
<td style="text-align:left;">22</td>
<td style="text-align:left;">無限を探そう</td>
<td style="text-align:left;"></td>
<td style="text-align:left;">cakes <a href="https://cakes.mu/posts/18339">https://cakes.mu/posts/18339</a></td>
</tr>
<tr>
<td style="text-align:left;">23</td>
<td style="text-align:left;">関数を組み立てよう</td>
<td style="text-align:left;"></td>
<td style="text-align:left;">cakes <a href="https://cakes.mu/posts/20592">https://cakes.mu/posts/20592</a></td>
</tr>
<tr>
<td style="text-align:left;">24</td>
<td style="text-align:left;">群とシンメトリー</td>
<td style="text-align:left;"></td>
<td style="text-align:left;">cakes <a href="https://cakes.mu/posts/21961">https://cakes.mu/posts/21961</a></td>
</tr>
<tr>
<td style="text-align:left;">25</td>
<td style="text-align:left;">学ぶための対話</td>
<td style="text-align:left;"><a href="https://note12.hyuki.net/">https://note12.hyuki.net/</a></td>
<td style="text-align:left;">cakes <a href="https://cakes.mu/posts/23227">https://cakes.mu/posts/23227</a></td>
</tr>
<tr>
<td style="text-align:left;">26</td>
<td style="text-align:left;">確率の冒険</td>
<td style="text-align:left;"></td>
<td style="text-align:left;">cakes <a href="https://cakes.mu/posts/24645">https://cakes.mu/posts/24645</a></td>
</tr>
<tr>
<td style="text-align:left;">27</td>
<td style="text-align:left;">分数を極める</td>
<td style="text-align:left;"></td>
<td style="text-align:left;">cakes <a href="https://cakes.mu/posts/25944">https://cakes.mu/posts/25944</a></td>
</tr>
<tr>
<td style="text-align:left;">28</td>
<td style="text-align:left;">放物線をつかまえて</td>
<td style="text-align:left;"></td>
<td style="text-align:left;">cakes <a href="https://cakes.mu/posts/27403">https://cakes.mu/posts/27403</a></td>
</tr>
</tbody>
</table>


<hr />

<p>まあ、cakes番号と書籍番号の対照表を(私が)ほしかっただけなんですけどね&ndash;;;;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ingress]]></title>
    <link href="http://cielavenir.github.io/blog/2019/08/03/ingress/"/>
    <updated>2019-08-03T02:00:00+09:00</updated>
    <id>http://cielavenir.github.io/blog/2019/08/03/ingress</id>
    <content type="html"><![CDATA[<h2>現在</h2>

<ul>
<li>A13 / TL40 / WL21 です</li>
</ul>


<h2>20190211</h2>

<ul>
<li>Trainer Level 39</li>
</ul>


<h2>20190418</h2>

<ul>
<li>TL40</li>
</ul>


<h2>20190611</h2>

<ul>
<li>会社で嘔吐し12・13が有給にww</li>
</ul>


<h2>20190613</h2>

<ul>
<li>SOV37でポケモンGoをやりつつSHV38でIngressをやるという廃人的行為を思いつく。ただ、周りにIngressをやっている知人は @leafaerosnow 氏のみであるため、陣営は氏と同じENL。<del>ENLでのXMの利用目的から夜間飛行(花)を連想するほど私の頭は逝ってしまっているらしいってのもある</del></li>
<li>この日はアドベンチャーウィークの都合上50kmのボーナスのため、家から後楽園まで歩いた。ポータルがほとんどENLだったため、適当にリンクを張るだけで <strong>一日でAccess Level 6まで</strong> 上がった。ラッキーだったと思う。</li>
</ul>


<h2>20190614</h2>

<ul>
<li>13日の時点で実際にはA7一歩手前だったため、A7になった。</li>
</ul>


<h2>20190624</h2>

<ul>
<li>AP <strong>1.975倍</strong> キャンペーンのおかげでA8に。脱初心者。</li>
<li><a href="https://twitter.com/ingress/status/1142125061517787136">https://twitter.com/ingress/status/1142125061517787136</a></li>
</ul>


<h2>20190702</h2>

<ul>
<li>Wizarding Level 3</li>
</ul>


<h2>20190706</h2>

<ul>
<li>Rechargerメダルが金に。</li>
</ul>


<h2>20190707</h2>

<ul>
<li>WL10 (ここから急激に伸び悩む。まあゲームシステム的に致し方ない)</li>
</ul>


<h2>20190708</h2>

<ul>
<li>A9到達。</li>
</ul>


<h2>2019071x</h2>

<ul>
<li>SpecOpsメダルが金に。</li>
</ul>


<h2>20190801</h2>

<ul>
<li>WL15。無期休業。</li>
<li>A10到達。ポータル申請権獲得。</li>
</ul>


<h2>20190811</h2>

<ul>
<li>Sojournerメダルが金に。</li>
</ul>


<h2>20190914</h2>

<ul>
<li>Trekkerメダルが金に。山梨バス旅行中のできごとであった^^;;</li>
</ul>


<h2>20190915</h2>

<ul>
<li>Rechargerメダルが黒に。</li>
<li>A11到達。100日未満での達成成功。</li>
<li>ExplorerとTranslatorで取る予定としますか…。</li>
</ul>


<h2>2019101x</h2>

<ul>
<li>Explorerメダルが金に。</li>
<li>Translatorメダルが金に。</li>
<li>会社移転前に完了できて助かった…</li>
</ul>


<h2>20191120</h2>

<ul>
<li>A12到達。酉の市の日でした^^;;</li>
</ul>


<h2>20191211</h2>

<ul>
<li>Sojourmerメダルが白に。</li>
<li>夜に芝公園を徘徊。(その前にクリスマスマーケットに行ったついでにどれぐらいメダル進められそうかIntel Mapで下見しておいたんです)</li>
</ul>


<h2>20191212</h2>

<ul>
<li>神田明神を徘徊し、Pioneerメダルが金に。これで15までは確定。Sojournerを黒にできれば終わりなんですがどうですかねぇ^^;</li>
</ul>


<h2>2020011x</h2>

<ul>
<li>いつでも冒険モード実装につきWizards Unite仮復帰。</li>
</ul>


<h2>20200401</h2>

<ul>
<li>NL1331 Meetupが銅に。</li>
</ul>


<h2>20200418</h2>

<ul>
<li>コミュニティ・デイ中にWL20達成。</li>
</ul>


<h2>20200422</h2>

<ul>
<li>某公園が一面青だったためAPEXを適用しつつ焼き尽くしました(約70万AP獲得)。すみません。これでA13到達。</li>
<li>今こそAGにとって書き入れ時とかほざいたんは誰や苦笑

<ul>
<li>まあ弊社はテレワークじゃないんで通勤途中はある意味しかたないが。</li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[yukicoder] cracked]]></title>
    <link href="http://cielavenir.github.io/blog/2019/04/08/cracked/"/>
    <updated>2019-04-08T01:00:00+09:00</updated>
    <id>http://cielavenir.github.io/blog/2019/04/08/cracked</id>
    <content type="html"><![CDATA[<ul>
<li><a href="https://yukicoder.me/problems/no/3051">https://yukicoder.me/problems/no/3051</a></li>
</ul>


<p>quineを生成して処理するのが一番楽なのでは。なおquine生成エンジンはrobustなもののほうが後処理が楽だと思います。</p>

<ul>
<li><a href="https://github.com/cielavenir/procon/blob/816728f5d9832f7adbcbb76f5668a36f7c4cd502/00genquine.rb">https://github.com/cielavenir/procon/blob/816728f5d9832f7adbcbb76f5668a36f7c4cd502/00genquine.rb</a></li>
<li><a href="https://yukicoder.me/submissions/336190">https://yukicoder.me/submissions/336190</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Shirokane HGC]]></title>
    <link href="http://cielavenir.github.io/blog/2019/03/31/shirokane/"/>
    <updated>2019-03-31T00:00:00+09:00</updated>
    <id>http://cielavenir.github.io/blog/2019/03/31/shirokane</id>
    <content type="html"><![CDATA[<table>
<thead>
<tr>
<th style="text-align:left;">generation</th>
<th style="text-align:left;">machine</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left;">1</td>
<td style="text-align:left;">c</td>
</tr>
<tr>
<td style="text-align:left;">2</td>
<td style="text-align:left;">nc</td>
</tr>
<tr>
<td style="text-align:left;">3</td>
<td style="text-align:left;">sc</td>
</tr>
<tr>
<td style="text-align:left;">4</td>
<td style="text-align:left;">yc</td>
</tr>
<tr>
<td style="text-align:left;">5</td>
<td style="text-align:left;">gc</td>
</tr>
</tbody>
</table>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[yukicoder] well known]]></title>
    <link href="http://cielavenir.github.io/blog/2019/03/25/well-known/"/>
    <updated>2019-03-25T00:00:00+09:00</updated>
    <id>http://cielavenir.github.io/blog/2019/03/25/well-known</id>
    <content type="html"><![CDATA[<ul>
<li><p><a href="https://yukicoder.me/problems/no/796">https://yukicoder.me/problems/no/796</a></p></li>
<li><p>和を3で割ったあまりが1で、数列のうち1要素が3…</p></li>
<li>っていうか1から100000までの和って312456超えますし…</li>
<li>よく見たら <strong>相異なるって書いてない</strong> じゃん</li>
<li><code>[1]+[3]*(N-1)</code>でいいのか。これ、国語の問題ですよね…</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[yukicoder] Restrictions]]></title>
    <link href="http://cielavenir.github.io/blog/2019/03/25/restrictions/"/>
    <updated>2019-03-25T00:00:00+09:00</updated>
    <id>http://cielavenir.github.io/blog/2019/03/25/restrictions</id>
    <content type="html"><![CDATA[<ul>
<li><a href="https://yukicoder.me/problems/no/795">https://yukicoder.me/problems/no/795</a></li>
</ul>


<p>テスターの感想としては、April Fool Contest向けの問題だったのではないかと思っています。まる。</p>

<ul>
<li>なおくそまじめな実装は <a href="https://yukicoder.me/submissions/328688">https://yukicoder.me/submissions/328688</a> です(筈)。</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[atcoder] Various Sushi]]></title>
    <link href="http://cielavenir.github.io/blog/2019/01/26/various-sushi/"/>
    <updated>2019-01-26T17:00:00+09:00</updated>
    <id>http://cielavenir.github.io/blog/2019/01/26/various-sushi</id>
    <content type="html"><![CDATA[<ul>
<li><p><a href="https://atcoder.jp/contests/abc116/tasks/abc116_d">https://atcoder.jp/contests/abc116/tasks/abc116_d</a></p></li>
<li><p>持っている寿司のリストLと種類ごとの寿司の個数Cを用意する</p></li>
<li>おいしさの高い順にソートする</li>
<li>寿司を順番に見ていく。</li>
<li>すでに持っている寿司がK皿であるなら、

<ul>
<li>すでにその種類の寿司を持っているなら無視する。(K皿でない場合は無視してはいけない。)</li>
<li>Lを後ろから見ていき(j)、C[L[j][種類]]&gt;1となっているものを探す。L[j]を取り除く。C[L[j][種類]]を1減らす。</li>
</ul>
</li>
<li>見ている寿司をLに加える</li>
</ul>


<p>このとき、「後ろから見てい」くインデックスjを最初にK-1で初期化したあとは初期化しないようにする。こうすることで、Lの各要素はたかだか1回しか舐められないことになり、十分高速となる。
なおjが0未満になったら「順番に見ていく」こと自体を打ち切ることでプログラムが簡潔になる。</p>

<p>最初以外初期化が必要ないのは、あとから追加された寿司を取り除くことは絶対にないからである。</p>

<p><a href="https://atcoder.jp/contests/abc116/submissions/4076962">https://atcoder.jp/contests/abc116/submissions/4076962</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[yukicoder] クリスマスツリー]]></title>
    <link href="http://cielavenir.github.io/blog/2019/01/04/christmas-tree/"/>
    <updated>2019-01-04T22:00:00+09:00</updated>
    <id>http://cielavenir.github.io/blog/2019/01/04/christmas-tree</id>
    <content type="html"><![CDATA[<ul>
<li><a href="https://yukicoder.me/problems/no/778">https://yukicoder.me/problems/no/778</a></li>
</ul>


<p><code>__gnu_pbds::tree</code>で倒せます。<a href="https://yukicoder.me/problems/no/649/editorial">ここでちょっとQK！の解説</a>を参照ください。</p>

<ul>
<li>答案 <a href="https://yukicoder.me/submissions/308223">https://yukicoder.me/submissions/308223</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[yukicoder] 畳み込みの和]]></title>
    <link href="http://cielavenir.github.io/blog/2018/12/02/convolution-sum/"/>
    <updated>2018-12-02T22:00:00+09:00</updated>
    <id>http://cielavenir.github.io/blog/2018/12/02/convolution-sum</id>
    <content type="html"><![CDATA[<ul>
<li><a href="https://yukicoder.me/problems/no/754">https://yukicoder.me/problems/no/754</a></li>
</ul>


<p>問題文のサンプル１はこういう意味である。</p>

<ul>
<li><code>3 + 2x + 2x2 + ...</code> * <code>7 + 0x + 4x2 + ...</code> = <code>21 + 14x + 36x2 + ...</code>となる(2乗まで)。この係数の和(<code>21+14+36</code>)は61である。</li>
</ul>


<p>つまり、(3+2+2)*7 + (3+2)*0 + (3)*4を計算すれば良いことになる。各項の左側について最初に和を取り、後ろから順番に引いていけば良い。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[yukicoder] チャンパーノウン定数]]></title>
    <link href="http://cielavenir.github.io/blog/2018/12/02/champernowne/"/>
    <updated>2018-12-02T04:00:00+09:00</updated>
    <id>http://cielavenir.github.io/blog/2018/12/02/champernowne</id>
    <content type="html"><![CDATA[<ul>
<li><a href="https://yukicoder.me/problems/no/756">https://yukicoder.me/problems/no/756</a></li>
<li><a href="https://yukicoder.me/problems/no/757">https://yukicoder.me/problems/no/757</a></li>
</ul>


<p>チャンパーノウン定数自体は既出のネタ(例：<a href="https://github.com/cielavenir/procon/blob/f28284db31ff655e0ed4a9ca8241aa9d015aad75/euler/tyama_euler40.c">Project Euler 40</a>)なので、基本的には以下の方針で良い(CodeIQコード銀行「n番目の数字は？」(<a href="https://github.com/cielavenir/codeiq_solutions/tree/master/code_teller/q983">答案</a>)のコメントより)。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>例えば1から999までは以下の様な区間に分割できる。
</span><span class='line'>1 + 0〜8
</span><span class='line'>10 + 0〜89
</span><span class='line'>100 + 0〜899
</span><span class='line'>各区間に含まれる数字の個数は9、180、2700となる。
</span><span class='line'>これを1*1*9、2*10*9、3*100*9と表現する(digits*expbase*9)。
</span><span class='line'>入力値が入る区間が決まったら、それより下の和を入力値から引き(nとする)、
</span><span class='line'>(digits)桁の数を並べた中のn桁目を求めれば良い。</span></code></pre></td></tr></table></div></figure>


<p>これで、ビルトイン多倍長整数を使えば<code>10**1000</code>程度まではACできる。ただし、今回は入力が非常に大きいため、下位から順番に処理すると多倍長演算が容易にTLEを招いてしまう(解答例の<code>if false</code>の一部)。
まず、この<code>1*1*9 + 2*10*9 + 3*100*9 + ...</code>を高速に求めることを考える。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Sn   = 1*1*9 2*10*9 3*100*9 4*1000*9
</span><span class='line'>10Sn =       1*10*9 2*100*9 3*1000*9  4*10000*9
</span><span class='line'>-9Sn = 1*1*9 1*10*9 1*100*9 1*1000*9 -4*10000*9
</span><span class='line'>-9Sn = (10**4-1)                     -4*10000*9</span></code></pre></td></tr></table></div></figure>


<p>といった変形により、<code>Si = i*10**i - (10**i-1)/9</code>と定式化できる。これを用いて、digitsを2分探索するか上位から探索するかする。これでTLEを回避できる。</p>

<ul>
<li>Crystal <a href="https://yukicoder.me/submissions/300755">https://yukicoder.me/submissions/300755</a></li>
<li>Ruby <a href="https://yukicoder.me/submissions/300934">https://yukicoder.me/submissions/300934</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[DanceRushでFLOWERを解禁するまで]]></title>
    <link href="http://cielavenir.github.io/blog/2018/11/29/dancerush-flower/"/>
    <updated>2018-11-29T00:00:00+09:00</updated>
    <id>http://cielavenir.github.io/blog/2018/11/29/dancerush-flower</id>
    <content type="html"><![CDATA[<h2>2018/3/23</h2>

<p>確か初日にプレイしたはず。当初はLv5ですら星5(90点)取れなかったんですよ…</p>

<h2>2018/4/2*</h2>

<p>Extra Stage専用楽曲、完走したら解禁可能とかえぐすぎませんか…全然できないんですが…当時はDRSの反応についてよくわかってなかった(反応が悪いとすら思ったこともあります)。</p>

<h2>2018/6/13</h2>

<p>アンロックを進める中で、ようやくImpress易をクリアした(易を完走できれば解禁可能になり普も普通にプレイ可能になる)。
今でこそLv8の大半の曲は余裕だが、当時はLv7はかなりいっぱいいっぱいだった。がんばったわし。これでFLOWER(易がLv9)に挑戦可能になった。好きな曲だからね。
<a href="https://twitter.com/cielavenir/status/1006747633925287936">https://twitter.com/cielavenir/status/1006747633925287936</a></p>

<h2>2018/7/19</h2>

<p>この頃は音源を聴き込んでおり、77点に乗せる。しかし、この記録が破られることは3ヶ月間ないのであった…
<a href="https://twitter.com/cielavenir/status/1019926097524244480">https://twitter.com/cielavenir/status/1019926097524244480</a></p>

<h2>2018/10/24</h2>

<p>あきらめつつも、全曲の解禁作業が終わり、全譜面星5埋めが佳境に差し掛かった頃。
1曲目：Mandrake普(Lv8)。リズムの刻み方が独特で、Tap/Downが8分で交互に来る箇所がある関係上個人的にLv8最難だと思う。慌てずに着実に踏むことを意識して星5が取れた。
2曲目：Garuda易(Lv9)。いつもほとんど取れない8小節があるんですが、おちついて取ることができた。これも星5。
3曲目：調子が良い気がしたので、FLOWER易行くことにした。慌てずにステップを踏み、アウトロまでlife3残した。素晴らしい。が、ここで力が抜けてミスを出し残り1、最後の左足フリックは苦し紛れに入力できました。本当に良かった。もしこの入力ミスってたらどうなっていたの…。
しかもBad10とか。Tapのミスは9個なので、Downを1個落としていたのかな…。まあアンロックするのが重要なので。いいんじゃないでしょうか&ndash;;;;なにはともあれお疲れ様でした。
<a href="http://twitter.com/cielavenir/status/1055086630783016960">http://twitter.com/cielavenir/status/1055086630783016960</a></p>

<h2>2018/11/29</h2>

<p>FLOWERを解禁した私ならKACでもそこそこ戦えるはずだ！<del>さあ予選行くぜ</del>無理よぅこれorz
<a href="https://twitter.com/cielavenir/status/1068135718751326208">https://twitter.com/cielavenir/status/1068135718751326208</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[未完の記事の存在意義について]]></title>
    <link href="http://cielavenir.github.io/blog/2018/10/30/wip-articles/"/>
    <updated>2018-10-30T22:45:00+09:00</updated>
    <id>http://cielavenir.github.io/blog/2018/10/30/wip-articles</id>
    <content type="html"><![CDATA[<p><a href="https://qiita.com/HiromuMasuda0228/items/a71dea7ef4d77a30b118">こちら</a>や<a href="https://qiita.com/akira_/items/c8881dcde93d4cb035c7">こちら</a>で触れられているとおり、エンジニアにとってアウトプットは重要である。</p>

<p>問題になるのは記事の質であろう。質をいつも保つことは難しい場合もあると思う。
私の場合は、例えば<a href="https://qiita.com/cielavenir/items/683ebb10fa8083b3e6b4">WIP 意図せぬMerge Hellを防ぐ</a>が未完のまま公開された記事の例である。[^1]</p>

<p>そういう場合、少なくとも自分の中で形にするまでは公開すべきでないという<a href="https://twitter.com/angel_p_57/status/1049597665804091392">意見も聞く</a>が、私としては、間違った情報でない限りは公開しても良いと思う。特に少ない情報の場合は断片だけでも助かる人はいると思うし、そこから話が広がる可能性もあるからだ。</p>

<p>[^1] 私事だが、(弊社にはモジュールのリポジトリの他にシステムとしての管理リポジトリがあるのだが)管理リポジトリに私の個人ブランチが3個も存在している。はっきり言って糞だが、解決策がまだ見つかっていない以上しかたがない。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[yukicoder] Careful Engineer]]></title>
    <link href="http://cielavenir.github.io/blog/2018/10/08/careful-engineer/"/>
    <updated>2018-10-08T11:00:00+09:00</updated>
    <id>http://cielavenir.github.io/blog/2018/10/08/careful-engineer</id>
    <content type="html"><![CDATA[<p><a href="https://yukicoder.me/problems/no/734">https://yukicoder.me/problems/no/734</a></p>

<h2>解法</h2>

<p>本文を噛み砕くと、<code>60ax&gt;bx+3600c</code>なので、「直線 <code>y=(60a-b)x-3600c</code> がx>0でx軸と交わるx座標のceil」を求めれば良いことになります。これは傾きが正の場合のみ成立します。</p>

<h2>不等式の評価</h2>

<p>上にceilと書かれていますが、プログラムを書く場合と書かない場合の合計時間が等しくて良いなら<code>ceil</code>、書く場合の合計時間が小さくならなければならないなら<code>floor+1</code>です。条件設定って難しいorz</p>

<h2>コメンタリー</h2>

<p><code>(60a-b)x&gt;3600c</code>について60a-bで両辺割ったときの不等号の向きって60a-bの符号で違ったんだっけって少し混乱した^^;;</p>

<h2>コメンタリー2</h2>

<p>「不等式の評価」項はコンテスト後に追記したものです。ご迷惑おかけしました(このために星1.5に上がることとなりました)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[2年前にmaimaiのレーティングが下がったこと]]></title>
    <link href="http://cielavenir.github.io/blog/2018/09/30/maimai/"/>
    <updated>2018-09-30T23:30:00+09:00</updated>
    <id>http://cielavenir.github.io/blog/2018/09/30/maimai</id>
    <content type="html"><![CDATA[<h2>背景等</h2>

<ul>
<li>紫稼働時に私のレーティングは9.74から9.22に下落することとなった。これはかなり私のモチベーションを削ることとなった(笑)</li>
<li>それからというもの長らく遠ざかっていたが。オンゲキやチュウニズムのレート算出プログラムを書いたので、せっかくなのでmaimaiのプログラムも書くことにした(利用権延長するために今日久々にプレイした)。内部Lvは未入力だが傾向はわかるはずだ。</li>
<li>で、できたものが <a href="https://docs.google.com/spreadsheets/d/1EcodNpPUgAtNFboMd1l-8fo9TJRYsbx8Ho-vVJV-5Fs/edit?usp=sharing">https://docs.google.com/spreadsheets/d/1EcodNpPUgAtNFboMd1l-8fo9TJRYsbx8Ho-vVJV-5Fs/edit?usp=sharing</a> だ。</li>
</ul>


<h2>考察</h2>

<ul>
<li>実はレートが落ちた主要因はS-AAAの壁ではなく、history枠の存在であることが判明した。</li>
<li>現在のhistory枠平均は3.36であり、これはざっくりと到達可能レーティングの95%程度しかいきませんよということを意味する。全体レーティングの0.5は大きい数字である。</li>
<li>今はまだ119曲しかレート7.5に到達していないが、これを520曲で行えばレーティングは9.6程度まで回復する。</li>
<li>ただ、挑戦する難易度としては、Lv11以上に挑戦するか、7〜8をSSにするかが良いようだ。Masterを解禁するには9をSにする必要も生じるだろうが、効率がよくなさそうだ。キャンペーンでMasterが期間限定解禁されているタイミングを狙ったほうが得策かもしれない。</li>
</ul>


<h2>結論</h2>

<ul>
<li>未プレイ291曲…？ちょっとこれはきついですね…。結果的にはますますモチベを削ることになったようですorz</li>
<li>全埋めする以外に計る方法はなかったのでしょうか…。</li>
</ul>

]]></content>
  </entry>
  
</feed>
