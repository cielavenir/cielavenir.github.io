<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[My Octopress Blog]]></title>
  <link href="http://cielavenir.github.io/atom.xml" rel="self"/>
  <link href="http://cielavenir.github.io/"/>
  <updated>2019-01-26T17:19:11+09:00</updated>
  <id>http://cielavenir.github.io/</id>
  <author>
    <name><![CDATA[Ciel Avenir]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Personal Stuff]]></title>
    <link href="http://cielavenir.github.io/blog/2038/01/01/personal-stuff/"/>
    <updated>2038-01-01T00:00:00+09:00</updated>
    <id>http://cielavenir.github.io/blog/2038/01/01/personal-stuff</id>
    <content type="html"><![CDATA[<h3>Twitter</h3>

<ul>
<li><a href="https://twitter.com/cielavenir">https://twitter.com/cielavenir</a></li>
<li><a href="http://twilog.org/cielavenir">http://twilog.org/cielavenir</a></li>
<li><a href="http://twisave.com/cielavenir">http://twisave.com/cielavenir</a></li>
<li><a href="http://tweez.net/cielavenir">http://tweez.net/cielavenir</a></li>
</ul>


<h3>Accounts</h3>

<ul>
<li><a href="https://github.com/cielavenir">https://github.com/cielavenir</a></li>
<li><a href="https://rubygems.org/profiles/cielavenir">https://rubygems.org/profiles/cielavenir</a></li>
<li><a href="https://pypi.org/user/cielavenir/">https://pypi.org/user/cielavenir/</a></li>
<li><a href="https://qiita.com/cielavenir">https://qiita.com/cielavenir</a></li>
<li><a href="https://portfolio.forkwell.com/@cielavenir">https://portfolio.forkwell.com/@cielavenir</a></li>
<li><a href="http://www.programmerprofile.net/user/cielavenir/">http://www.programmerprofile.net/user/cielavenir/</a></li>
<li><a href="https://stargzr.net/users/cielavenir">https://stargzr.net/users/cielavenir</a></li>
<li><a href="http://togetter.com/id/cielavenir">http://togetter.com/id/cielavenir</a></li>
<li><a href="https://www.instagram.com/cielartisan/">https://www.instagram.com/cielartisan/</a></li>
</ul>


<h3>巡拝</h3>

<ul>
<li>2015/01 関東三十六不動尊結願</li>
<li>2015/04 江戸三十三観音満願</li>
<li>2017/06 関東三十六不動尊結願(酉)</li>
</ul>


<h3>資格等</h3>

<ul>
<li>英検2級</li>
<li>漢検2級</li>
<li>文検4級</li>
<li>普通自動車AT</li>
<li>Master of Integrated Biosciences</li>
<li><p>日本バイオインフォマティクス学会認定バイオインフォマティクス技術者</p></li>
<li><p>以下は受験料が無料だった時に適当に取ったので誇ることもない。</p>

<ul>
<li>Yahooデジカメエキスパート1級</li>
<li>Yahooタイピングエキスパート6級</li>
<li>(日本将棋連盟)将棋1級</li>
</ul>
</li>
</ul>


<h3>CodeIQ出題</h3>

<ul>
<li><a href="https://github.com/cielavenir/codeiq_problems">https://github.com/cielavenir/codeiq_problems</a>

<ul>
<li>Restricted Words (Hello World)は挑戦者数542人を記録。</li>
<li>Restricted Base32は少し残念。。</li>
</ul>
</li>
</ul>


<h3>CheckiO</h3>

<ul>
<li>(コーディング道場) The Same Gmail

<ul>
<li>Gmailの性質理解してますかって問題。悪問だったので他所では没になりました。</li>
</ul>
</li>
<li><a href="http://www.checkio.org/mission/painting-wall/share/8a0e0061de3ff95664776d904d309e57/">http://www.checkio.org/mission/painting-wall/share/8a0e0061de3ff95664776d904d309e57/</a>

<ul>
<li>当時は純粋なアルゴリズム問題は出したくないということでこっちに出した経緯。

<ul>
<li>ちなみに、今もモーニングクエスト枠(とRestricted)以外ではアルゴリズム問題は出していないです。</li>
</ul>
</li>
</ul>
</li>
<li><a href="http://www.checkio.org/mission/rotate-hole/share/ad54904cae112ddc65fa37533c5b0c1e/">http://www.checkio.org/mission/rotate-hole/share/ad54904cae112ddc65fa37533c5b0c1e/</a>

<ul>
<li>あれの設定を簡単にしてアルゴリズム部分だけを取り出した問題。</li>
</ul>
</li>
<li><a href="http://www.checkio.org/mission/exec-quine/share/2f386036b01111d06befa6820f2c2c5e/">http://www.checkio.org/mission/exec-quine/share/2f386036b01111d06befa6820f2c2c5e/</a>

<ul>
<li>Quineを書かせる問題はたくさんあるけど、CheckiOのシステム用にアレンジしてみたら面白そうな感じになった。</li>
</ul>
</li>
<li><a href="http://www.checkio.org/mission/fibonacci-golf/share/8e02b24099a9e339b86e73e4f4360524/">http://www.checkio.org/mission/fibonacci-golf/share/8e02b24099a9e339b86e73e4f4360524/</a>

<ul>
<li><a href="https://github.com/cielavenir/checkio-task-fibonacci-golf/blob/master/local_checker.py">https://github.com/cielavenir/checkio-task-fibonacci-golf/blob/master/local_checker.py</a></li>
<li><a href="https://github.com/cielavenir/checkio-task-fibonacci-golf/blob/master/local_checker.rb">https://github.com/cielavenir/checkio-task-fibonacci-golf/blob/master/local_checker.rb</a></li>
<li>(つまり、コンパイル後のサイズ)を使った問題をCodeIQで出したら面白いだろうなと思ったのだけど、一部から非難轟々になる恐れがあったのでやめた問題。</li>
</ul>
</li>
<li><a href="http://www.checkio.org/mission/adfgvx-cipher/share/558141829caa7987d18d95cd9f68ba9b/">http://www.checkio.org/mission/adfgvx-cipher/share/558141829caa7987d18d95cd9f68ba9b/</a>

<ul>
<li>暗号祭りに合わせて作った問題。ちなみに某所の暗号解読問題をアレンジして作ったので原案は私ではない。</li>
</ul>
</li>
</ul>


<h3>競技プログラミング等</h3>

<table>
<thead>
<tr>
<th style="text-align:left;">Judge</th>
<th style="text-align:left;">Rate</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left;">TopCoder</td>
<td style="text-align:left;">1016 (緑のまま引退の危機)</td>
</tr>
<tr>
<td style="text-align:left;">Codeforces</td>
<td style="text-align:left;">1666 (青が1600-1899になったので引退しました)</td>
</tr>
<tr>
<td style="text-align:left;">HackerRank</td>
<td style="text-align:left;">2303</td>
</tr>
<tr>
<td style="text-align:left;">AtCoder</td>
<td style="text-align:left;">1800程度</td>
</tr>
<tr>
<td style="text-align:left;">yukicoder</td>
<td style="text-align:left;">Lv 73</td>
</tr>
<tr>
<td style="text-align:left;">AOJ</td>
<td style="text-align:left;">658問</td>
</tr>
<tr>
<td style="text-align:left;">POJ</td>
<td style="text-align:left;">275問</td>
</tr>
<tr>
<td style="text-align:left;">CodeIQ</td>
<td style="text-align:left;">バッジ数・スキルピース数トップ</td>
</tr>
<tr>
<td style="text-align:left;">paiza</td>
<td style="text-align:left;">paizaマスター、言語マスター</td>
</tr>
<tr>
<td style="text-align:left;">CheckiO</td>
<td style="text-align:left;">全問解答</td>
</tr>
<tr>
<td style="text-align:left;">8946</td>
<td style="text-align:left;">残3問</td>
</tr>
</tbody>
</table>


<table>
<thead>
<tr>
<th style="text-align:left;">(少なくとも表彰式が)オンサイトの大会</th>
<th style="text-align:left;">(成績)</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left;">RProcon 2013</td>
<td></td>
</tr>
<tr>
<td style="text-align:left;">CodeSCORE 2014</td>
<td style="text-align:left;">本選単独満点・優勝/50</td>
</tr>
<tr>
<td style="text-align:left;">Code Formula 2014</td>
<td style="text-align:left;">本選36位(銀賞)/100</td>
</tr>
<tr>
<td style="text-align:left;">CODE FESTIVAL 2014</td>
<td style="text-align:left;">112位/200、あさプロ Middle23位(銀賞)/100</td>
</tr>
<tr>
<td style="text-align:left;">Data League 2014</td>
<td style="text-align:left;">本選17位/18</td>
</tr>
<tr>
<td style="text-align:left;">Code Runner 2014</td>
<td style="text-align:left;">本選19位/100</td>
</tr>
<tr>
<td style="text-align:left;">CODE FESTIVAL 2015</td>
<td style="text-align:left;">116位/200、あさプロ Easy7位(入賞)/100 Middle77位/70+α</td>
</tr>
<tr>
<td style="text-align:left;">Data League 2015</td>
<td style="text-align:left;">12位/46</td>
</tr>
<tr>
<td style="text-align:left;">Code Runner 2015</td>
<td style="text-align:left;">本選33位/100</td>
</tr>
<tr>
<td style="text-align:left;">CODE FESTIVAL 2016</td>
<td style="text-align:left;">84位/220、Elimination Tournament Round3進出</td>
</tr>
<tr>
<td style="text-align:left;">BattleConferenceU30 2018</td>
<td style="text-align:left;">プログラミングバトル 本選5位/80</td>
</tr>
</tbody>
</table>


<h3>音楽ゲーム</h3>

<table>
<thead>
<tr>
<th style="text-align:left;">ゲーム</th>
<th style="text-align:left;">ID</th>
<th style="text-align:left;">成績</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left;">[TAITO]</td>
<td style="text-align:left;"></td>
<td></td>
</tr>
<tr>
<td style="text-align:left;">グルーヴコースター</td>
<td style="text-align:left;">AC：asn66m4n</td>
<td style="text-align:left;">CS(Android)：約2000位。(機種変更回数の上限を知り絶望)ほぼ引退。<br><a href="https://docs.google.com/spreadsheets/d/1mNx4Ea36CaSmYRqGyX0oRftIBVuUlOVQbtaacQbpYHc/edit?usp=sharing">AC：約1000位。Perfect12、S++69</a> <a href="http://gc.kt-flcl.com/spread/">※</a></td>
</tr>
<tr>
<td style="text-align:left;">[SEGA]</td>
<td style="text-align:left;"></td>
<td></td>
</tr>
<tr>
<td style="text-align:left;">maimai</td>
<td style="text-align:left;"></td>
<td style="text-align:left;"><a href="http://maimai-log.net/cielavenir"><strong>10.70</strong></a></td>
</tr>
<tr>
<td style="text-align:left;">chunithm</td>
<td style="text-align:left;">2037702683463</td>
<td style="text-align:left;"><a href="http://chuniviewer.net/rate?user=ciel"><strong>13.23</strong></a> <a href="https://docs.google.com/spreadsheets/d/1DHLLLaa2odajD5cNmvkpVZBEgVVE2vlrzwsO-fAjhZ0/edit?usp=sharing">_</a></td>
</tr>
<tr>
<td style="text-align:left;">ongeki</td>
<td style="text-align:left;">2033792186403</td>
<td style="text-align:left;"><a href="https://docs.google.com/spreadsheets/d/17EHX57cQ_nE9euPWj-5yRjMIaEABvCzizbU0lzmnKCc/edit?usp=sharing"><strong>13.15</strong></a> <a href="https://github.com/cielavenir/ongeki_sorter">※</a></td>
</tr>
<tr>
<td style="text-align:left;">DIVA</td>
<td style="text-align:left;">CWAAQK79AD</td>
<td></td>
</tr>
<tr>
<td style="text-align:left;">[BNEI]</td>
<td style="text-align:left;"></td>
<td></td>
</tr>
<tr>
<td style="text-align:left;">太鼓の達人</td>
<td style="text-align:left;"><a href="http://donderhiroba.jp/user_profile.php?taiko_no=532629126552">532629126552</a></td>
<td style="text-align:left;">モモイロ初級(苦笑)</td>
</tr>
<tr>
<td style="text-align:left;">シンクロニカ</td>
<td style="text-align:left;"><a href="https://lounge.synchronica.jp/Friend/info/46fade365cce05f806f0445be25bfd761acb2400">46fade365cce05f806f0445be25bfd761acb2400</a> <a href="http://cielavenir.github.io/blog/2015/07/19/synchronica-id/">※</a></td>
<td></td>
</tr>
<tr>
<td style="text-align:left;">[CAPCOM]</td>
<td style="text-align:left;"></td>
<td></td>
</tr>
<tr>
<td style="text-align:left;">crossbeats</td>
<td style="text-align:left;">51486150</td>
<td style="text-align:left;"><a href="http://cxbrank.maplia.jp/view/00652">2018/2 RP1750達成</a></td>
</tr>
<tr>
<td style="text-align:left;">crossbeats REV.</td>
<td style="text-align:left;"><a href="https://rev-srw.ac.capcom.jp/profile/76435928">76435928</a></td>
<td style="text-align:left;"><a href="https://revrank.maplia.jp/sunrise/view/00057">Class III RP1473.03</a></td>
</tr>
<tr>
<td style="text-align:left;">[KONAMI]</td>
<td style="text-align:left;"></td>
<td></td>
</tr>
<tr>
<td style="text-align:left;">jubeat saucer</td>
<td style="text-align:left;">57710108066051</td>
<td style="text-align:left;">3.50</td>
</tr>
<tr>
<td style="text-align:left;">jubeat prop</td>
<td style="text-align:left;">60930017972907</td>
<td style="text-align:left;"><a href="http://cycr.net/jubeat/prop/data.php?id=60930017972907&amp;sort=jubility">Step 15</a></td>
</tr>
<tr>
<td style="text-align:left;">jubeat qubell</td>
<td style="text-align:left;">60930007106643</td>
<td style="text-align:left;"><a href="http://cycr.net/jubeat/qubell/data.php?id=60930007106643&amp;sort=jubility&amp;jblt=1">Stage 5クリア</a></td>
</tr>
<tr>
<td style="text-align:left;">jubeat clan</td>
<td style="text-align:left;">60930002044801</td>
<td style="text-align:left;"><a href="https://cycr.net/jubeat/clan/data.php?id=60930002044801&amp;ex=jubility&amp;sort=d-jubility">7.18</a></td>
</tr>
<tr>
<td style="text-align:left;">jubeat festo</td>
<td style="text-align:left;">60930001629309</td>
<td style="text-align:left;"><a href="https://cycr.net/jubeat/festo/data.php?id=60930001629309&amp;sort=d-pseudolity&amp;ex=pseudolity">_</a></td>
</tr>
<tr>
<td style="text-align:left;">Reflec Beat</td>
<td style="text-align:left;">RB-6564-2108</td>
<td style="text-align:left;">VOLZZA CLASS 8</td>
</tr>
<tr>
<td style="text-align:left;">DDR</td>
<td style="text-align:left;">41242214</td>
<td style="text-align:left;">Enjoy LV 18</td>
</tr>
<tr>
<td style="text-align:left;">弐寺</td>
<td style="text-align:left;">3492-2945</td>
<td style="text-align:left;">(pendual) SP7級、step up ED1</td>
</tr>
<tr>
<td style="text-align:left;">pop'n</td>
<td style="text-align:left;">4392-2014-5346</td>
<td></td>
</tr>
<tr>
<td style="text-align:left;">BeatStream</td>
<td style="text-align:left;"></td>
<td style="text-align:left;">Beast <strong>Rank9</strong></td>
</tr>
<tr>
<td style="text-align:left;">SDVX</td>
<td style="text-align:left;">SV-2080-7171</td>
<td style="text-align:left;">HH 岳翔</td>
</tr>
<tr>
<td style="text-align:left;">museca</td>
<td style="text-align:left;"></td>
<td style="text-align:left;">Curator Rank12</td>
</tr>
<tr>
<td style="text-align:left;">DanceRush</td>
<td style="text-align:left;"></td>
<td style="text-align:left;">FLOWER常駐</td>
</tr>
<tr>
<td style="text-align:left;">GD</td>
<td style="text-align:left;">0009ee6234</td>
<td style="text-align:left;">iOSは1600取って放置、ACは引き継ぎだけした(スキルポイント引き継がれないの…？)</td>
</tr>
<tr>
<td style="text-align:left;">[他]</td>
<td style="text-align:left;"></td>
<td></td>
</tr>
<tr>
<td style="text-align:left;">ちくたくコンチェルト</td>
<td style="text-align:left;">0364886461</td>
<td style="text-align:left;">exc125</td>
</tr>
<tr>
<td style="text-align:left;">はちはち</td>
<td style="text-align:left;"></td>
<td style="text-align:left;">(削除済)</td>
</tr>
</tbody>
</table>


<h3>作ったもの</h3>

<table>
<thead>
<tr>
<th style="text-align:left;"></th>
<th style="text-align:left;">URL</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left;">cTouch</td>
<td style="text-align:left;"><a href="https://github.com/cielavenir/ctouch/">https://github.com/cielavenir/ctouch/</a><br><a href="https://sourceforge.net/projects/ctouch/">https://sourceforge.net/projects/ctouch/</a></td>
</tr>
<tr>
<td style="text-align:left;">picrawler</td>
<td style="text-align:left;"><a href="https://github.com/cielavenir/picrawler/">https://github.com/cielavenir/picrawler/</a></td>
</tr>
<tr>
<td style="text-align:left;">R on iOS</td>
<td style="text-align:left;">(記入時点でrwikiが落ちている…何たること…)<br><a href="http://rwiki.sciviews.org/doku.php?id=getting-started:installation:iphone">http://rwiki.sciviews.org/doku.php?id=getting-started:installation:iphone</a></td>
</tr>
<tr>
<td style="text-align:left;">R on Android</td>
<td style="text-align:left;"><a href="http://rwiki.sciviews.org/doku.php?id=getting-started:installation:android">http://rwiki.sciviews.org/doku.php?id=getting-started:installation:android</a></td>
</tr>
<tr>
<td style="text-align:left;">Google TwoFactor Authenticator on PSP</td>
<td style="text-align:left;"><a href="http://qiita.com/cielavenir/items/a13215069306eeaa24bf">http://qiita.com/cielavenir/items/a13215069306eeaa24bf</a></td>
</tr>
<tr>
<td style="text-align:left;">qinstall</td>
<td style="text-align:left;"><a href="https://github.com/cielavenir/qinstall">https://github.com/cielavenir/qinstall</a></td>
</tr>
<tr>
<td style="text-align:left;">Ruby multisax</td>
<td style="text-align:left;"><a href="https://github.com/cielavenir/ruby-chan">https://github.com/cielavenir/ruby-chan</a><br><a href="https://github.com/cielavenir/mruby-chan">https://github.com/cielavenir/mruby-chan</a></td>
</tr>
<tr>
<td style="text-align:left;">Ruby chan (bidirectional iterator)</td>
<td style="text-align:left;"><a href="https://github.com/cielavenir/multisax">https://github.com/cielavenir/multisax</a></td>
</tr>
<tr>
<td style="text-align:left;">gyao_url_another.rb</td>
<td style="text-align:left;"><a href="https://gist.github.com/cielavenir/a858255c4009ecbb9b67">https://gist.github.com/cielavenir/a858255c4009ecbb9b67</a></td>
</tr>
<tr>
<td style="text-align:left;">install_npapi.sh/install_ppapi.sh (OSX Flash)</td>
<td style="text-align:left;"><a href="https://github.com/cielavenir/flashupdate">https://github.com/cielavenir/flashupdate</a></td>
</tr>
</tbody>
</table>


<h3>発見したバグ</h3>

<ul>
<li>mdbtools

<ul>
<li>ODBCドライバにおいて、(MicrosoftAccessと違い)DBQ引数が取れない</li>
<li>ODBCドライバでマルチバイト文字列が扱えない</li>
</ul>
</li>
<li>ExGame (モバゲーのFlashランタイム)

<ul>
<li>Android Chrome/iOS6で文字が表示できない</li>
</ul>
</li>
<li>RVM

<ul>
<li>古いMac(本来i386だがboot.efiハックでx86_64化が可能なモデル)をMountain Lionにアップデートした時に、カーネルがx86_64に切り替わるが、libyaml.dylibがi386のまま正しく読み込まれず、x86_64用にリビルドもされない</li>
</ul>
</li>
<li>Google Chrome

<ul>
<li>filesystem APIのクオータ要求時に警告バーが出るが、この要求を機能拡張のポップアップ画面内で行うと警告バーが出る代わりに(親ごと)クラッシュする</li>
</ul>
</li>
<li>嫁コレ

<ul>
<li>APIトークンにIMEIをハッシュではなく暗号化したものを用いているため、嫁コレサーバー側で生IMEIを取り出すことができる。一部通信はHTTPで行われているため盗聴も可能である</li>
<li>3.4.xで修正された</li>
</ul>
</li>
<li>東京100ガイド

<ul>
<li>WiMAX環境で使用できない</li>
<li>修正済み</li>
</ul>
</li>
</ul>


<h3>イラスト</h3>

<ul>
<li>deviantART (私のtwitterアイコン原画等。限定公開)</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[atcoder] Various Sushi]]></title>
    <link href="http://cielavenir.github.io/blog/2019/01/26/various-sushi/"/>
    <updated>2019-01-26T17:00:00+09:00</updated>
    <id>http://cielavenir.github.io/blog/2019/01/26/various-sushi</id>
    <content type="html"><![CDATA[<ul>
<li><p><a href="https://atcoder.jp/contests/abc116/tasks/abc116_d">https://atcoder.jp/contests/abc116/tasks/abc116_d</a></p></li>
<li><p>持っている寿司のリストLと種類ごとの寿司の個数Cを用意する</p></li>
<li>おいしさの高い順にソートする</li>
<li>寿司を順番に見ていく。</li>
<li>すでに持っている寿司がK皿であるなら、

<ul>
<li>すでにその種類の寿司を持っているなら無視する。(K皿でない場合は無視してはいけない。)</li>
<li>Lを後ろから見ていき(j)、C[L[j][種類]]&gt;1となっているものを探す。L[j]を取り除く。C[L[j][種類]]を1減らす。</li>
</ul>
</li>
<li>見ている寿司をLに加える</li>
</ul>


<p>このとき、「後ろから見てい」くインデックスjを最初にK-1で初期化したあとは初期化しないようにする。こうすることで、Lの各要素はたかだか1回しか舐められないことになり、十分高速となる。
なおjが0未満になったら「順番に見ていく」こと自体を打ち切ることでプログラムが簡潔になる。</p>

<p>最初以外初期化が必要ないのは、あとから追加された寿司を取り除くことは絶対にないからである。</p>

<p><a href="https://atcoder.jp/contests/abc116/submissions/4076962">https://atcoder.jp/contests/abc116/submissions/4076962</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[yukicoder] クリスマスツリー]]></title>
    <link href="http://cielavenir.github.io/blog/2019/01/04/christmas-tree/"/>
    <updated>2019-01-04T22:00:00+09:00</updated>
    <id>http://cielavenir.github.io/blog/2019/01/04/christmas-tree</id>
    <content type="html"><![CDATA[<ul>
<li><a href="https://yukicoder.me/problems/no/778">https://yukicoder.me/problems/no/778</a></li>
</ul>


<p><code>__gnu_pbds::tree</code>で倒せます。<a href="https://yukicoder.me/problems/no/649/editorial">ここでちょっとQK！の解説</a>を参照ください。</p>

<ul>
<li>答案 <a href="https://yukicoder.me/submissions/308223">https://yukicoder.me/submissions/308223</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[yukicoder] 畳み込みの和]]></title>
    <link href="http://cielavenir.github.io/blog/2018/12/02/convolution-sum/"/>
    <updated>2018-12-02T22:00:00+09:00</updated>
    <id>http://cielavenir.github.io/blog/2018/12/02/convolution-sum</id>
    <content type="html"><![CDATA[<ul>
<li><a href="https://yukicoder.me/problems/no/754">https://yukicoder.me/problems/no/754</a></li>
</ul>


<p>問題文のサンプル１はこういう意味である。</p>

<ul>
<li><code>3 + 2x + 2x2 + ...</code> * <code>7 + 0x + 4x2 + ...</code> = <code>21 + 14x + 36x2 + ...</code>となる(2乗まで)。この係数の和(<code>21+14+36</code>)は61である。</li>
</ul>


<p>つまり、(3+2+2)*7 + (3+2)*0 + (3)*4を計算すれば良いことになる。各項の左側について最初に和を取り、後ろから順番に引いていけば良い。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[yukicoder] チャンパーノウン定数]]></title>
    <link href="http://cielavenir.github.io/blog/2018/12/02/champernowne/"/>
    <updated>2018-12-02T04:00:00+09:00</updated>
    <id>http://cielavenir.github.io/blog/2018/12/02/champernowne</id>
    <content type="html"><![CDATA[<ul>
<li><a href="https://yukicoder.me/problems/no/756">https://yukicoder.me/problems/no/756</a></li>
<li><a href="https://yukicoder.me/problems/no/757">https://yukicoder.me/problems/no/757</a></li>
</ul>


<p>チャンパーノウン定数自体は既出のネタ(例：<a href="https://github.com/cielavenir/procon/blob/f28284db31ff655e0ed4a9ca8241aa9d015aad75/euler/tyama_euler40.c">Project Euler 40</a>)なので、基本的には以下の方針で良い(CodeIQコード銀行「n番目の数字は？」(<a href="https://github.com/cielavenir/codeiq_solutions/tree/master/code_teller/q983">答案</a>)のコメントより)。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>例えば1から999までは以下の様な区間に分割できる。
</span><span class='line'>1 + 0〜8
</span><span class='line'>10 + 0〜89
</span><span class='line'>100 + 0〜899
</span><span class='line'>各区間に含まれる数字の個数は9、180、2700となる。
</span><span class='line'>これを1*1*9、2*10*9、3*100*9と表現する(digits*expbase*9)。
</span><span class='line'>入力値が入る区間が決まったら、それより下の和を入力値から引き(nとする)、
</span><span class='line'>(digits)桁の数を並べた中のn桁目を求めれば良い。</span></code></pre></td></tr></table></div></figure>


<p>これで、ビルトイン多倍長整数を使えば<code>10**1000</code>程度まではACできる。ただし、今回は入力が非常に大きいため、下位から順番に処理すると多倍長演算が容易にTLEを招いてしまう(解答例の<code>if false</code>の一部)。
まず、この<code>1*1*9 + 2*10*9 + 3*100*9 + ...</code>を高速に求めることを考える。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Sn   = 1*1*9 2*10*9 3*100*9 4*1000*9
</span><span class='line'>10Sn =       1*10*9 2*100*9 3*1000*9  4*10000*9
</span><span class='line'>-9Sn = 1*1*9 1*10*9 1*100*9 1*1000*9 -4*10000*9
</span><span class='line'>-9Sn = (10**4-1)                     -4*10000*9</span></code></pre></td></tr></table></div></figure>


<p>といった変形により、<code>Si = i*10**i - (10**i-1)/9</code>と定式化できる。これを用いて、digitsを2分探索するか上位から探索するかする。これでTLEを回避できる。</p>

<ul>
<li>Crystal <a href="https://yukicoder.me/submissions/300755">https://yukicoder.me/submissions/300755</a></li>
<li>Ruby <a href="https://yukicoder.me/submissions/300934">https://yukicoder.me/submissions/300934</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[DanceRushでFLOWERを解禁するまで]]></title>
    <link href="http://cielavenir.github.io/blog/2018/11/29/dancerush-flower/"/>
    <updated>2018-11-29T00:00:00+09:00</updated>
    <id>http://cielavenir.github.io/blog/2018/11/29/dancerush-flower</id>
    <content type="html"><![CDATA[<h2>2018/3/23</h2>

<p>確か初日にプレイしたはず。当初はLv5ですら星5(90点)取れなかったんですよ…</p>

<h2>2018/4/2*</h2>

<p>Extra Stage専用楽曲、完走したら解禁可能とかえぐすぎませんか…全然できないんですが…当時はDRSの反応についてよくわかってなかった(反応が悪いとすら思ったこともあります)。</p>

<h2>2018/6/13</h2>

<p>アンロックを進める中で、ようやくImpress易をクリアした(易を完走できれば解禁可能になり普も普通にプレイ可能になる)。
今でこそLv8の大半の曲は余裕だが、当時はLv7はかなりいっぱいいっぱいだった。がんばったわし。これでFLOWER(易がLv9)に挑戦可能になった。好きな曲だからね。
<a href="https://twitter.com/cielavenir/status/1006747633925287936">https://twitter.com/cielavenir/status/1006747633925287936</a></p>

<h2>2018/7/19</h2>

<p>この頃は音源を聴き込んでおり、77点に乗せる。しかし、この記録が破られることは3ヶ月間ないのであった…
<a href="https://twitter.com/cielavenir/status/1019926097524244480">https://twitter.com/cielavenir/status/1019926097524244480</a></p>

<h2>2018/10/24</h2>

<p>あきらめつつも、全曲の解禁作業が終わり、全譜面星5埋めが佳境に差し掛かった頃。
1曲目：Mandrake普(Lv8)。リズムの刻み方が独特で、Tap/Downが8分で交互に来る箇所がある関係上個人的にLv8最難だと思う。慌てずに着実に踏むことを意識して星5が取れた。
2曲目：Garuda易(Lv9)。いつもほとんど取れない8小節があるんですが、おちついて取ることができた。これも星5。
3曲目：調子が良い気がしたので、FLOWER易行くことにした。慌てずにステップを踏み、アウトロまでlife3残した。素晴らしい。が、ここで力が抜けてミスを出し残り1、最後の左足フリックは苦し紛れに入力できました。本当に良かった。もしこの入力ミスってたらどうなっていたの…。
しかもBad10とか。Tapのミスは9個なので、Downを1個落としていたのかな…。まあアンロックするのが重要なので。いいんじゃないでしょうか&ndash;;;;なにはともあれお疲れ様でした。
<a href="http://twitter.com/cielavenir/status/1055086630783016960">http://twitter.com/cielavenir/status/1055086630783016960</a></p>

<h2>2018/11/29</h2>

<p>FLOWERを解禁した私ならKACでもそこそこ戦えるはずだ！<del>さあ予選行くぜ</del>無理よぅこれorz
<a href="https://twitter.com/cielavenir/status/1068135718751326208">https://twitter.com/cielavenir/status/1068135718751326208</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[未完の記事の存在意義について]]></title>
    <link href="http://cielavenir.github.io/blog/2018/10/30/wip-articles/"/>
    <updated>2018-10-30T22:45:00+09:00</updated>
    <id>http://cielavenir.github.io/blog/2018/10/30/wip-articles</id>
    <content type="html"><![CDATA[<p><a href="https://qiita.com/HiromuMasuda0228/items/a71dea7ef4d77a30b118">こちら</a>や<a href="https://qiita.com/akira_/items/c8881dcde93d4cb035c7">こちら</a>で触れられているとおり、エンジニアにとってアウトプットは重要である。</p>

<p>問題になるのは記事の質であろう。質をいつも保つことは難しい場合もあると思う。
私の場合は、例えば<a href="https://qiita.com/cielavenir/items/683ebb10fa8083b3e6b4">WIP 意図せぬMerge Hellを防ぐ</a>が未完のまま公開された記事の例である。[^1]</p>

<p>そういう場合、少なくとも自分の中で形にするまでは公開すべきでないという<a href="https://twitter.com/angel_p_57/status/1049597665804091392">意見も聞く</a>が、私としては、間違った情報でない限りは公開しても良いと思う。特に少ない情報の場合は断片だけでも助かる人はいると思うし、そこから話が広がる可能性もあるからだ。</p>

<p>[^1] 私事だが、(弊社にはモジュールのリポジトリの他にシステムとしての管理リポジトリがあるのだが)管理リポジトリに私の個人ブランチが3個も存在している。はっきり言って糞だが、解決策がまだ見つかっていない以上しかたがない。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[yukicoder] Careful Engineer]]></title>
    <link href="http://cielavenir.github.io/blog/2018/10/08/careful-engineer/"/>
    <updated>2018-10-08T11:00:00+09:00</updated>
    <id>http://cielavenir.github.io/blog/2018/10/08/careful-engineer</id>
    <content type="html"><![CDATA[<p><a href="https://yukicoder.me/problems/no/734">https://yukicoder.me/problems/no/734</a></p>

<h2>解法</h2>

<p>本文を噛み砕くと、<code>60ax&gt;bx+3600c</code>なので、「直線 <code>y=(60a-b)x-3600c</code> がx>0でx軸と交わるx座標のceil」を求めれば良いことになります。これは傾きが正の場合のみ成立します。</p>

<h2>不等式の評価</h2>

<p>上にceilと書かれていますが、プログラムを書く場合と書かない場合の合計時間が等しくて良いなら<code>ceil</code>、書く場合の合計時間が小さくならなければならないなら<code>floor+1</code>です。条件設定って難しいorz</p>

<h2>コメンタリー</h2>

<p><code>(60a-b)x&gt;3600c</code>について60a-bで両辺割ったときの不等号の向きって60a-bの符号で違ったんだっけって少し混乱した^^;;</p>

<h2>コメンタリー2</h2>

<p>「不等式の評価」項はコンテスト後に追記したものです。ご迷惑おかけしました(このために星1.5に上がることとなりました)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[2年前にmaimaiのレーティングが下がったこと]]></title>
    <link href="http://cielavenir.github.io/blog/2018/09/30/maimai/"/>
    <updated>2018-09-30T23:30:00+09:00</updated>
    <id>http://cielavenir.github.io/blog/2018/09/30/maimai</id>
    <content type="html"><![CDATA[<h2>背景等</h2>

<ul>
<li>紫稼働時に私のレーティングは9.74から9.22に下落することとなった。これはかなり私のモチベーションを削ることとなった(笑)</li>
<li>それからというもの長らく遠ざかっていたが。オンゲキやチュウニズムのレート算出プログラムを書いたので、せっかくなのでmaimaiのプログラムも書くことにした(利用権延長するために今日久々にプレイした)。内部Lvは未入力だが傾向はわかるはずだ。</li>
<li>で、できたものが <a href="https://docs.google.com/spreadsheets/d/1EcodNpPUgAtNFboMd1l-8fo9TJRYsbx8Ho-vVJV-5Fs/edit?usp=sharing">https://docs.google.com/spreadsheets/d/1EcodNpPUgAtNFboMd1l-8fo9TJRYsbx8Ho-vVJV-5Fs/edit?usp=sharing</a> だ。</li>
</ul>


<h2>考察</h2>

<ul>
<li>実はレートが落ちた主要因はS-AAAの壁ではなく、history枠の存在であることが判明した。</li>
<li>現在のhistory枠平均は3.36であり、これはざっくりと到達可能レーティングの95%程度しかいきませんよということを意味する。全体レーティングの0.5は大きい数字である。</li>
<li>今はまだ119曲しかレート7.5に到達していないが、これを520曲で行えばレーティングは9.6程度まで回復する。</li>
<li>ただ、挑戦する難易度としては、Lv11以上に挑戦するか、7〜8をSSにするかが良いようだ。Masterを解禁するには9をSにする必要も生じるだろうが、効率がよくなさそうだ。キャンペーンでMasterが期間限定解禁されているタイミングを狙ったほうが得策かもしれない。</li>
</ul>


<h2>結論</h2>

<ul>
<li>未プレイ291曲…？ちょっとこれはきついですね…。結果的にはますますモチベを削ることになったようですorz</li>
<li>全埋めする以外に計る方法はなかったのでしょうか…。</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[こどふぇす過去開催情報]]></title>
    <link href="http://cielavenir.github.io/blog/2018/09/23/codefes/"/>
    <updated>2018-09-23T00:30:00+09:00</updated>
    <id>http://cielavenir.github.io/blog/2018/09/23/codefes</id>
    <content type="html"><![CDATA[<p>備忘録です(なおTHANKSの会場はこれまですべてコワーキング・スペースMONOです)</p>

<table>
<thead>
<tr>
<th style="text-align:left;">年</th>
<th style="text-align:left;">予選</th>
<th style="text-align:left;">本選会場</th>
<th style="text-align:left;">THANKS</th>
<th style="text-align:left;">決勝会場</th>
<th style="text-align:left;">開催セット</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left;">2013</td>
<td style="text-align:left;">&mdash;</td>
<td style="text-align:left;">コワーキング・スペースMONO(お台場)</td>
<td style="text-align:left;">&mdash;</td>
<td style="text-align:left;">マサチューセッツ工科大学</td>
<td style="text-align:left;">本戦のみ(rproconとして開催)</td>
</tr>
<tr>
<td style="text-align:left;">2014</td>
<td style="text-align:left;">2回</td>
<td style="text-align:left;">3331 Arts Chiyoda(秋葉原)</td>
<td style="text-align:left;">2回</td>
<td style="text-align:left;">上海交通大学</td>
<td style="text-align:left;">本戦、エキシビジョン、あさプロ、リレー</td>
</tr>
<tr>
<td style="text-align:left;">2015</td>
<td style="text-align:left;">2回</td>
<td style="text-align:left;">泉ガーデンギャラリー(六本木)</td>
<td style="text-align:left;">1回</td>
<td style="text-align:left;">沖縄科学技術大学院大学</td>
<td style="text-align:left;">本戦、エキシビジョン、あさプロ、リレー</td>
</tr>
<tr>
<td style="text-align:left;">2016</td>
<td style="text-align:left;">3回</td>
<td style="text-align:left;">ベルサール汐留</td>
<td style="text-align:left;">&mdash;</td>
<td style="text-align:left;">マホロバ・マインズ三浦</td>
<td style="text-align:left;">本戦、エキシビジョン、トーナメント、リレー</td>
</tr>
<tr>
<td style="text-align:left;">2017</td>
<td style="text-align:left;">3回</td>
<td style="text-align:left;">秋葉原UDX</td>
<td style="text-align:left;">1回</td>
<td style="text-align:left;">&mdash;</td>
<td style="text-align:left;">本戦、エキシビジョン、トーナメント、リレー</td>
</tr>
<tr>
<td style="text-align:left;">2018</td>
<td style="text-align:left;">2回</td>
<td style="text-align:left;">秋葉原UDX</td>
<td style="text-align:left;">1回</td>
<td style="text-align:left;">&mdash;</td>
<td style="text-align:left;">本戦、リレー</td>
</tr>
</tbody>
</table>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SHV31]]></title>
    <link href="http://cielavenir.github.io/blog/2018/08/16/shv31/"/>
    <updated>2018-08-16T23:59:00+09:00</updated>
    <id>http://cielavenir.github.io/blog/2018/08/16/shv31</id>
    <content type="html"><![CDATA[<p>事情により必要になるかもなので貼り付けとく</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Processor    : ARMv7 Processor rev 1 (v7l)
</span><span class='line'>processor : 0
</span><span class='line'>BogoMIPS  : 38.40
</span><span class='line'>
</span><span class='line'>processor : 1
</span><span class='line'>BogoMIPS  : 38.40
</span><span class='line'>
</span><span class='line'>processor : 2
</span><span class='line'>BogoMIPS  : 38.40
</span><span class='line'>
</span><span class='line'>processor : 3
</span><span class='line'>BogoMIPS  : 38.40
</span><span class='line'>
</span><span class='line'>Features  : swp half thumb fastmult vfp edsp neon vfpv3 tls vfpv4 idiva idivt 
</span><span class='line'>CPU implementer   : 0x51
</span><span class='line'>CPU architecture: 7
</span><span class='line'>CPU variant   : 0x2
</span><span class='line'>CPU part  : 0x06f
</span><span class='line'>CPU revision  : 1
</span><span class='line'>
</span><span class='line'>Hardware  : Qualcomm MSM8974PRO-AB</span></code></pre></td></tr></table></div></figure>


<p>SHV38もついでに</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>processor    : 0
</span><span class='line'>model name    : ARMv7 Processor rev 4 (v7l)
</span><span class='line'>BogoMIPS  : 38.40
</span><span class='line'>Features  : swp half thumb fastmult vfp edsp neon vfpv3 tls vfpv4 idiva idivt vfpd32 evtstrm 
</span><span class='line'>CPU implementer   : 0x41
</span><span class='line'>CPU architecture: 7
</span><span class='line'>CPU variant   : 0x0
</span><span class='line'>CPU part  : 0xd03
</span><span class='line'>CPU revision  : 4
</span><span class='line'>
</span><span class='line'>processor : 1
</span><span class='line'>model name    : ARMv7 Processor rev 4 (v7l)
</span><span class='line'>BogoMIPS  : 38.40
</span><span class='line'>Features  : swp half thumb fastmult vfp edsp neon vfpv3 tls vfpv4 idiva idivt vfpd32 evtstrm 
</span><span class='line'>CPU implementer   : 0x41
</span><span class='line'>CPU architecture: 7
</span><span class='line'>CPU variant   : 0x0
</span><span class='line'>CPU part  : 0xd03
</span><span class='line'>CPU revision  : 4
</span><span class='line'>
</span><span class='line'>processor : 2
</span><span class='line'>model name    : ARMv7 Processor rev 4 (v7l)
</span><span class='line'>BogoMIPS  : 38.40
</span><span class='line'>Features  : swp half thumb fastmult vfp edsp neon vfpv3 tls vfpv4 idiva idivt vfpd32 evtstrm 
</span><span class='line'>CPU implementer   : 0x41
</span><span class='line'>CPU architecture: 7
</span><span class='line'>CPU variant   : 0x0
</span><span class='line'>CPU part  : 0xd03
</span><span class='line'>CPU revision  : 4
</span><span class='line'>
</span><span class='line'>processor : 3
</span><span class='line'>model name    : ARMv7 Processor rev 4 (v7l)
</span><span class='line'>BogoMIPS  : 38.40
</span><span class='line'>Features  : swp half thumb fastmult vfp edsp neon vfpv3 tls vfpv4 idiva idivt vfpd32 evtstrm 
</span><span class='line'>CPU implementer   : 0x41
</span><span class='line'>CPU architecture: 7
</span><span class='line'>CPU variant   : 0x0
</span><span class='line'>CPU part  : 0xd03
</span><span class='line'>CPU revision  : 4
</span><span class='line'>
</span><span class='line'>processor : 4
</span><span class='line'>model name    : ARMv7 Processor rev 4 (v7l)
</span><span class='line'>BogoMIPS  : 38.40
</span><span class='line'>Features  : swp half thumb fastmult vfp edsp neon vfpv3 tls vfpv4 idiva idivt vfpd32 evtstrm 
</span><span class='line'>CPU implementer   : 0x41
</span><span class='line'>CPU architecture: 7
</span><span class='line'>CPU variant   : 0x0
</span><span class='line'>CPU part  : 0xd03
</span><span class='line'>CPU revision  : 4
</span><span class='line'>
</span><span class='line'>processor : 5
</span><span class='line'>model name    : ARMv7 Processor rev 4 (v7l)
</span><span class='line'>BogoMIPS  : 38.40
</span><span class='line'>Features  : swp half thumb fastmult vfp edsp neon vfpv3 tls vfpv4 idiva idivt vfpd32 evtstrm 
</span><span class='line'>CPU implementer   : 0x41
</span><span class='line'>CPU architecture: 7
</span><span class='line'>CPU variant   : 0x0
</span><span class='line'>CPU part  : 0xd03
</span><span class='line'>CPU revision  : 4
</span><span class='line'>
</span><span class='line'>processor : 6
</span><span class='line'>model name    : ARMv7 Processor rev 4 (v7l)
</span><span class='line'>BogoMIPS  : 38.40
</span><span class='line'>Features  : swp half thumb fastmult vfp edsp neon vfpv3 tls vfpv4 idiva idivt vfpd32 evtstrm 
</span><span class='line'>CPU implementer   : 0x41
</span><span class='line'>CPU architecture: 7
</span><span class='line'>CPU variant   : 0x0
</span><span class='line'>CPU part  : 0xd03
</span><span class='line'>CPU revision  : 4
</span><span class='line'>
</span><span class='line'>processor : 7
</span><span class='line'>model name    : ARMv7 Processor rev 4 (v7l)
</span><span class='line'>BogoMIPS  : 38.40
</span><span class='line'>Features  : swp half thumb fastmult vfp edsp neon vfpv3 tls vfpv4 idiva idivt vfpd32 evtstrm 
</span><span class='line'>CPU implementer   : 0x41
</span><span class='line'>CPU architecture: 7
</span><span class='line'>CPU variant   : 0x0
</span><span class='line'>CPU part  : 0xd03
</span><span class='line'>CPU revision  : 4
</span><span class='line'>
</span><span class='line'>Hardware  : Qualcomm Technologies, Inc MSM8952</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[yukicoder] Die tertia]]></title>
    <link href="http://cielavenir.github.io/blog/2018/08/07/die-tertia/"/>
    <updated>2018-08-07T01:00:00+09:00</updated>
    <id>http://cielavenir.github.io/blog/2018/08/07/die-tertia</id>
    <content type="html"><![CDATA[<p><a href="https://yukicoder.me/problems/no/721">https://yukicoder.me/problems/no/721</a></p>

<h2>解法</h2>

<ul>
<li>mktimeとlocaltime_rを使います。</li>
<li>C <a href="https://yukicoder.me/submissions/277099">https://yukicoder.me/submissions/277099</a></li>
</ul>


<h2>余談</h2>

<ul>
<li>AOJ0261 Mayan Crucial Prediction</li>
<li><a href="http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=0261">http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=0261</a></li>
<li>も同様のやり方で解けます。</li>
<li>(64bit限定です。初期のAOJは32bitだったため通らないのですがご愛嬌)</li>
<li><a href="http://judge.u-aizu.ac.jp/onlinejudge/review.jsp?rid=585882">http://judge.u-aizu.ac.jp/onlinejudge/review.jsp?rid=585882</a></li>
</ul>


<h2>余談2</h2>

<p>テスター当時はRuby版しか答案作ってませんでしたが解説のためにC版を急遽作りました。。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mujin Programming Challenge 2018 参加記]]></title>
    <link href="http://cielavenir.github.io/blog/2018/08/05/mujin-2018/"/>
    <updated>2018-08-05T11:26:00+09:00</updated>
    <id>http://cielavenir.github.io/blog/2018/08/05/mujin-2018</id>
    <content type="html"><![CDATA[<p>参加記というより反省会(あとで突っ込まれないように。。)</p>

<h2>昼</h2>

<ul>
<li>ポケモンGo、フリーザーを25体撃破しLv37にした。あづい。</li>
</ul>


<h2>コンテスト</h2>

<table>
<thead>
<tr>
<th style="text-align:left;">時間</th>
<th style="text-align:left;">言語</th>
<th style="text-align:left;">問題(A-H)</th>
<th style="text-align:left;">コメント</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left;">0:01</td>
<td style="text-align:left;">Ruby</td>
<td style="text-align:left;">A</td>
<td style="text-align:left;"><strong>AC</strong> 時間がかかったのはペナルティに気をつけるためです。</td>
</tr>
<tr>
<td style="text-align:left;">0:03</td>
<td style="text-align:left;">Ruby</td>
<td style="text-align:left;">B</td>
<td style="text-align:left;"><strong>AC</strong></td>
</tr>
<tr>
<td style="text-align:left;">0:18</td>
<td style="text-align:left;">Ruby</td>
<td style="text-align:left;">D</td>
<td style="text-align:left;">愚直な循環検出を書いたが、実行間に合わず。</td>
</tr>
<tr>
<td style="text-align:left;">0:29</td>
<td style="text-align:left;">C++</td>
<td style="text-align:left;">D</td>
<td style="text-align:left;">C++に移植したがTLE 焦る。</td>
</tr>
<tr>
<td style="text-align:left;">0:46</td>
<td style="text-align:left;">Ruby</td>
<td style="text-align:left;">C</td>
<td style="text-align:left;">下と右のマス数を掛け算。TLE (解説の方針と同じなんです)</td>
</tr>
<tr>
<td style="text-align:left;">1:12</td>
<td style="text-align:left;">Ruby/C++</td>
<td style="text-align:left;">D</td>
<td style="text-align:left;">申し訳ありません。C++の実行結果をzlib圧縮して埋め込みました。<strong>AC</strong></td>
</tr>
<tr>
<td style="text-align:left;">1:17</td>
<td style="text-align:left;">Crystal</td>
<td style="text-align:left;">C</td>
<td style="text-align:left;">TLE</td>
</tr>
<tr>
<td style="text-align:left;">1:35</td>
<td style="text-align:left;">C++</td>
<td style="text-align:left;">C</td>
<td style="text-align:left;"><strong>AC</strong> ところでvector transposeをライブラリとして持っていたから助かりましたが、持っていなかったらどうなっていたんでしょう。ぞっとします。</td>
</tr>
<tr>
<td style="text-align:left;">1:59</td>
<td style="text-align:left;">Ruby</td>
<td style="text-align:left;">E</td>
<td style="text-align:left;">コストテーブルを作って最短路という方針は思いつきましたが間に合いませんでした。heapqは以前私がAOJにてheapq.pyを移植したのをコピペしました。<br>(あとで確認したらRubyでは間に合わない感じでしたのでどうせ無駄でしたね…)</td>
</tr>
<tr>
<td style="text-align:left;">2:00</td>
<td style="text-align:left;"></td>
<td style="text-align:left;"></td>
<td style="text-align:left;">264位でした。さすがに雑魚すぎました…</td>
</tr>
</tbody>
</table>


<h2>ライブ</h2>

<p>拝見しました。山内さんちょくだいさんお疲れ様でした。</p>

<h2>E問題その後</h2>

<table>
<thead>
<tr>
<th style="text-align:left;">言語</th>
<th style="text-align:left;">コメント</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left;">Ruby</td>
<td style="text-align:left;">遷移式が少し間違っていて、<code>1 2 2 LU SG</code>が1ではなく3になっていたorz<br>まあサンプルはそこまで強くなくても文句言えないけど…</td>
</tr>
<tr>
<td style="text-align:left;">Ruby</td>
<td style="text-align:left;">同じ行にSとGがあるときGを検出できていなかったorz</td>
</tr>
<tr>
<td style="text-align:left;">Crystal</td>
<td style="text-align:left;">TLE</td>
</tr>
<tr>
<td style="text-align:left;">Python</td>
<td style="text-align:left;">TLE</td>
</tr>
<tr>
<td style="text-align:left;">C++</td>
<td style="text-align:left;"><strong>AC</strong></td>
</tr>
</tbody>
</table>


<p>なんでCrystalだといかんのだ。。</p>

<h2>まとめ</h2>

<ul>
<li>実装遅いのを()</li>
<li>Crystalを&ndash;releaseでコンパイルしてほしい</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[AOJ] 如何に汝を満足せしめむ？ いざ数え上げむ…]]></title>
    <link href="http://cielavenir.github.io/blog/2018/07/15/how-can-i-satisfy-thee/"/>
    <updated>2018-07-15T09:00:00+09:00</updated>
    <id>http://cielavenir.github.io/blog/2018/07/15/how-can-i-satisfy-thee</id>
    <content type="html"><![CDATA[<p><a href="http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=1155">http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=1155</a></p>

<p>構文解析とは何だったのか(2回目)</p>

<h2>解法</h2>

<ul>
<li>Ternaryクラスを用意してevalに投げ込みます。</li>
</ul>


<h2>解答例</h2>

<ul>
<li>Ruby <a href="http://judge.u-aizu.ac.jp/onlinejudge/review.jsp?rid=3027477">http://judge.u-aizu.ac.jp/onlinejudge/review.jsp?rid=3027477</a></li>
<li>Python(2/3) <a href="http://judge.u-aizu.ac.jp/onlinejudge/review.jsp?rid=3027488">http://judge.u-aizu.ac.jp/onlinejudge/review.jsp?rid=3027488</a></li>
</ul>


<h2>感想</h2>

<ul>
<li><a href="http://cielavenir.github.io/blog/2018/07/05/proof-of-knowledge/">知識の証明</a>の時点ではPythonが公式に使えるようになっていたので、下手な構文解析を出すと言語機能で突破されかねませんよって話。この問題は当時Pythonが使えなかったから許されたんだと思う。</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[AOJ] 知識の証明]]></title>
    <link href="http://cielavenir.github.io/blog/2018/07/05/proof-of-knowledge/"/>
    <updated>2018-07-05T01:50:00+09:00</updated>
    <id>http://cielavenir.github.io/blog/2018/07/05/proof-of-knowledge</id>
    <content type="html"><![CDATA[<p><a href="http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=2883">http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=2883</a></p>

<p>構文解析とは何だったのか。</p>

<h2>解法</h2>

<ul>
<li>例として<code>[+c[+a[^bd]]]</code>を<code>O[c][O[a][X[b][d]]]</code>に変換します。</li>
<li>O、A、Xはそれぞれ2引数を取りor、and、xorするProcで、カリー化されています。</li>
<li>変換された文字列は正しいプログラムなので、evalでバッチリです＾＾</li>
</ul>


<h2>Python</h2>

<ul>
<li>Pythonはfunctools.partialはありますが演算子の形でカリー化することができないので、自前で関数をネストしてカリー化を行います。</li>
<li>なおPythonはRubyのProcで必要な特別扱いが必要ないので、括弧は丸括弧を使います。</li>
<li>(ところで答案内のtranslateのインポート方法に癖がありますが、Py2/3対応にするにはやむを得ないものです。)</li>
</ul>


<h2>解答例</h2>

<ul>
<li>Ruby <a href="http://judge.u-aizu.ac.jp/onlinejudge/review.jsp?rid=2998020">http://judge.u-aizu.ac.jp/onlinejudge/review.jsp?rid=2998020</a></li>
<li>Python(2/3) <a href="http://judge.u-aizu.ac.jp/onlinejudge/review.jsp?rid=2998054">http://judge.u-aizu.ac.jp/onlinejudge/review.jsp?rid=2998054</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[yukicoder] 中央値を求めよ LIMITED]]></title>
    <link href="http://cielavenir.github.io/blog/2018/06/18/median/"/>
    <updated>2018-06-18T00:30:00+09:00</updated>
    <id>http://cielavenir.github.io/blog/2018/06/18/median</id>
    <content type="html"><![CDATA[<p><a href="https://yukicoder.me/problems/no/702">https://yukicoder.me/problems/no/702</a></p>

<h2>解法</h2>

<ul>
<li>一様分布なので、中央付近以外は捨てる方法で解けます。</li>
<li>ただしqsortはstd::sortよりメモリを若干多く使うため、C言語で解く場合は閾値に注意する必要があります。</li>
</ul>


<h2>解答例</h2>

<ul>
<li>C <a href="https://yukicoder.me/submissions/266771">https://yukicoder.me/submissions/266771</a></li>
<li>C++ <a href="https://yukicoder.me/submissions/266775">https://yukicoder.me/submissions/266775</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[yukicoder] ペアでチームを作ろう]]></title>
    <link href="http://cielavenir.github.io/blog/2018/06/10/pair-team/"/>
    <updated>2018-06-10T02:00:00+09:00</updated>
    <id>http://cielavenir.github.io/blog/2018/06/10/pair-team</id>
    <content type="html"><![CDATA[<p><a href="https://yukicoder.me/problems/no/698">https://yukicoder.me/problems/no/698</a></p>

<h2>解法</h2>

<ul>
<li>bitDPを使うのが一般的な解法ですが、計算量が増えるものの、next_partial_permutationを使うこともできます。</li>
<li>標準関数ではありませんが、<code>next_permutation(v.begin(), v.end())</code>する直前に<code>reverse(v.begin()+middle, v.end())</code>するだけなので、(next_combinationと違って)インラインで組み込むのは簡単です。</li>
<li><code>v.begin()</code>から<code>v.begin()+middle</code>までを(<code>middle P size</code>の)部分順列として使います。</li>
<li>ただし、ループが回るたびに、<code>v.begin()+middle</code>から<code>v.end()</code>まではソートされていることが保証されています。この性質を利用することで、vからsize-middle個選んでから残りのmiddle個を総当たりしたのと同じことになるのです。</li>
<li>ループ回数は14P7 = 17297280回です。</li>
</ul>


<h2>解答例</h2>

<ul>
<li>C++ <a href="https://yukicoder.me/submissions/264420">https://yukicoder.me/submissions/264420</a></li>
<li>cLay <a href="https://yukicoder.me/submissions/264422">https://yukicoder.me/submissions/264422</a></li>
</ul>


<h2>チームを作ろう２</h2>

<ul>
<li>この解法であればこちらもループ内の加算とxorを入れ替えるだけで容易に解くことができます。</li>
<li>cLay <a href="https://yukicoder.me/submissions/265093">https://yukicoder.me/submissions/265093</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[atcoder] Five, Five Everywhere]]></title>
    <link href="http://cielavenir.github.io/blog/2018/05/06/five/"/>
    <updated>2018-05-06T02:00:00+09:00</updated>
    <id>http://cielavenir.github.io/blog/2018/05/06/five</id>
    <content type="html"><![CDATA[<p><a href="https://abc096.contest.atcoder.jp/tasks/abc096_d">https://abc096.contest.atcoder.jp/tasks/abc096_d</a></p>

<h2>出力</h2>

<ul>
<li>AGC001以降のAtCoderでは、区切りは空白区切り改行区切りのどちらでも構いません(trailing spaceも可)。</li>
<li>よって<code>puts arr*' '</code>は<code>puts arr</code>、ひいては<code>p *arr</code>でokです。以下では後者を使います。</li>
</ul>


<h2>解法</h2>

<ul>
<li>5で割ってあまりが1になる整数の集合から5個選んだ合計は5で割り切れます。</li>
<li>素数を列挙していき、1の位が1であるものをN個拾えば良いです。

<ul>
<li>実際には1の位は(統一していれば)1,3,7,9のいずれも大丈夫です。以下の答案では9を採用しています。</li>
<li>64bytes</li>
</ul>
</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="nb">require</span><span class="s1">&#39;prime&#39;</span><span class="p">;</span><span class="nb">p</span> <span class="o">*</span><span class="no">Prime</span><span class="o">.</span><span class="n">each</span><span class="p">(</span><span class="mi">1499</span><span class="p">)</span><span class="o">.</span><span class="n">select</span><span class="p">{</span><span class="o">|</span><span class="n">e</span><span class="o">|</span><span class="n">e</span><span class="o">%</span><span class="mi">5</span><span class="o">&gt;</span><span class="mi">3</span><span class="p">}</span><span class="o">[</span><span class="mi">0</span><span class="p">,</span><span class="nb">gets</span><span class="o">.</span><span class="n">to_i</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>1の位がX(奇数、以下の答案では3)である整数を全て列挙し、素数をN個拾うようにすると以下のようになります。</li>
<li>62bytes</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="nb">require</span><span class="s1">&#39;prime&#39;</span><span class="p">;</span><span class="nb">p</span> <span class="o">*</span><span class="mi">3</span><span class="o">.</span><span class="n">step</span><span class="p">(</span><span class="mi">1499</span><span class="p">,</span><span class="mi">5</span><span class="p">)</span><span class="o">.</span><span class="n">select</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:prime?</span><span class="p">)</span><span class="o">[</span><span class="mi">0</span><span class="p">,</span><span class="nb">gets</span><span class="o">.</span><span class="n">to_i</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<h3>フェルマーテスト</h3>

<ul>
<li><code>require'prime'</code>をカットすることで字数の節約にはなりますが、<code>Integer#prime?</code>は使えなくなるので、別の素数判定が必要になります。そこで、フェルマーテストを用います。</li>
<li>[1]に載っている式、<code>2**i%i==2</code>を使います。なおこの素数判定の場合stepの初期値を1にすることはできなくなるので注意してください(3,7,9は可)。</li>
<li>51bytes</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="nb">p</span> <span class="o">*</span><span class="mi">3</span><span class="o">.</span><span class="n">step</span><span class="p">(</span><span class="mi">1499</span><span class="p">,</span><span class="mi">5</span><span class="p">)</span><span class="o">.</span><span class="n">select</span><span class="p">{</span><span class="o">|</span><span class="n">i</span><span class="o">|</span><span class="mi">2</span><span class="o">**</span><span class="n">i</span><span class="o">%</span><span class="n">i</span><span class="o">==</span><span class="mi">2</span><span class="p">}</span><span class="o">[</span><span class="mi">0</span><span class="p">,</span><span class="nb">gets</span><span class="o">.</span><span class="n">to_i</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<h3>redo</h3>

<ul>
<li>[2]では、ループカウンタをインクリメントしないよう、条件を満たさない場合はredoを使っています。これはPerlだけでなくRubyでも有用なテクニックです。</li>
<li><a href="https://abc096.contest.atcoder.jp/submissions/2470406">https://abc096.contest.atcoder.jp/submissions/2470406</a> (最終答案)</li>
<li>46bytes</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="n">i</span><span class="o">=</span><span class="mi">3</span><span class="p">;</span><span class="nb">gets</span><span class="o">.</span><span class="n">to_i</span><span class="o">.</span><span class="n">times</span><span class="p">{</span><span class="n">i</span><span class="o">+=</span><span class="mi">5</span><span class="p">;</span><span class="mi">2</span><span class="o">**</span><span class="n">i</span><span class="o">%</span><span class="n">i</span><span class="o">==</span><span class="mi">2</span><span class="o">?</span><span class="p">(</span><span class="nb">p</span> <span class="n">i</span><span class="p">)</span><span class="ss">:redo</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>discussion</h2>

<ul>
<li>フェルマーテストやredoの実践例を挙げることができました。どちらもゴルフには有用であると思われます。</li>
</ul>


<h2>reference</h2>

<ol>
<li>cojnaさん <a href="https://abc096.contest.atcoder.jp/submissions/2465874">https://abc096.contest.atcoder.jp/submissions/2465874</a></li>
<li>%20さん <a href="https://abc096.contest.atcoder.jp/submissions/2467541">https://abc096.contest.atcoder.jp/submissions/2467541</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[atcoder] Ball]]></title>
    <link href="http://cielavenir.github.io/blog/2018/04/21/ball/"/>
    <updated>2018-04-21T22:00:00+09:00</updated>
    <id>http://cielavenir.github.io/blog/2018/04/21/ball</id>
    <content type="html"><![CDATA[<p><a href="https://bcu30-2018.contest.atcoder.jp/tasks/bcu30_2018_a">https://bcu30-2018.contest.atcoder.jp/tasks/bcu30_2018_a</a></p>

<h2>概要</h2>

<p>(現状問題公開されてないですからね…)</p>

<p>1個ずつ数字が書かれた球がA個ある。これを1個ずつ数字が書かれたB個の球にしたい。ただし変換は以下の2種類。</p>

<ul>
<li>数xと数yが書かれた2個の球を数x * yが書かれた1個の球にする</li>
<li>数xが書かれた1個の球を、(x%y==0となるような適当なyを選んで)数yと数x / yが書かれた2個の球にする</li>
</ul>


<p>この条件で最終状態を達成できるか？AおよびBは9以下、書かれている数はそれぞれ100以下。</p>

<h2>解法</h2>

<ul>
<li>探索…は必要ないです。乗算と余りのない除算のみで構成されるということは、素因数です。素因数の組が等しい…つまり、状態Aの数の積と状態Bの数の積が等しければYesです。</li>
<li>多分、制約は、積がint64に収まるようにってことなんだと思う。</li>
</ul>


<h2>感想</h2>

<ul>
<li>気づきづらい。</li>
<li>本当は「積が等しいかどうか判定せよ」という問題だったけど、がち勢が多かったので難しくしたらしい。</li>
<li>おかげで体感300点ぐらいでした…つらいよぅorz</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[atcoder] くるくる寿司]]></title>
    <link href="http://cielavenir.github.io/blog/2018/03/10/conveyor-sushi/"/>
    <updated>2018-03-10T22:16:50+09:00</updated>
    <id>http://cielavenir.github.io/blog/2018/03/10/conveyor-sushi</id>
    <content type="html"><![CDATA[<h2>概要</h2>

<ul>
<li>N(=3000)枚の寿司ネタ(a-zの26種類)を連続して流す(文字列Sとする)。</li>
<li>その中からM(=7)枚の部分列がQ(=30000)個問い合わせられる。ただし場合により部分列は連続していないことがある。</li>
<li>そのそれぞれに対し、S上でのインデックスを答える。</li>
</ul>


<h2>決定的アルゴリズム</h2>

<p>この問題、D=1とすれば、部分列は連続であることが保証されます。つまり、決定的アルゴリズムを使うことができます。</p>

<ul>
<li>N枚のうちで連続したM枚についてすべて異なるようにSを生成します。

<ul>
<li>完全に決定的にするには <a href="https://en.wikipedia.org/wiki/De_Bruijn_sequence">https://en.wikipedia.org/wiki/De_Bruijn_sequence</a> とか使うんですが、発展のために少しでもエントロピーを上げたいので、この部分は乱択を使って良いと思います。</li>
</ul>
</li>
<li>すべて異なることがわかっているのだから、M枚の部分文字列を単にSから探すだけで終わりです。</li>
<li><p>Sの生成さえできれば、1ケースに付き30000点、 <strong>合計300000点を確実に獲得できます。</strong></p></li>
<li><p>Rubyの事実上初版 <a href="https://rco-contest-2018-final-open.contest.atcoder.jp/submissions/2177816">https://rco-contest-2018-final-open.contest.atcoder.jp/submissions/2177816</a></p></li>
</ul>


<h2>発展</h2>

<ul>
<li>この状態であれば、0..Nのそれぞれ(j)に対し、qがS[j,M*3]中にこの順番で入っている数(ただしSの先頭に入っているほど重みを大きくする)が最大となるjをインデックスとして答える実装にすることで、D=2.5程度までは安定してインデックスを求めることができます。

<ul>
<li>「*3」は、元となる部分文字列の長さはM*3以下であることを期待しています。</li>
</ul>
</li>
<li><p>この「重み」が評価関数の肝になると思うのですが、調整の余地が残っている気がします。</p></li>
<li><p>C++の(コンテスト後)最終版(381792点) <a href="https://rco-contest-2018-final-open.contest.atcoder.jp/submissions/2179945">https://rco-contest-2018-final-open.contest.atcoder.jp/submissions/2179945</a></p></li>
<li><p>なお、コンテスト中は元となる部分文字列の長さがMであり、qの長さがM未満になりうると誤読していました、D=1.5にしかできなかったので324730点どまりでした。無念。</p></li>
</ul>


<h2>記事としての結論</h2>

<ul>
<li>順位表で、ある点数を取っている人が沢山いる場合は決定的アルゴリズムを疑うのは有用ではないかと思います。</li>
</ul>


<h2>補足</h2>

<ul>
<li>Sの一例は次のとおりです：</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>kzsbqmuxtqwazgonugucjaouqsihsmgjpvdiwscfaewltvsyolgoenjcmlylyzhqlhgaypshugqlrqfxjigsliujfconzsyrnctoeztichmtznzxfhfkcpytpenkyqxmwxeaihahytbkbqkzxplhdtnzbsnpwhdpzjykrgwoxihvkiqrgmruztplaiuqecvbrvlbkwsbylxgxytyhsyiedtfvkjiylnjmcmhvtlkrmqbafrhngsqrvfbkadbkjshyhbagjoyhqmwipzegzqjkpxoquezkdplxombjqkdtbgnghkdaregkmrxelhpfbfoewbnfewmqvyivwkhfahoryxqvqnoguwpcldzcqlbpfruijrenfofeajcnrtcnqlzhbwdxwglmbkhdfhdyhfinxkwksypafghuoilqofnmbiavcqtjszdtowlqsdienoymvlrhczlysmlokhbvluaelotziotdtcwnvsigjnfjfywkeyalcmxgwyojkjrigvlnoqehmgopgvhntqxvnmxobebiwbzomjracdoerdndvbdygoyeayujwhtoiouxhmdbqusqbmqwnucgbzligimgnaswqbcdjchomvihdwmksltueulypyjsrnjeyoipdfxtveurkuwxatwmawmvrahsgexunjrdzemesmkfxmdzjvqxijdqoabvahbzeklborztczqlicyzbpemqinofcfuvaznakgxaevhcmqgmnescpxghixypxsxcxcqsqpkldvycwkxhkqcwqlqxnpoazsohnoucsztqdizbntfdeteiximtuymuzodlquigwhzoqjezyqahpkifvbyhkibmhslzdwybpojuegpyopwcdigpepmgpgdgdlumhrnfscleimrhriyjxfypdawcybayotfguipljmjvzxixpxugnlzvqemwluzwskegvpmpvrftyrfegxwetstcouotmofsakluqdmliroqiaodhrbvxnqgwrqntenstlhykhjalzlwuqvcmwawfyqojhpymlgycsxyhgqxjvesdbifgxitdikicrtnuzywysuvxrsidvtwisowtvltfyvmeqdpnzhklcvxmygjzmtpfqzezwkgiwfdctpchqfljqenqbxhxuivldilsldfesvtebuxcpqsharzikqnvxudumxqlknkpblcicqjimafnaqbocjmguzcliduealstwhnyqcbypexcnyjndbwgvefjwlbzilcqejkylrwqmbzsxolbvuihmkvyjlwkitvthxsmozyektmnhxifxziytweudfnhipwstdzwqcekmuswolxrvwagpfhlgwqhqsgocwioykxpnlkpcjtzdfwfxnfrdjnpkmfkninbsmpdblqveasiejnqxthdioxfpruxabcjftnkgdphravwvzlcgtonqcftlckmvmxvhojwuzpetwyhzvcrgclxembtiksgkxrnwhpamnrcztbftknzijgsrxwnfxrzhacvfakjapavrbrmdacqhurnqozroebwnqjgmcnpdwkrhzwbrusawknwyglczmewansanujgkljlntcbxeqtuczwnsvawpgkzkzqnruqbnuoepfxylqmqfodorsrlyuhoxtgxqizpzokjqskcapuoctghnhsprjgyayidqelwfaufxvpcqgtbvgltgbrbmtawovsdvsnmjymqdtkjeptmhmcjenmwktbnvmqnjyuceclnpeqktpdhclyvwbszlqlvzbahuktlwyzphaoaftshmvelbhvbqyfatbjmknybdnpjpxtovwodvxzdapgwbekptxputuqwsfrcqyauvegdfcjsjudqnqiqsfzeoevlkdczpkwejcfekodqdcpzqsjfhgkovcjzhtnyosceiknalxljzpcsnqnpvigrmblkflihbrireolvlpmyunynuemvfkmyhryqvwcqrbnryjydnsusbesncslszxjpirhqxbfnsxlwsrbxurvjystorpmeiyxcmgynknfdlzqgatiyhmyfksjbcokchpbgxgjkiafsmzepbfmjzyntzcalnfufqlgqkwynmizavocyqijpuevsjdlvbwmycvepjzvhxznxlyhaeypicgiyfnxwasyukgmiwikmgtkvgwevafmkpnphuvczrjcgqewivjugpikduiofvaeshowxzcuxecemurqieiflobzxbxswciepxwfmhkevjxtngfxgckfvtztjyznqkyiymeauyvkdgspmzgxmxuoztrkpudrdowrysdcozcpbydsygxroclwhldqrzswnldbgjybwhrseljwmclgzabgpmthltqocahrzrnowgpcrzkazcyhxqdknlapzhjyhjsnejbnoeabjvdcxjkgcniokyxyjujkfmtgrxdvwpnbxficmzrbspvozlsmdoxdefbhgmfumuakdxdivrvzjfdngjqxutjeibzahvmktqjvryplivblnetnvukxjmvtgzidxhokfhicoaqvhpmwpoefwgqsznyczfetgnfqtwornmnslycqodunanvrzvtufmxdqubnqfbyzrwcmyteukdskmjhsijkhzqopckiobdabsyzujbxjnymiaroiwafpwbpihqnhlmxsopoxbqrfxhavgqurfpkgskntoavqdbfhqkfyspwmihrtesoemfnbwswyqutsaujcdkepdukawaigywzveizimplsnvalkgrgeuznvbxgeruhwoijvmcazucrvofdmvuqcsyejrmeyclsgafckhcdtpvlvymcvswgfzkphxbmgcdxzlxzqmdwocowclvwrspkurzjsbnxfxiatubjfriasfyxwdejpmsfvmfptijwykizxoubgetmbsogpwqwkqlsfxklopxpwjwrpizgqonplrpfpmqagnmcgcoqgemovxtxrkdnwqugvmyqetbiqchfcmpsunwjnuplmzwjplfj</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
</feed>
